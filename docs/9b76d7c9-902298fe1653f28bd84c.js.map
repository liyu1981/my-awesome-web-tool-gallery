{"version":3,"file":"9b76d7c9-902298fe1653f28bd84c.js","mappings":";kIAgCA,IAAIA,EAAI,EAAQ,MAEZC,EAAS,EAAQ,MAEjBC,EAAO,EAAQ,MAEfC,EAAW,EAAQ,MAEnBC,EAAQ,UAERC,EAAM,EAAQ,MAEdC,EAAQ,UAERC,EAAQ,EAAQ,MAEhBC,EAAU,EAAQ,MAElBC,EAAe,EAAQ,MAEvBC,EAAa,EAAQ,MAUrBC,GALU,EAAQ,MAKT,WACX,aAEA,IAAIC,EAkBAC,EAEJC,EAEAC,EACIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAzBJC,EAAO,CACL,KAAK,EACL,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,MAAM,EACN,KAAK,EACL,MAAM,EACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,GAcPC,EAAe,GACXC,EAAU,IAAIvB,EAAOwB,aAEzB,SAASC,EAAYC,EAAMC,EAAUC,GACnC,IAAIC,EAAMC,EAYV,OAVIH,GACFE,EAAO,GACPC,EAAavB,EAAQuB,aAErBD,EAAO,YACPC,EAAavB,EAAQwB,eAGvBL,EAAOA,EAAKM,SAER,gBAAgBC,KAAKP,QAIS,IAA9BI,EAAWI,QAAQR,IACN,WAAXE,EAAEC,OAAsB9B,EAAEoC,IAAI5B,EAAQ6B,QAASV,MACjDW,EAAM,OAAQT,EAAGC,EAAMH,IAChB,IAWb,SAASY,EAAaC,EAAKC,GACzB,QAAKD,MACAA,EAAIE,YAAcF,EAAIC,QAAUA,GAsBvC,SAASE,EAAWC,EAASC,GAC3B,IAAKA,EAAMC,SACT,OAAO,EAGT,IAAIC,EAAOF,EAAME,KAEjB,GAAIA,GAAQA,EAAKC,sBACf,GAAI1C,EAAM2C,QAAS,CAEjB,IAAKF,EAAKG,IACR,OAAO,EAGT,GAAIL,EAAMM,WACR,OAAO,QAGN,GAAIJ,GAAQA,EAAKG,MAAQ5C,EAAM2C,QACpC,OAAO,EAIT,QAAIF,GAAQA,EAAKK,YAAc9C,EAAM2C,UAC9B3C,EAAM+C,OAAOC,SAAWhD,EAAMiD,iBAKpB,UAAbV,EAAMW,IAAoBZ,EAAUlC,EAAW+C,OAAWnD,EAAM+C,OAAOK,aAI1D,UAAbb,EAAMW,IAAoBZ,EAAUlC,EAAWiD,QAC1CrD,EAAMiD,aAMjB,SAASK,EAASC,EAAKC,GACrB,OAAOD,EAAIE,QAAQ,iBAAiB,SAAUC,EAAGC,GAC/C,IAAIC,EAAIJ,EAAKG,GACb,MAAoB,iBAANC,GAA+B,iBAANA,EAAiBA,EAAIF,KAIhE,SAASG,EAAQC,EAAMC,GACrBC,OAAOC,KAAKF,GAAKG,SAAQ,SAAU7C,GAC7B3B,EAAEoC,IAAIzB,EAAO8D,UAAW9C,KAC5ByC,EAAKzC,GAAQ0C,EAAI1C,OAwBrB,SAAS+C,IACP,IAAIC,GArBN,WACE,GAAIrE,EAAM+C,OAAOuB,WAAY,CAC3B,IAAK,IAAIC,KAAcrE,EAAQsE,KAAKC,eACDC,IAA7B1E,EAAM+C,OAAOwB,IAA8BrE,EAAQyE,aAAaJ,KAClEvE,EAAM+C,OAAOwB,IAAc,GAI/B,IAAK,IAAIK,KAAY1E,EAAQsE,KAAKK,cACDH,IAA3B1E,EAAM+C,OAAO6B,KACf5E,EAAM+C,OAAO6B,IAAY,IAY/BE,IAKAT,EAAWrE,EAAM+E,mBAGfC,EAAK,OAAQhF,EAAMiF,OAAOC,KAAM,YAAab,GAG3CrE,EAAM2C,SACRkB,EAAQ9C,EAAYnB,EAAKuF,gBAAgB,IAGvCnF,EAAMoF,SACRvB,EAAQ9C,EAAYnB,EAAKuF,gBAAgB,IAGvCnF,EAAMqF,SACRxB,EAAQ9C,EAAYnB,EAAKuF,gBAAgB,IAQf,WAAxBnF,EAAM+C,OAAOC,QAAuB,iBAAkBhD,EAAM+C,QAC9DiC,EAAK,OAAQhF,EAAMiF,OAAOC,KAAM,SAAU,gBAGxClF,EAAM+C,OAAOK,SAIVpD,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,SAAU,IAI7ClF,EAAM+C,OAAOwC,UAIVvF,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,UAAW,IAI9ClF,EAAM+C,OAAOyC,OACf3B,EAAQ9C,EAAYnB,EAAK4F,OAGvBxF,EAAM+C,OAAO0C,OACf5B,EAAQ9C,EAAYnB,EAAK6F,OAGvBzF,EAAM+C,OAAO2C,OACf7B,EAAQ9C,EAAYnB,EAAK8F,OAGvB1F,EAAM+C,OAAO4C,UACf9B,EAAQ9C,EAAYnB,EAAK+F,SACzB9B,EAAQ9C,EAAYnB,EAAKgG,OAGvB5F,EAAM+C,OAAO8C,OACfhC,EAAQ9C,EAAYnB,EAAKiG,OAGvB7F,EAAM+C,OAAO+C,SACfjC,EAAQ9C,EAAYnB,EAAKkG,SAGvB9F,EAAM+C,OAAOgD,aACflC,EAAQ9C,EAAYnB,EAAKmG,aAGvB/F,EAAM+C,OAAO6C,OACf/B,EAAQ9C,EAAYnB,EAAKgG,MACzB/B,EAAQ9C,EAAYnB,EAAKiG,QAGvB7F,EAAM+C,OAAOiD,OACfnC,EAAQ9C,EAAYnB,EAAKoG,OAGvBhG,EAAM+C,OAAOkD,MACfpC,EAAQ9C,EAAYnB,EAAKqG,MAGvBjG,EAAM+C,OAAOmD,UACfrC,EAAQ9C,EAAYnB,EAAKsG,SACzBrC,EAAQ9C,EAAYnB,EAAKiG,QAGvB7F,EAAM+C,OAAOoD,aACftC,EAAQ9C,EAAYnB,EAAKsG,SACzBrC,EAAQ9C,EAAYnB,EAAKiG,OACzBhC,EAAQ9C,EAAYnB,EAAKuG,aAGvBnG,EAAM+C,OAAOqD,aACfvC,EAAQ9C,EAAYnB,EAAKwG,aAGvBpG,EAAM+C,OAAOsD,SACfxC,EAAQ9C,EAAYnB,EAAKyG,SAGvBrG,EAAM+C,OAAOuD,QACfzC,EAAQ9C,EAAYnB,EAAK0G,QAGvBtG,EAAM+C,OAAOwD,UACf1C,EAAQ9C,EAAYnB,EAAK2G,UAGvBvG,EAAM+C,OAAOyD,QACf3C,EAAQ9C,EAAYnB,EAAK4G,QAGvBxG,EAAM+C,OAAO0D,KACf5C,EAAQ9C,EAAYnB,EAAK6G,KAGvBzG,EAAM+C,OAAO2D,KACf7C,EAAQ9C,EAAYnB,EAAK8G,KAGvB1G,EAAM+C,OAAO4D,OACf9C,EAAQ9C,EAAYnB,EAAK+G,OAK7B,SAAS3B,EAAK4B,EAAMrE,EAAOmB,EAAGC,GAC5B,IAAIkD,EAAaC,KAAKC,MAAMxE,EAAMyE,KAAOhH,EAAMiH,MAAMC,OAAS,KAC1DC,EAAUtH,EAASuH,OAAOR,GAAMS,KAChCC,EAAY,CACdjG,KAAM,cACN2F,KAAMzE,EAAMyE,KACZO,UAAWhF,EAAMiF,KACjBL,QAASA,EAAU,KAAON,EAAa,cACvCY,IAAKN,EACLP,KAAMA,EACNlD,EAAGA,EACHC,EAAGA,GAGL,MADA2D,EAAUI,OAASpE,EAAS6D,EAASG,GAAa,KAAOT,EAAa,cAChES,EAGR,SAASK,IACP,IAAIC,EAAU5H,EAAM6H,aAChBnI,EAAEoI,QAAQF,KACdvH,EAAO+G,OAAS1H,EAAEqI,OAAO1H,EAAO+G,QAAQ,SAAUY,GAChD,OAAOJ,EAAQI,EAAIhB,UAIvB,SAAS1B,EAAQsB,EAAMrF,EAAGmC,EAAGC,EAAGsE,EAAGC,GACjC,IAAIC,EAAIC,EAAGC,EAAGC,EAEd,GAAI,WAAW1G,KAAKgF,GAAO,CACzB,GAAI5G,EAAM4H,QAAQhB,GAAO,OACzB0B,EAAMzI,EAAS0I,SAAS3B,OACf,SAAShF,KAAKgF,GACvB0B,EAAMzI,EAASuH,OAAOR,GACb,SAAShF,KAAKgF,KACvB0B,EAAMzI,EAAS2I,KAAK5B,IA6BtB,MAxBa,WAFbrF,EAAIA,GAAKvB,EAAMiF,OAAOC,MAAQ,IAExBhC,KAEJ3B,EAAIvB,EAAMiF,OAAOwD,MAGnBL,EAAI7G,EAAEyF,KACNmB,EAAK5G,EAAEiG,MACPa,EAAI,CACFnF,GAAI,UACJuE,IAAKa,EAAIjB,KACTT,KAAM0B,EAAI1B,KACV8B,SAAU1I,EAAMiH,MAAMmB,EAAI,IAAM,GAChCpB,KAAMoB,EACNb,UAAWY,EACXQ,MAAOtI,EAAOsI,MACdjF,EAAGA,EACHC,EAAGA,EACHsE,EAAGA,EACHC,EAAGA,IAEHR,OAASpE,EAASgF,EAAIjB,KAAMgB,GAC9BhI,EAAO+G,OAAOwB,KAAKP,GACnBV,IACItH,EAAO+G,OAAOF,QAAUlH,EAAM+C,OAAO8F,QAAQ7D,EAAK,OAAQzD,GACvD8G,EAGT,SAASS,EAAUC,EAAGX,EAAGD,EAAIzE,EAAGC,EAAGsE,EAAGC,GACpC,OAAO5C,EAAQyD,EAAG,CAChB/B,KAAMoB,EACNZ,KAAMW,GACLzE,EAAGC,EAAGsE,EAAGC,GAGd,SAASlG,EAAM+G,EAAGxH,EAAGmC,EAAGC,EAAGsE,EAAGC,GAC5B5C,EAAQyD,EAAGxH,EAAGmC,EAAGC,EAAGsE,EAAGC,GAGzB,SAASc,EAAQD,EAAGX,EAAGD,EAAIzE,EAAGC,EAAGsE,EAAGC,GAClC,OAAOlG,EAAM+G,EAAG,CACd/B,KAAMoB,EACNZ,KAAMW,GACLzE,EAAGC,EAAGsE,EAAGC,GAId,SAASe,EAAYC,EAAM3G,GACzBlC,EAAO8I,UAAUP,KAAK,CACpB1F,GAAI,aACJgG,KAAMA,EACN3G,MAAOA,EACPqE,KAAMrE,EAAMJ,MAAMsB,QAAQ,qBAAsB,UAWpD,SAAS2F,EAAiBC,EAAgBC,GACxC,IAAIC,EAAOF,EAAeE,KAAKC,MAAM,KAAKC,KAAI,SAAUC,GACtD,OAAOA,EAAE/H,UAEPgI,EAAS,GAEb,GAA4B,kBAAxBN,EAAe7H,KAAnB,CAKA,GAA4B,YAAxB6H,EAAe7H,KAyBjB,IAAK,IAAIoI,KAxBTL,EAAKrF,SAAQ,SAAU2F,EAAMC,GAC3B,IAAIC,EAAQF,EAAKL,MAAM,KACnBI,EAAMG,EAAM,GAAGpI,OAEnB,GAAY,MAARiI,GAAgBA,EAAI1C,OAUF,MAAlB0C,EAAII,OAAO,IACbJ,EAAMA,EAAIK,MAAM,GAChB5J,EAAO8D,UAAUyF,GAAOA,SACjB7I,EAAW6I,IAElBD,EAAOC,GAAOG,EAAM7C,OAAS,GAAyB,SAApB6C,EAAM,GAAGpI,WAf7C,CAEE,GAAImI,EAAM,GAAKA,IAAQP,EAAKrC,OAAS,EACnC,OAGFlF,EAAM,OAAQqH,OAYlBxF,EAAQ9C,EAAY4I,GAEJA,EACVjK,EAAEoC,IAAI6H,EAAQC,KAChBrJ,EAASqJ,GAAOP,GAKM,aAAxBA,EAAe7H,MACjB+H,EAAKrF,SAAQ,SAAUgG,EAAGJ,GACxB,GAAKI,EAAEhD,OAUPlH,EAAMmK,MAAM,WAAWC,YAAYF,OAVnC,CAEE,GAAIJ,EAAM,GAAKA,IAAQP,EAAKrC,OAAS,EACnC,OAGFlF,EAAM,OAAQqH,OAQQ,YAAxBA,EAAe7H,OACjBV,EAAcA,GAAe,GAC7ByI,EAAKrF,SAAQ,SAAU6E,GACrB,IAAIsB,EAAMtB,EAAEiB,OAAO,GAGfK,IAFMtB,EAAEiB,OAAOjB,EAAE7B,OAAS,IAEF,MAARmD,GAAwB,MAARA,IAClCtB,EAAIA,EAAEuB,OAAO,EAAGvB,EAAE7B,OAAS,GAAGzD,QAAQ,MAAQ,MAGhD3C,EAAYiI,IAAK,MAIrB,IAAIwB,EAAU,CAAC,gBAAiB,YAAa,WAAY,gBAAiB,SAAU,SAAU,UAElE,WAAxBlB,EAAe7H,MAA6C,WAAxB6H,EAAe7H,MAA6C,oBAAxB6H,EAAe7H,OACzF+H,EAAKrF,SAAQ,SAAU2F,GACrB,IAGIW,EAHAT,EAAQF,EAAKL,MAAM,KACnBI,EAAMG,EAAM,GAAGpI,OACf8I,EAAMV,EAAM7C,OAAS,EAAI6C,EAAM,GAAGpI,OAAS,GAG/C,GAAKP,EAAYwI,EAA6B,oBAAxBP,EAAe7H,KAA4B6H,GAIjE,GAAIkB,EAAQ1I,QAAQ+H,IAAQ,EAE1B,GAAY,UAARa,EAAiB,CAGnB,GAAyB,iBAFzBD,GAAaC,KAEyBC,SAASF,IAAcA,GAAa,GAAK1D,KAAKC,MAAMyD,KAAeA,EAEvG,YADAxI,EAAM,OAAQqH,EAAgBoB,GAIhCzK,EAAM+C,OAAO6G,GAAOY,OAEpBxK,EAAM+C,OAAO6G,GAAe,WAARA,GAAmB,MAZ3C,CAkBA,GAAY,cAARA,EAEF,OAAI5J,EAAMmK,MAAM,iBAAyBnI,EAAM,QACnC,SAARyI,GAA0B,UAARA,OAA6BzI,EAAM,OAAQqH,QACjErJ,EAAM+C,OAAO4H,UAAoB,SAARF,GAI3B,GAAY,aAARb,EAmBJ,GAAY,WAARA,EAsBJ,GAAY,WAARA,EAsBJ,GAAY,YAARA,EAqBJ,GAAY,WAARA,EAcJ,GAAY,WAARA,EA+BJ,GATY,WAARA,IAIGgB,GAAc5K,EAAMmK,QACvBnI,EAAM,OAAQqH,EAAgB,WAItB,cAARO,EAAJ,CAoCA,IAQIiB,EARAC,EAAQ,oBAAoBC,KAAKnB,GAErC,GAAIkB,EAEF9K,EAAM4H,QAAQkD,EAAM,IAAmB,MAAbA,EAAM,OAMtB,SAARL,GAA0B,UAARA,EAkBtBzI,EAAM,OAAQqH,GAjBgB,WAAxBA,EAAe7H,MACjBqJ,EAAK3K,EAAQ8K,QAAQpB,IAAQA,EAC7B5J,EAAM+C,OAAO8H,GAAc,SAARJ,OAEU/F,IAAzBxE,EAAQ+K,SAASJ,KACnB7K,EAAM+C,OAAO8H,IAAO7K,EAAM+C,OAAO8H,KAEF,oBAAxBxB,EAAe7H,KAExBxB,EAAM+C,OAAOmI,SAAStB,GAAe,SAARa,EAE7BzK,EAAM+C,OAAO6G,GAAe,SAARa,MA1DxB,CACE,OAAQA,GACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACHzK,EAAM+C,OAAOoI,KAAM,EACnBnL,EAAM+C,OAAOqI,WAAaX,EAC1B,MAEF,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACHzK,EAAM+C,OAAOoI,KAAM,EAEnBnL,EAAM+C,OAAOqI,WAAaX,EAAM,KAChC,MAEF,QACEzI,EAAM,OAAQqH,GAGbuB,GAAc5K,EAAMmK,QACvBnI,EAAM,OAAQqH,EAAgB,kBA5DhC,OAAQoB,GACN,IAAK,OACHzK,EAAM+C,OAAOC,QAAS,EACtB,MAEF,IAAK,QACHhD,EAAM+C,OAAOC,QAAS,EACtB,MAEF,IAAK,SACL,IAAK,UACHhD,EAAM+C,OAAOC,OAASyH,EACtB,MAEF,QACEzI,EAAM,OAAQqH,QA7BlB,GACO,SADCoB,EAEJzK,EAAM6H,aAAawB,EAAerC,OAAQ,EAC1CW,SAIA3F,EAAM,OAAQqH,QA5BlB,OAAQoB,GACN,IAAK,OACHzK,EAAM+C,OAAOsI,SAAU,EACvB,MAEF,IAAK,QACHrL,EAAM+C,OAAOsI,SAAU,EACvB,MAEF,IAAK,SACHrL,EAAM+C,OAAOsI,QAAU,SACvB,MAEF,QACErJ,EAAM,OAAQqH,QApClB,OAAQoB,GACN,IAAK,OACHzK,EAAM+C,OAAOuI,QAAS,EACtB,MAEF,IAAK,QACHtL,EAAM+C,OAAOuI,QAAS,EACtB,MAEF,IAAK,OACL,IAAK,SACHtL,EAAM+C,OAAOuI,OAASb,EACtB,MAEF,QACEzI,EAAM,OAAQqH,QArClB,OAAQoB,GACN,IAAK,OACHzK,EAAM+C,OAAOwI,QAAS,EACtB,MAEF,IAAK,QACHvL,EAAM+C,OAAOwI,OAAS,QACtB,MAEF,IAAK,QACL,IAAK,QACHvL,EAAM+C,OAAOwI,OAAS,QACtB,MAEF,QACEvJ,EAAM,OAAQqH,QAlClB,OAAQoB,GACN,IAAK,OACL,IAAK,QACHzK,EAAM+C,OAAOyI,SAAmB,SAARf,EACxB,MAEF,IAAK,SACL,IAAK,SACHzK,EAAM+C,OAAOyI,SAAWf,EACxB,MAEF,QACEzI,EAAM,OAAQqH,QAsLtBjF,UA5SAkF,EAASmC,kBAAmB,EAkUhC,SAASC,EAAKC,GACZ,IAEIpK,EAFAqK,EAAID,GAAK,EACTE,EAAIlL,EAAUuG,OAGlB,GAAI0E,EAAIC,EACN,OAAOlL,EAAUiL,GAGnB,KAAOC,GAAKD,GAAG,CAKb,KAJArK,EAAIX,EAAI2B,SAQN,OAAK5B,EAAUuG,OAIRvG,EAAUkL,EAAI,GAHZ7L,EAAMiF,OAAOC,KAMxBvE,EAAUkL,GAAKtK,EACfsK,GAAK,EAGP,OAAOtK,EAGT,SAASuK,IACP,IACIvK,EADAqK,EAAI,EAGR,GACErK,EAAImK,EAAKE,WACO,cAATrK,EAAE2B,IAEX,OAAO3B,EAiBT,SAASwK,EAAQC,EAAUC,GACzB,IAAIC,EAAYlM,EAAMiF,OAAOC,KAiB7B,IAfI8G,GAAYE,EAAUhJ,KAAO8I,IAC3BC,EACmB,UAAjBC,EAAUhJ,GACZlB,EAAM,OAAQiK,EAAcA,EAAa/I,IAEzClB,EAAM,OAAQkK,EAAWF,EAAUC,EAAa/I,GAAI+I,EAAajF,KAAMkF,EAAU/J,OAEvD,iBAAnB+J,EAAU1K,MAA2B0K,EAAU/J,QAAU6J,GAClEhK,EAAM,OAAQkK,EAAWF,EAAUE,EAAU/J,QAIjDnC,EAAMiF,OAAOkH,KAAOnM,EAAMiF,OAAOwD,KACjCzI,EAAMiF,OAAOwD,KAAOzI,EAAMiF,OAAOC,OAExB,CAQP,GAPAlF,EAAMiF,OAAOC,KAAOvE,EAAUyL,SAAWxL,EAAI2B,QAExCvC,EAAMiF,OAAOC,MAEhBF,EAAK,OAAQhF,EAAMiF,OAAOwD,MAGC,UAAzBzI,EAAMiF,OAAOC,KAAKhC,IAA2C,YAAzBlD,EAAMiF,OAAOC,KAAKhC,GACxD,OAOF,GAJIlD,EAAMiF,OAAOC,KAAKmH,OACpBrM,EAAMiF,OAAOC,KAAKmH,QAGhBrM,EAAMiF,OAAOC,KAAKoH,UACpBlD,EAAiBpJ,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOwD,WAEjD,GAA6B,cAAzBzI,EAAMiF,OAAOC,KAAKhC,GACpB,OAkBR,SAASqJ,EAAYjK,EAASmG,EAAMvD,GAMlC,OALIsH,UAAUtF,QAAU,IACtBuB,EAAOzI,EAAMiF,OAAOwD,KACpBvD,EAAOlF,EAAMiF,OAAOC,SAGN,OAAZA,EAAKhC,IAAeZ,EAAUlC,EAAWqM,QAI7B,MAAZvH,EAAKhC,IAA0B,MAAZgC,EAAKhC,IAA0B,MAAZgC,EAAKhC,KAI3CgC,EAAKwH,QAAUjE,EAAKiE,OAKZ,UAAZjE,EAAKvF,IAAkBuF,EAAKkE,IAAMzH,EAAKyH,OAC7BC,EAASnE,EAAMvD,IAgC3B,SAAS2H,EAAWvK,EAASqK,GAC3B,IAAIG,EAIArE,EAHAsE,GAAU,EACVC,GAAW,EACXC,EAAU3K,EAAUlC,EAAW6M,QAcnC,GAZA3K,IAAYlC,EAAW6M,QACvBjN,EAAMkN,UAAUtE,OACa,UAAzB5I,EAAMiF,OAAOC,KAAKhC,IAAgBlB,EAAM,OAAQhC,EAAMiF,OAAOwD,MACjEsD,IAEIkB,IACFjN,EAAMmK,MAAM,UAAYnK,EAAMiF,OAAOwD,KAAKtG,MAC1CnC,EAAMiF,OAAOwD,KAAK0E,YAAa,GAGjC1E,EAAOzI,EAAMiF,OAAOwD,KAEhBwE,GAAWxE,EAAK2E,OAAS3E,EAAK4E,QAAU5E,EAAK4E,OAAO/K,IACtDwK,EAAO9M,EAAMiF,OAAOwD,KAAK2E,IAAI9K,QAQ7B,IANItC,EAAMiF,OAAOwD,KAAK6E,IACpBR,EAAO9M,EAAMiF,OAAOwD,KAAK6E,IAAIhL,EAASqK,GAEtC3K,EAAM,OAAQhC,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOwD,KAAKvF,IAG9CyJ,EAAM3M,EAAMiF,OAAOC,KAAKqI,MAAQhB,EAAYjK,IACjDyK,EAAsC,UAA5B/M,EAAMiF,OAAOwD,KAAKtG,MAC5B6K,EAAuC,WAA5BhN,EAAMiF,OAAOwD,KAAKtG,MAIzB2K,IAASA,EAAK3K,OAAS2K,EAAKU,OAASV,EAAKU,MAAMrL,SAI/B,QAAf2K,EAAK3K,OAAmB2K,EAAKU,OAASV,EAAKU,MAAMrL,OAA8B,MAArB2K,EAAKU,MAAMrL,SACvE4K,GAAU,EAGND,EAAK3K,QAAUnC,EAAMiF,OAAOwD,KAAKtG,QACnC6K,GAAW,IAKjBjB,IAEIgB,GAAoC,MAAzB/M,EAAMiF,OAAOwD,KAAKvF,IAAuC,MAAzBlD,EAAMiF,OAAOC,KAAKhC,IAC/DoC,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAG3BuE,GAAqC,MAAzBhN,EAAMiF,OAAOwD,KAAKvF,IAAuC,MAAzBlD,EAAMiF,OAAOC,KAAKhC,IAChEoC,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAG3BqE,GAAQ9M,EAAMiF,OAAOwD,KAAKgF,IAC5BX,EAAO9M,EAAMiF,OAAOwD,KAAKgF,IAAInL,EAASwK,GAEtC9K,EAAM,OAAQhC,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOwD,KAAKvF,IAMzD,OADAlD,EAAMkN,UAAUQ,MACTZ,EAIT,SAASF,EAASY,EAAOG,GACvB,OAAOH,EAAMxG,QAAU2G,EAAOC,WAAaD,EAAO3G,MAGpD,SAAS6G,EAAmBf,EAAMgB,GAC3B9N,EAAM+C,OAAOgL,UAAanB,EAASE,EAAMgB,IAC5CxI,EAAQ,OAAQwI,EAAOA,EAAM3L,OAIjC,SAAS6L,EAAYzM,GACdqL,EAASrL,EAAGvB,EAAMiF,OAAOC,OAC5BI,EAAQ,OAAQ/D,EAAGA,EAAEY,OAoBzB,SAAS8L,EAAWC,GAClB,IAAI/B,EAAOnM,EAAMiF,OAAOkH,KACpB1D,EAAOzI,EAAMiF,OAAOwD,KAcxB,GAbAyF,EAAOA,GAAQ,GAEVtB,EAAST,EAAM1D,IACbzI,EAAM+C,OAAOoL,WACZF,EAAWT,QACblI,EAAQ,OAAQmD,GAChBwF,EAAWT,OAAQ,GAGrBlI,EAAQ,OAAQ6G,EAAM1D,EAAKtG,QAI3BnC,EAAMiF,OAAOC,KAAK9C,cAAgB8L,EAAKE,WAAYpO,EAAM2C,SAE3D,OAAQ3C,EAAMiF,OAAOC,KAAK/C,OACxB,IAAK,QACL,IAAK,OACL,IAAK,QACL,IAAK,WACL,IAAK,UACL,IAAK,KACL,IAAK,OACL,IAAK,UACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,aACL,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,QACL,IAAK,OAEH,OADAH,EAAM,OAAQhC,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,QAC5C,EAIb,GAA+B,iBAA3BnC,EAAMiF,OAAOC,KAAK1D,KACpB,OAAQxB,EAAMiF,OAAOC,KAAK/C,OACxB,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACH,QAAI+L,EAAKG,gBAITrM,EAAM,OAAQhC,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,QAC5C,GAIb,OAAO,EAwBT,SAASmM,EAAO5E,EAAGiC,GACjB,IAAI4C,EAAIvO,EAAMwO,OAAO9E,GAiBrB,OAfK6E,GAAkB,iBAANA,IACfvO,EAAMwO,OAAO9E,GAAK6E,EAAI,CACpBrL,GAAIwG,EACJ6D,IAAK5B,EAOLgB,IAAKhB,EACLxJ,MAAOuH,IAIJ6E,EAYT,SAASE,EAAM/E,GACb,IAAI6E,EAAID,EAAO5E,EAAG,GAElB,OADA6E,EAAEE,OAAQ,EACHF,EAcT,SAASG,EAAKhF,EAAGiF,GACf,IAAIJ,EAAIE,EAAM/E,GAGd,OAFA6E,EAAEnM,WAAamM,EAAE/L,UAAW,EAC5B+L,EAAEnB,IAAMuB,EACDJ,EAiBT,SAASK,EAAUlF,EAAGiF,GACpB,IAAIJ,EAAIG,EAAKhF,EAAGiF,GAEhB,OADAJ,EAAEM,OAAQ,EACHN,EAWT,SAASO,EAAYP,GACnB,IAAItG,EAAIsG,EAAErL,GAAG8G,OAAO,GAMpB,OAJI/B,GAAK,KAAOA,GAAK,KAAOA,GAAK,KAAOA,GAAK,OAC3CsG,EAAEnM,WAAamM,EAAE/L,UAAW,GAGvB+L,EAeT,SAASQ,EAAOrF,EAAGiF,GACjB,IAAIJ,EAAID,EAAO5E,EAAG,KAkBlB,OAjBAoF,EAAYP,GACZA,EAAEjB,IAAmB,mBAANqB,EAAmBA,EAAI,SAAUrM,GAc9C,OAbA0M,KAAKC,MAAQ,QACbD,KAAKlB,MAAQjB,EAAWvK,EAAS,KAEjB,OAAZ0M,KAAK9L,IAA2B,OAAZ8L,KAAK9L,KACvBlD,EAAM+C,OAAOmM,UACf5J,EAAQ,OAAQ0J,KAAMA,KAAK9L,IAGzB8L,KAAKlB,OACPqB,GAAoB7M,EAAS0M,KAAKlB,MAAOkB,OAItCA,MAEFT,EAeT,SAAS/M,GAAKkI,EAAGiF,GACf,IAAIJ,EAAID,EAAO5E,EAAG,GAGlB,OAFA6E,EAAE/M,KAAOkI,EACT6E,EAAEjB,IAAMqB,EACDJ,EAiBT,SAASa,GAAQ/N,EAAMgO,GACrB,IAAId,EAAI/M,GAAKH,EAAMgO,GAGnB,OAFAd,EAAEnM,YAAa,EACfmM,EAAE/L,UAAW,EACN+L,EAoBT,SAASe,GAAmBjO,EAAMoB,GAChC,IAAI8L,EAAI/M,GAAKH,EAAMrB,EAAMwO,OAAO,gBAAgBlB,KAOhD,OANA7K,EAAOA,GAAQ,IACVC,sBAAuB,EAC5B6L,EAAEpM,MAAQd,EACVkN,EAAEnM,YAAa,EACfmM,EAAE/L,UAAW,EACb+L,EAAE9L,KAAOA,EACF8L,EAkBT,SAAS7B,GAAMhD,EAAGiF,EAAGhD,EAAGtD,GACtB,IAAIkG,EAAID,EAAO5E,EAAGiC,GAsBlB,OArBAmD,EAAYP,GACZA,EAAE7B,OAAQ,EAEV6B,EAAEd,IAAM,SAAUnL,EAASwK,GASzB,OARKzE,GACHwF,EAAmB7N,EAAMiF,OAAOkH,KAAMnM,EAAMiF,OAAOwD,MAG1C,OAANiB,GAAoB,eAANA,GAAmC,MAAZoD,EAAK5J,IAC7CoC,EAAQ,OAAQwH,EAAM,KAGP,mBAAN6B,EACFA,EAAErM,EAASwK,EAAMkC,OAExBA,KAAKlC,KAAOA,EACZkC,KAAKlB,MAAQjB,EAAWvK,EAASqJ,GAC1BqD,OAIJT,EAyCT,SAASgB,GAAS7F,EAAGiF,GACnB,IAAIJ,EAAID,EAAO5E,EAAG,KA6BlB,OA5BA6E,EAAE7B,OAAQ,EAEV6B,EAAEd,IAAM,SAAUnL,EAASwK,GACzBe,EAAmB7N,EAAMiF,OAAOkH,KAAMnM,EAAMiF,OAAOwD,MACnDuG,KAAKlC,KAAOA,EACZ,IAAIgB,EAAQkB,KAAKlB,MAAQjB,EAAWvK,EAAS,KAoB7C,OAlBIL,EAAa6K,EAAM,QAAU7K,EAAa6L,EAAO,OACnDxI,EAAQ,OAAQ0J,MACPL,GACTA,EAAEa,MAAMR,KAAM,CAAC1M,EAASwK,EAAMgB,IAG3BhB,GAASgB,GACZ9I,EAAK,OAAQhF,EAAMiF,OAAOwD,MAGZ,MAAZqE,EAAK5J,IACPoC,EAAQ,OAAQwH,EAAM,KAGP,MAAbgB,EAAM5K,IACRoC,EAAQ,OAAQwI,EAAO,KAGlBkB,MAGFT,EAWT,SAASkB,GAAsBlN,GAC7B,MAAuB,UAAhBA,EAAM0M,OAAkC,OAAb1M,EAAMW,IAA4B,OAAbX,EAAMW,GAG/D,IAAIwM,GAAe,GA2BnB,SAASC,GAAa7C,EAAMgB,EAAO9N,GACjC,IAAI4P,EACJ,OAAI5P,EAAM+C,OAAO8M,cACZ/C,IAASgB,KACd8B,EAAS5P,EAAMoF,QAAUsK,GAAaI,IAAMJ,GAAaK,IAEtC,iBAAfjC,EAAMtM,MAA2C,WAAhBsM,EAAM3L,OAAoC,aAAd2K,EAAKtL,OACjD,WAAfsL,EAAK3K,OACFnC,EAAMgQ,UACT1K,EAAQ,OAAQwH,EAAM,SAAU,OAG3B,IAGDpN,EAAEuQ,SAASL,EAAQ9C,EAAK3K,UAepC,SAAS+N,GAAapD,EAAM9M,GAC1B,IAAImQ,GAAW,EAaf,MAXkB,SAAdrD,EAAKtL,MAAgD,OAA7BxB,EAAMmK,MAAM,aACtCgG,GAAW,EAEU,iBAAdrD,EAAKtL,OACRxB,EAAM+C,OAAO6C,MAAuB,WAAfkH,EAAK3K,MAC5BgO,GAAW,GACFnQ,EAAM+C,OAAOmD,SAA2B,WAAf4G,EAAK3K,OAAqC,aAAf2K,EAAK3K,QAClEgO,GAAW,IAIRA,EAiDT,SAAShB,GAAoB7M,EAASwK,EAAMsD,EAAalQ,GACvD,IAAImQ,EAAqBnQ,GAAWA,EAAQmQ,mBAG5C,GAFAD,EAAcA,GAAetD,EAEzB9M,EAAM+C,OAAOuN,OAAQ,CACvB,IAAIC,EA3CR,SAA6BzD,GAC3B,IAAI0D,EAAU,CAAC,QAAS,cAAe,UAAW,WAAY,WAAY,OAAQ,iBAAkB,QAAS,YAAa,eAAgB,eAAgB,WAAY,WAAY,OAAQ,aAAc,aAAc,YAAa,WAAY,SAAU,eAAgB,SAAU,aAAc,iBAAkB,SAAU,gBAAiB,SAAU,cAAe,YAAa,cAAe,cAAe,aAAc,oBAAqB,YAiBjbC,EAfJ,SAASC,EAAcC,GACrB,GAAmB,iBAARA,EACX,MAAqB,cAAdA,EAAI7C,MAAwB6C,EAAMD,EAAcC,EAAI7D,MAa7C4D,CAAc5D,GAC9B,GAAI2D,EAAW,OAXf,SAAoBE,GAClB,MAAQA,EAAIvO,YAAkC,iBAAbuO,EAAI7D,MACnC6D,EAAMA,EAAI7D,KAGZ,GAAI6D,EAAIvO,YAAcoO,EAAQ3O,QAAQ8O,EAAIxO,QAAU,GAAKnC,EAAMmK,MAAM,WAAWyG,aAAaD,EAAIxO,OAC/F,OAAOwO,EAAIxO,MAKO0O,CAAWJ,GAwBZK,CAAoBhE,GACnCyD,GAAcjL,EAAQ,OAAQwH,EAAMyD,GAS1C,GANIzD,EAAK1K,aAAe0K,EAAKiE,gBAG3B/Q,EAAMmK,MAAM,WAAW0E,MAAMmC,SAASlE,EAAK3K,MAAO2K,GAGpC,MAAZA,EAAK5J,GAMP,OALK4J,EAAKA,OAA4B,cAApBA,EAAKA,KAAK3K,OAA0BnC,EAAMiD,aAC1DqC,EAAQ,OAAQ8K,GAGlBpQ,EAAMkN,UAAU+D,IAAIjR,EAAMiF,OAAOkH,OAC1B,EACF,GAAgB,MAAZW,EAAK5J,IAA0B,MAAZ4J,EAAK5J,GAajC,OAZKmN,GAAuBvD,EAAKoE,iBACf,MAAZpE,EAAK5J,IAAe4J,EAAKA,KAEE,cAApBA,EAAKA,KAAK3K,OAA0BnC,EAAMiD,YACnDqC,EAAQ,OAAQ8K,GAFhB9K,EAAQ,OAAQ8K,IAMJ,MAAZtD,EAAK5J,IACPlD,EAAMkN,UAAU+D,IAAInE,EAAKgB,QAGpB,EACF,GAAIhB,EAAK1K,aAAeC,EAAWC,EAASwK,KAAUA,EAAKiE,eAAgB,CAKhF,GAJuD,cAAnD/Q,EAAMmK,MAAM,WAAWgH,YAAYrE,EAAK3K,QAC1CmD,EAAQ,OAAQwH,GAGC,SAAfA,EAAK3K,OAAoBnC,EAAMiD,WAEjC,OADAjB,EAAM,OAAQoO,IACP,EACF,GAAmB,cAAftD,EAAK3K,MAAuB,CACrC,GAAKnC,EAAMiD,WAIT,OADAjB,EAAM,OAAQoO,IACP,EAHP9K,EAAQ,OAAQ8K,GAQpB,OADApQ,EAAMkN,UAAU+D,IAAInE,IACb,EAIT,OADA9K,EAAM,OAAQoO,IACP,EAeT,SAASgB,GAAS1H,EAAGiF,GACnB,IAAIJ,EAAI7B,GAAMhD,EAAgB,mBAANiF,EAAmBA,EAAI,SAAUrM,EAASwK,EAAMuE,GAMtE,OALAA,EAAKvE,KAAOA,EACZqC,GAAoB7M,EAASwK,EAAMuE,EAAM,CACvChB,oBAAoB,IAEtBgB,EAAKvD,MAAQjB,EAAWvK,EAAS,IAC1B+O,GACN,IAGH,OAFA9C,EAAE+C,MAAO,EACT/C,EAAEgD,QAAS,EACJhD,EAgBT,SAASiD,GAAQ9H,EAAGiF,EAAGhD,GACrB,IAAI4C,EAAID,EAAO5E,EAAGiC,GAYlB,OAXAmD,EAAYP,GACZA,EAAE7B,OAAQ,EACV6B,EAAEd,IAAmB,mBAANkB,EAAmBA,EAAI,SAAUrM,EAASwK,GAOvD,OANI9M,EAAM+C,OAAOyO,SACflM,EAAQ,OAAQ0J,KAAMA,KAAK9L,IAG7B8L,KAAKlC,KAAOA,EACZkC,KAAKlB,MAAQjB,EAAWvK,EAASqJ,GAC1BqD,MAEFT,EAaT,SAASkD,GAAgB/H,GAEvB,OADA4E,EAAO5E,EAAG,IAAI4H,MAAO,EACd5E,GAAMhD,GAAG,SAAUpH,EAASwK,EAAMuE,GAOvC,OANIrR,EAAM+C,OAAOyO,SACflM,EAAQ,OAAQ+L,EAAMA,EAAKnO,IAG7BiM,GAAoB7M,EAASwK,EAAMuE,GACnCA,EAAKvD,MAAQjB,EAAWvK,EAAS,IAC1B+O,IACN,IAaL,SAASK,GAAOhI,GACd,IAAI6E,EAAID,EAAO5E,EAAG,KAclB,OAZA6E,EAAEd,IAAM,SAAUnL,EAASwK,GASzB,OANI9M,EAAM+C,OAAOmM,UACf5J,EAAQ,OAAQ0J,KAAMA,KAAK9L,IAG7BiM,GAAoB7M,EAASwK,EAAMkC,MACnCA,KAAKlC,KAAOA,EACLkC,MAGFT,EAgBT,SAASoD,GAAmBrP,EAASsP,EAAQC,GAC3C,GAAK7R,EAAMiF,OAAOC,KAAK9C,WAAvB,CAIKyP,GACH9F,IAGF,IAAItD,EAAOzI,EAAMiF,OAAOwD,KAMxB,OAJIpG,EAAWC,EAASmG,IAAWmJ,GAAU5R,EAAM2C,SACjD2C,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOwD,KAAKvF,IAGhDuF,EAAKtG,OAcd,SAAS2P,GAAWC,GAClB,IAAKC,GAAgBhS,EAAMiF,OAAOC,KAAM,OACtC,OAAO,EAST,GANKlF,EAAMoF,OAAM,IACfE,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM6M,EAAY,YAAa,KAG9DhG,IAEIiG,GAAgBhS,EAAMiF,OAAOC,KAAM,OAGrC,IAFAI,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,OAE5B8M,GAAgBhS,EAAMiF,OAAOC,KAAM,QACxC6G,IAIJ,OAAO,EAcT,SAAS3J,GAAWE,EAASsP,GAC3B,IAAIhG,EAAI+F,GAAmBrP,EAASsP,GAAQ,GAE5C,GAAIhG,EACF,OAAOA,EAGT5J,EAAM,OAAQhC,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,OAKtB,MAAzBnC,EAAMiF,OAAOC,KAAKhC,IACpB6I,IAWJ,SAASkG,GAAUC,GACjB,IACI3Q,EADAqK,EAAI,EAGR,GAA6B,MAAzB5L,EAAMiF,OAAOC,KAAKhC,KAAcgP,EAAaC,iBAIjD,OAAS,CACP,GACE5Q,EAAImK,EAAKE,GACTA,GAAK,QACW,UAATrK,EAAE2B,IAA2B,cAAT3B,EAAE2B,IAE/B,GAAI3B,EAAE6Q,MACJ,OAGF,GAAa,cAAT7Q,EAAE2B,GAAoB,CACxB,GAAa,aAAT3B,EAAE2B,GAAmB,EACM,IAAzBlD,EAAM+C,OAAOsI,SACf/F,EAAQ,OAAQ/D,GAGlB,MAGF+D,EAAQ,OAAQ/D,EAAGA,EAAEY,MAAO+P,EAAa/P,OACzC,QAYN,SAASkQ,GAAoB3D,GAC3B,GAA6B,MAAzB1O,EAAMiF,OAAOC,KAAKhC,GAAY,CAEhC,GAAIlD,EAAMiF,OAAOC,KAAKoN,WAAY,OAAOvG,IACzC,IAAIwG,EAAa3F,EAAS5M,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOC,OAAkC,UAAzBlF,EAAMiF,OAAOC,KAAKhC,GACjFsP,EAAWR,GAAgBhS,EAAMiF,OAAOC,KAAM,MAE9CqN,GAAeC,GAA0B,OAAZ9D,EAAKxL,IAAelD,EAAMoF,OAAM,GAErDpF,EAAM+C,OAAO0P,KAIjBD,GAAYD,GAAcvS,EAAM+C,OAAO2P,WAC3C5J,EAAU,OAAQ9I,EAAMiF,OAAOwD,KAAKzB,KAAMhH,EAAMiF,OAAOwD,KAAKlB,WAN9DyB,EAAQ,OAAQhJ,EAAMiF,OAAOwD,KAAKzB,KAAMhH,EAAMiF,OAAOwD,KAAKlB,gBAU5DwE,EAAQ,KAaZ,SAAS4G,GAAUrQ,GACjB,IACIsB,EADAgI,EAAIlL,EAEJa,EAAIvB,EAAMiF,OAAOC,KACjB0N,GAAc,EAGlB,GAFAtQ,GAAWlC,EAAW6M,QAET,MAAT1L,EAAE2B,GAAN,CAMA,IAAI2P,EAAMxQ,EAAWC,EAASf,GA0B9B,OAtBIsR,GAAOtR,EAAEkB,MAAQlB,EAAEkB,KAAKC,uBAAyBnB,EAAE6L,MACrD9H,EAAQ,OAAQ/D,EAAGA,EAAE2B,IACrB2P,GAAM,GAGJtR,EAAEa,aAAeyQ,GAAqB,MAAdnH,IAAOxI,KACjC6I,IACAA,EAAQ,KACR6G,GAAc,EACd5S,EAAMmK,MAAM,WAAW2I,QACvB9S,EAAMmK,MAAM,WAAW0E,MAAMkE,SAASxR,EAAEY,MAAO,CAC7CI,MAAOvC,EAAMiF,OAAOwD,OAGjBzI,EAAMiF,OAAOC,KAAK8N,UAAwC,MAA5BhT,EAAMiF,OAAOC,KAAK/C,OACnDmD,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM3D,EAAEY,MAAOnC,EAAMiF,OAAOC,KAAK/C,OAGhEZ,EAAIvB,EAAMiF,OAAOC,MAIN,MAAT3D,EAAE2B,IASJ2L,GAAMvM,GAAS,GAAM,GAAM,GAAO,EADK,SAA1BtC,EAAMmK,MAAM,WAAoD,MAA5BnK,EAAMiF,OAAOwD,KAAKtG,YAG/DyQ,GACF5S,EAAMmK,MAAM,WAAW8I,eAO3BrP,EAAIiJ,EAAWvK,EAAS,KAEbsB,EAAExB,YAA0B,aAAZwB,EAAEzB,OAAsC,iBAAXyB,EAAEpC,MAA2BoC,EAAEkJ,MAAQlJ,EAAEkJ,KAAK1K,YAA+B,aAAjBwB,EAAEkJ,KAAK3K,QACpHnC,EAAMiD,YAAcjD,EAAMkT,qBAC7B5N,EAAQ,QAKP/D,EAAEsN,QACA7O,EAAM+C,OAAOoQ,MAAUvP,GAAMA,EAAE0N,KAEzBtR,EAAM+C,OAAOqQ,OAASxP,GAAKA,EAAEkJ,MAAiB,MAATlJ,EAAEV,IAA4B,QAAdU,EAAEkJ,KAAK5J,IACrEoC,EAAQ,OAAQ/D,GAFhB+D,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAK/B4J,GAAoB9Q,IAItBb,EAASkL,EAELgH,GACF5S,EAAMmK,MAAM,WAAW8I,UAGlBrP,GA5ELmI,EAAQ,KAyFZ,SAASsH,GAAW/Q,GAIlB,IAHA,IACIqJ,EADAjI,EAAI,IAGA1D,EAAMiF,OAAOC,KAAKkN,OAAkC,UAAzBpS,EAAMiF,OAAOC,KAAKhC,IACtB,MAAzBlD,EAAMiF,OAAOC,KAAKhC,OACpByI,EAAID,MAEe,MAATC,EAAEzI,IAAuB,MAATyI,EAAEzI,KAC1BoC,EAAQ,QAGVyG,EAAQ,MAERrI,EAAEkF,KAAK+J,GAAUrQ,IAIrB,OAAOoB,EAOT,SAAS4P,KAGP,IAFA,IAAIC,EAAUvT,EAAMiF,OAAOC,KAEK,aAAzBlF,EAAMiF,OAAOC,KAAKhC,IAAmB,CAC1C,IAAIgC,EAAO4G,IAEX,IAAKS,EAAY,EAAGgH,EAASrO,GAC3B,MAGFqO,EAAUrO,EACV6G,IACA,IAAIyH,EAAYxT,EAAMiF,OAAOwD,KAAKtG,OAE9BnC,EAAMwT,UAAUA,IAA4B,eAAdA,GAAsD,YAAxBxT,EAAM+C,OAAOC,SAC3EsC,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM+K,GAUnB,eAAdA,GAA8BxT,EAAMyT,UAAYzT,EAAMmK,MAAM,cAAoD,IAArCnK,EAAMmK,MAAM,sBACzFnI,EAAM,OAAQhC,EAAMiF,OAAOwD,MAG7BzI,EAAMwT,UAAUA,GAAaxT,EAAMiF,OAAOwD,KAC1C4J,GAAoBkB,GAGlBvT,EAAMiD,aACRjD,EAAM+C,OAAO2Q,OAAQ,GAqBzB,SAAS7E,GAAMvM,EAASqR,EAAUjF,EAAMkF,EAAQC,EAAYC,GAC1D,IAAIpQ,EAGAqF,EACAxH,EACA2G,EAJAvE,EAAIlD,EACJsT,EAAarT,EAIjBD,EAAUkT,EACVpS,EAAIvB,EAAMiF,OAAOC,KACjB,IAAI8O,EAAUhU,EAAMmK,MAAM,aAI1B,GAHA6J,EAAQC,kBAAoB,EAC5BD,EAAQE,uCAEqB,MAAzBlU,EAAMiF,OAAOC,KAAKhC,GAAY,CAKhC,GAJA6I,EAAQ,KAER/L,EAAMmK,MAAM,WAAW2I,QAEM,MAAzB9S,EAAMiF,OAAOC,KAAKhC,GAAY,CAGhC,IAFAxC,GAAUV,EAAM+C,OAAOrC,QAEfiT,GAAY3T,EAAMiF,OAAOC,KAAKsC,KAAO9G,GAC3CA,GAAUV,EAAM+C,OAAOrC,OAGzB,GAAIkT,EAAQ,CAGV,IAAK1L,KAFLa,EAAI,GAEM/I,EAAMwT,UACdzK,EAAEb,GAAKlI,EAAMwT,UAAUtL,GAGzBoL,KACAtT,EAAMmK,MAAM,cAAgBnK,EAAMiD,WAE9BjD,EAAM+C,OAAOC,QAAUhD,EAAMmK,MAAM,aAAa,cAC7CpB,EAAE,eAAkB/I,EAAMiD,YAC7BqC,EAAQ,SAKd5B,EAAI2P,GAAW/Q,GACf0R,EAAQG,gBAAkBzQ,EAAEwD,OAC5BxG,GAAUV,EAAM+C,OAAOrC,YACdkT,IAET5T,EAAMmK,MAAM,cAAgBnK,EAAMiD,YAGpC8I,EAAQ,IAAKxK,GAETqS,IACF5T,EAAMmK,MAAM,WAAWiK,eAAeP,GAElC9K,IACF/I,EAAMwT,UAAYzK,IAItB/I,EAAMmK,MAAM,WAAW8I,UACvBvS,EAASqT,OACJ,GAAKJ,EA4BL,CACL3T,EAAMmK,MAAM,WAAW2I,QAElBpE,IAAQ1O,EAAM+C,OAAOsR,OACxB/O,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,IAAKlF,EAAMiF,OAAOC,KAAK/C,OAM5D,IAAImS,EAA2C,OAA1BtU,EAAMmK,MAAM,WAA+C,SAAzBnK,EAAMiF,OAAOwD,KAAKvF,GACzElD,EAAMiF,OAAOC,KAAKiN,kBAAmB,EACrCzR,GAAUV,EAAM+C,OAAOrC,OAEvBgD,EAAI,CAACiP,GAAUrQ,IACf5B,GAAUV,EAAM+C,OAAOrC,QAEnBgD,EAAE,KAAMA,EAAE,GAAG6Q,aAAiBD,GAA8B,aAAZ5Q,EAAE,GAAGR,IACvDlB,EAAM,OAAQ0B,EAAE,GAAIA,EAAE,GAAGR,GAAG,GAAGsR,cAAgB9Q,EAAE,GAAGR,GAAG+G,MAAM,IAG/DjK,EAAMmK,MAAM,WAAW8I,eAhDvB,GAAIW,EAAQ,CACV5T,EAAMmK,MAAM,WAAW2I,SAEnBpE,GAASmF,GAAe7T,EAAMyU,SAChCzS,EAAM,OAAQhC,EAAMiF,OAAOwD,KAAM,gCAG/BoL,GACF7T,EAAMmK,MAAM,WAAWiK,gBAAe,GAGxC,IAAIjB,EAAOtG,EAAWvK,EAAS,IAE3BtC,EAAM+C,OAAO2R,eAAiBpS,EAAUlC,EAAW+C,OAASgQ,EAAK/Q,YAA6B,UAAf+Q,EAAKhR,OACtFmD,EAAQ,OAAQ6N,GAGdnT,EAAM+C,OAAOC,QAAUhD,EAAMmK,MAAM,aAAa,cAC7CnK,EAAMiD,YACTqC,EAAQ,SAIZtF,EAAMmK,MAAM,WAAW8I,eAEvBjR,EAAM,OAAQhC,EAAMiF,OAAOC,KAAM,IAAKlF,EAAMiF,OAAOC,KAAK/C,OA4B5D,OAAQnC,EAAMmK,MAAM,WAClB,IAAK,QACL,IAAK,WACL,IAAK,SACL,IAAK,QACH,GAAI2J,EACF,MAKJ,QACE9T,EAAMmK,MAAM,UAAY,KAU5B,OAPA1J,EAAUkD,GAENgQ,IAAY3T,EAAM+C,OAAO4R,SAAajR,GAAkB,IAAbA,EAAEwD,QAC/C5B,EAAQ,OAAQtF,EAAMiF,OAAOkH,MAG/B6H,EAAQC,kBAAoB,EACrBvQ,EAWT,SAASkR,GAAY7L,GACfjI,GAAyC,kBAAnBA,EAAYiI,IACpCzD,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAMM,GAGZ,iBAAdlI,EAAOkI,GAChBlI,EAAOkI,IAAM,EAEblI,EAAOkI,GAAK,EAtxBhB2G,GAAamF,OAAS,CAItB,MAIA,WACAnF,GAAaK,IAAM,CAAC,YAAa,UAAW,SAAU,SAAU,WAAY,UAC5EL,GAAaK,IAAML,GAAaK,IAAI+E,OAAOpF,GAAamF,QACxDnF,GAAaI,IAAMJ,GAAaK,IAAI+E,OAAO,SAAU,UAgxBrDtT,GAAK,YAAY,WAKf,MAJ6B,MAAzBxB,EAAMiF,OAAOC,KAAKhC,IACpBoC,EAAQ,OAAQ0J,MAGXA,QAETxN,GAAK,YAAY,WACf,OAAOwN,QAEThP,EAAMwO,OAAO,gBAAkB,CAC7BhN,KAAM,eACN+L,IAAK,EACLnL,YAAY,EACZkL,IAAK,SAAahL,GAChB,IAAIyS,EAAI/F,KAAK7M,MAST6S,EAA4C,OAAzBhV,EAAMiF,OAAOC,KAAKhC,GAQzC,OANIb,EAAWC,EAAS0M,MACtB1J,EAAQ,OAAQ0J,KAAM+F,GACZC,GAAqBhV,EAAMmK,MAAM,eAAekC,MAAM0I,IAChE/U,EAAMmK,MAAM,WAAW0E,MAAMoG,IAAIF,EAAG/U,EAAMiF,OAAOwD,MAG5CuG,MAETvB,IAAK,WAEHzL,EAAM,OAAQhC,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,SAGvD,IAqCWoM,GArCP2G,GAAqB,CACvB9S,YAAY,EACZ+S,UAAU,GAEZnV,EAAMwO,OAAO,cAAgB9O,EAAE0V,OAAO,CACpC7H,IAAK,IACL/L,KAAM,aACN8L,IAAK+H,GACL5H,IAAK4H,GACLC,SAAS,GACRJ,IACHlV,EAAMwO,OAAO,qBAAuB9O,EAAE0V,OAAO,CAC3C7H,IAAK,EACL/L,KAAM,oBACN8T,SAAS,GACRJ,IACHlV,EAAMwO,OAAO,mBAAqB9O,EAAE0V,OAAO,CACzC7H,IAAK,EACL/L,KAAM,kBACN+T,MAAM,EACND,SAAS,GACRJ,IACHlV,EAAMwO,OAAO,uBAAyB9O,EAAE0V,OAAO,CAC7C7H,IAAK,IACL/L,KAAM,aACN8L,IAAK+H,GACL5H,IAAK4H,GACLC,SAAS,EACTC,MAAM,GAELL,IACH1T,GAAK,YAAY,WACf,OAAOwN,QAGTP,EAAM,cAEKF,GAERE,EAAM,YADLzH,KAAOuH,GAAE/G,KAAO,EAGpBiH,EAAM,SAAS2D,OAAQ,EACvB3D,EAAM,WAAW2D,OAAQ,EACzB3D,EAAM,KAAK2D,OAAQ,EACnB3D,EAAM,KACNA,EAAM,KACNA,EAAM,KAAM2D,OAAQ,EACpB3D,EAAM,KAAK2D,OAAQ,EACnB3D,EAAM,KACNA,EAAM,KAAK2D,OAAQ,EACnB3D,EAAM,KACNW,GAAQ,QACRA,GAAQ,QAAQgD,OAAQ,EACxBhD,GAAQ,SACRA,GAAQ,WAAWgD,OAAQ,EAC3BhD,GAAQ,WACRA,GAAQ,QAAQ,WACd,OAAOJ,QAETI,GAAQ,SAAS,WACf,OAAOJ,QAETI,GAAQ,QAAQ,WACd,OAAOJ,QAETI,GAAQ,QAAQ,WAKd,OAJIpP,EAAMiD,aAspCDjD,EAAMmK,MAAM,cAtpCmBnK,EAAM+C,OAAO4H,YAAc3K,EAAMmK,MAAM,gBAAkBnK,EAAMmK,MAAM,UAAUH,OAAO,GAAK,KAAOhK,EAAMmK,MAAM,cACpJ7E,EAAQ,OAAQ0J,MAGXA,QAKNI,GAAQ,SAAS,WAElB,OADAoG,GAASC,KAAKzV,EAAMiF,OAAOwD,KAAMuG,MAC1BA,QAHKrC,IAAM,IAMpByE,GAAS,IAAK,UACdA,GAAS,KAAM,aACfA,GAAS,KAAM,aACfA,GAAS,KAAM,cAEfA,GAAS,KAAM,aAAa9D,IAAM,WAEhCtL,EAAM,SAGRoP,GAAS,KAAM,aACfA,GAAS,OAAO,SAAU9O,EAASwK,EAAMuE,GAQvC,OAPKrR,EAAMyT,SACTnO,EAAQ,OAAQ+L,EAAM,0BAA2B,KAGnDA,EAAKvE,KAAOA,EACZqC,GAAoB7M,EAASwK,EAAMuE,GACnCA,EAAKvD,MAAQjB,EAAWvK,EAAS,IAC1B+O,KAETI,GAAgB,MAChBA,GAAgB,MAChBA,GAAgB,MAChBA,GAAgB,OAChBA,GAAgB,OAChBA,GAAgB,QAChB/E,GAAM,KAAK,SAAUpK,EAASwK,EAAMuE,GAalC,OAZIrR,EAAM+C,OAAO2S,SACfpQ,EAAQ,OAAQ+L,GAGlBA,EAAKvE,KAAOA,EAERmB,IACFoD,EAAKvD,MAAQjB,EAAWvK,EAAS,IAEjC+O,EAAKvD,MAAQ,KAGRuD,IACN,IAAI,GACP3E,GAAM,KAAK,SAAUpK,EAASwK,EAAMuE,GAMlC,OALAsE,KACAtE,EAAKvE,KAAOA,EACZuE,EAAKvD,MAAQjB,EAAWvK,GAAWlC,EAAWqM,KAAM,IACpDV,EAAQ,KACRc,EAAWvK,EAAS,IACb+O,IACN,IACH3E,GAAM,MAAM,SAAUpK,EAASwK,EAAMuE,GAInC,OAHAsE,KACAtE,EAAKvE,KAAOA,EACZuE,EAAKvD,MAAQjB,EAAWvK,EAAS,IAC1B+O,IACN,IAEH3E,GAAM,MAAM,SAAUpK,EAASwK,EAAMuE,GAInC,OAHAsE,KACAtE,EAAKvE,KAAOA,EACZuE,EAAKvD,MAAQjB,EAAWvK,EAJN,IAKX+O,IALW,IAOpB3E,GAAM,MAAM,SAAUpK,EAASwK,EAAMuE,GAC9BvE,EAAK8I,OAAsB,OAAZ9I,EAAK5J,IAA2B,OAAZ4J,EAAK5J,IAC3ClB,EAAM,OAAQqP,EAAM,MAGjBrR,EAAMgQ,UACT1K,EAAQ,OAAQ+L,EAAM,qBAAsB,MAG9CsE,KACAtE,EAAKvE,KAAOA,EACZ,IAAIgB,EAAQuD,EAAKvD,MAAQjB,EAAWvK,EAAS,IAM7C,OAJKwL,EAAM8H,OAAuB,OAAb9H,EAAM5K,IAA4B,OAAb4K,EAAM5K,IAC9ClB,EAAM,OAAQqP,EAAKvD,MAAOuD,EAAKvD,MAAM5K,IAGhCmO,IACN,IAMH3E,GAAM,MAAM,SAAUpK,EAASwK,EAAMuE,GAYnC,OAXKrR,EAAMyT,SACTnO,EAAQ,OAAQ+L,EAAM,0BAA2B,MAI9CvE,EAAK8I,OAASnG,GAAsB3C,IACvC9K,EAAM,OAAQqP,EAAM,MAGtBA,EAAKvE,KAAOA,EACZuE,EAAKvD,MAAQjB,EAAWvK,EAAS+O,EAAK1E,KAC/B0E,IACN,KACHrR,EAAMwO,OAAO,MAAM7B,IAAM,IACzB6E,GAAQ,IAAK,QAAS,IACtBA,GAAQ,IAAK,SAAU,IACvBA,GAAQ,IAAK,SAAU,IACvBjC,GAAS,MAAM,SAAUjN,EAASwK,EAAMgB,GAGtC,QAAQ,GACN,MAHW9N,EAAM+C,OAAO8S,SAAoC,UAAxB/I,GAAQA,EAAK3K,QAAgD,UAA1B2L,GAASA,EAAM3L,UAGtEnC,EAAM+C,OAAO+S,OAC3B9G,KAAKxH,KAAOwH,KAAKzH,UACjBjC,EAAQ,OAAQ0J,KAAM,MAAO,MAC7B,MAIF,KAAKW,GAAa7B,EAAOhB,EAAM9M,GAC7BsF,EAAQ,OAAQ0J,KAAMlB,EAAM3L,OAC5B,MAEF,KAAKwN,GAAa7C,EAAMgB,EAAO9N,GAC7BsF,EAAQ,OAAQ0J,KAAMlC,EAAK3K,OAI/B,OAAO6M,QAETO,GAAS,OAAO,SAAUjN,EAASwK,EAAMgB,GAQvC,OAPI6B,GAAa7B,EAAOhB,EAAM9M,GAC5BsF,EAAQ,OAAQ0J,KAAMlB,EAAM3L,OACnBwN,GAAa7C,EAAMgB,EAAO9N,IAEnCsF,EAAQ,OAAQ0J,KAAMlC,EAAK3K,OAGtB6M,QAETO,GAAS,MAAM,SAAUjN,EAASwK,EAAMgB,GAatC,QAZa9N,EAAM+C,OAAO8S,SAAoC,UAAxB/I,GAAQA,EAAK3K,QAAgD,UAA1B2L,GAASA,EAAM3L,UAEzEnC,EAAM+C,OAAO+S,QAC1B9G,KAAKxH,KAAOwH,KAAKzH,UACjBjC,EAAQ,OAAQ0J,KAAM,MAAO,OACpBW,GAAa7B,EAAOhB,EAAM9M,GAEnCsF,EAAQ,OAAQ0J,KAAMlB,EAAM3L,OACnBwN,GAAa7C,EAAMgB,EAAO9N,IACnCsF,EAAQ,OAAQ0J,KAAMlC,EAAK3K,OAGtB6M,QAETO,GAAS,OAAO,SAAUjN,EAASwK,EAAMgB,GAQvC,OAPI6B,GAAa7B,EAAOhB,EAAM9M,GAC5BsF,EAAQ,OAAQ0J,KAAMlB,EAAM3L,OACnBwN,GAAa7C,EAAMgB,EAAO9N,IAEnCsF,EAAQ,OAAQ0J,KAAMlC,EAAK3K,OAGtB6M,QAETO,GAAS,KACTA,GAAS,KACTA,GAAS,MACTA,GAAS,MACTiC,GAAQ,KAAM,YAAa,KAC3BA,GAAQ,KAAM,aAAc,KAC5BA,GAAQ,MAAO,qBAAsB,KACrC9E,GAAM,KAAM,KAAM,KAClBA,GAAM,cAAc,SAAUpK,EAASwK,EAAMvK,GAC3C,IAAIuL,EACAnF,EAAQ3I,EAAMmK,MAAM,WAKxB,OAJA5H,EAAMuK,KAAOA,EACbvK,EAAMuL,MAAQA,EAAQjB,EAAWvK,EAAS,KAGrCwL,IAIY,aAAbA,EAAM5K,IAAkC,aAAb4K,EAAM5K,IAAqC,SAAhB4K,EAAM3L,OAAoC,cAAhB2L,EAAM3L,QAA0BwG,EAAM7G,IAAI,cAAgC,UAAhBgM,EAAMmB,OAAkC,MAAbnB,EAAM5K,IAA2B,MAAb4K,EAAM5K,KAAe4K,EAAMA,OAAsB,aAAbA,EAAM5K,IAAkC,eAAb4K,EAAM5K,KAAwB4K,EAAMiI,MAC9R/T,EAAM,QAGS,aAAb8L,EAAM5K,IACRoC,EAAQ,QAGH/C,GAXEA,IAYR,KACHmK,GAAM,KAAK,SAAUpK,EAASwK,EAAMuE,GAClC,IACIvD,EADA5I,EAAOlF,EAAMiF,OAAOC,KAKxB,OAHAmM,EAAKvE,KAAOA,EACZuE,EAAKvD,MAAQA,EAAQjB,EAAWvK,EAAS,KAErCwK,GAAQgB,GAAqB,aAAZhB,EAAK5J,IAAkC,aAAb4K,EAAM5K,IACnD4J,EAAK3K,OAAS2L,EAAM3L,MACpB2K,EAAKvF,UAAYuG,EAAMvG,WAElBvH,EAAM+C,OAAOiT,WAAajW,EAAIkW,cAAcrU,KAAKkL,EAAK3K,QACzDmD,EAAQ,OAAQwH,GAGXA,IAGO,MAAZ5H,EAAKhC,IAA0B,OAAZgC,EAAKhC,IAC1BoC,EAAQ,OAAQ+L,EAAKvD,OAGhBuD,KACN,KACHtC,EAAO,KAAK,SAAUzM,GACpB,IAAI4C,EAAOlF,EAAMiF,OAAOC,KAQxB,OAPA8J,KAAKC,MAAQ,QACbD,KAAKlB,MAAQjB,EAAWvK,EAAS,KAEjB,MAAZ4C,EAAKhC,IAA0B,OAAZgC,EAAKhC,IAC1BoC,EAAQ,OAAQ0J,KAAKlB,OAGhBkB,QAETtC,GAAM,KAAK,SAAUpK,EAASwK,EAAMuE,GAClC,IAAInM,EAAOlF,EAAMiF,OAAOC,KAQxB,OAPAmM,EAAKvE,KAAOA,EACZuE,EAAKvD,MAAQjB,EAAWvK,EAAS,KAEjB,MAAZ4C,EAAKhC,IAA0B,OAAZgC,EAAKhC,IAC1BoC,EAAQ,OAAQ+L,EAAKvD,OAGhBuD,IACN,KACHtC,EAAO,KAAK,SAAUzM,GACpB,IAAI4C,EAAOlF,EAAMiF,OAAOC,KAQxB,OAPA8J,KAAKC,MAAQ,QACbD,KAAKlB,MAAQjB,EAAWvK,EAAS,KAEjB,MAAZ4C,EAAKhC,IAA0B,OAAZgC,EAAKhC,IAC1BoC,EAAQ,OAAQ0J,KAAKlB,OAGhBkB,QAETtC,GAAM,IAAK,OAAQ,KACnBA,GAAM,IAAK,MAAO,KAClBA,GAAM,IAAK,MAAO,KAClBgF,GAAO,MACP3C,EAAO,KAAM,UACb/O,EAAMwO,OAAO,MAAM8C,MAAO,EAC1BI,GAAO,MACP3C,EAAO,KAAM,UACb/O,EAAMwO,OAAO,MAAM8C,MAAO,EAC1BvC,EAAO,UAAU,SAAUzM,GACzB0M,KAAKC,MAAQ,QACb,IAAItD,EAAIkB,EAAWvK,EAAS,KAE5B,OAAKqJ,GAIQ,MAATA,EAAEzI,IAAuB,MAATyI,EAAEzI,IACpBoC,EAAQ,QAGV0J,KAAKxB,MAAQ7B,EAGTA,EAAEvJ,aAAepC,EAAMiD,aACzB0I,EAAEuK,cAAe,GAGZlH,MAdEA,QAeRsC,MAAO,EACVvC,EAAO,KAAK,SAAUzM,GAOpB,OANItC,EAAM+C,OAAOyO,SACflM,EAAQ,OAAQ0J,KAAM,KAGxBA,KAAKC,MAAQ,QACbD,KAAKlB,MAAQjB,EAAWvK,EAAS,KAC1B0M,QAETtC,GAAM,OACNqC,EAAO,KAAK,SAAUzM,GAapB,OAZA0M,KAAKC,MAAQ,QACbD,KAAKlB,MAAQjB,EAAWvK,EAAS,KAE5B0M,KAAKlB,OAER9I,EAAK,OAAQgK,OAGa,IAAxBhO,EAAKgO,KAAKlB,MAAM5K,KAClBoC,EAAQ,OAAQ0J,KAAM,KAGjBA,QAETD,EAAO,UAAU,SAAUzM,GACzB0M,KAAKC,MAAQ,QACb,IAAItD,EAAIkB,EAAWvK,EAAS,KAc5B,OAbA0M,KAAKxB,MAAQwB,KAAKlB,MAAQnC,EAErBA,GAEH3G,EAAK,OAAQgK,MAKXrD,EAAEvJ,aACJuJ,EAAEuK,cAAe,GAGZlH,QAETD,EAAO,OAAO,SAAUzM,GACtB,IAAI6T,EAAKC,GAAa9T,EAAS,UAAU,WAClCtC,EAAMoF,OAAM,IACfE,EAAQ,OAAQtF,EAAMiF,OAAOkH,KAAM,aAAc,KAMnD,IAHA,IAAIkK,EACApO,EAAIjI,EAAMmK,MAEPlC,IACLoO,GAAcpO,EAAE,YAEXA,EAAE,aAIPA,EAAIA,EAAE,aAGHoO,GACH/Q,EAAQ,OAAQtF,EAAMiF,OAAOkH,KAAM,iBAIvC,GAAIgK,EACF,OAAOA,EAGT,IAEIvK,EAFA0K,EAAUtW,EAAMiF,OAAOC,KACvB+C,EAAI4E,EAAWvK,EAAS,KAG5B,IAAK2F,EACH,OAAO+G,KAOT,IAJK/G,EAAE2N,OAAS3N,EAAE0E,IAAM,KACtB3K,EAAM,OAAQsU,EAASA,EAAQnU,OAGpB,aAAT8F,EAAE/E,GACJ,GAAI+E,EAAE7F,WACJ,OAAQ6F,EAAE9F,OACR,IAAK,SACL,IAAK,SACL,IAAK,UACL,IAAK,OACL,IAAK,OACHmD,EAAQ,OAAQtF,EAAMiF,OAAOkH,KAAMlE,EAAE9F,OACrC,MAEF,IAAK,SACCnC,EAAMoF,SACRE,EAAQ,OAAQtF,EAAMiF,OAAOkH,KAAMlE,EAAE9F,OAGvC,MAEF,IAAK,WACEnC,EAAM+C,OAAOwT,MAChBjR,EAAQ,QAGV,MAEF,IAAK,OACL,IAAK,SACL,IAAK,OACH,MAEF,QACEsG,EAAI3D,EAAE9F,MAAMmI,OAAO,EAAG,GAElBtK,EAAM+C,OAAOyT,SAAW5K,EAAI,KAAOA,EAAI,OAAS5L,EAAMmK,MAAM,WAAWyG,aAAa3I,EAAE9F,QACxFmD,EAAQ,OAAQtF,EAAMiF,OAAOwD,UAKtB,OAATR,EAAE/E,IAAgB+E,EAAE2N,MAEJ,MAAT3N,EAAE/E,IAAuB,MAAT+E,EAAE/E,IAAuB,MAAT+E,EAAE/E,IAE3CoC,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAH7BzG,EAAM,OAAQiG,EAAG,WAOhBjI,EAAM+C,OAAO0T,UAAUnR,EAAQ,OAAQ0J,MAQ9C,MAL6B,MAAzBhP,EAAMiF,OAAOC,KAAKhC,IAAelD,EAAM+C,OAAO0T,UAChDnR,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOwD,KAAKtG,OAGvD6M,KAAKxB,MAAQwB,KAAKlB,MAAQ7F,EACnB+G,QAEThP,EAAMwO,OAAY,IAAE8C,MAAO,EAC3B,IAAIoF,GAAmB9H,EAAU,SAAS,SAAUtM,GAClD,IAAIqU,EAAWC,EAmCf,OAjCK5W,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,QAAS,KAG9CzI,EAAM6W,aAAc,EAEhB7W,EAAMiF,OAAOC,KAAK9C,YAA0C,YAA5BpC,EAAMiF,OAAOC,KAAK/C,QAEpDwU,GADAC,EAAiB5W,EAAMiF,OAAOC,MACH/C,MAC3BC,GAAWE,GAEXtC,EAAMmK,MAAM,WAAW2M,WAAWH,EAAW,CAC3CnV,KAAM,QACNuV,aAAa,EACbxU,MAAOqU,KAKqB,YAA5B5W,EAAMiF,OAAOC,KAAK/C,QACpB4J,EAAQ,WACRc,EAAWvK,EAAS,IAGlBsU,GACF5H,KAAK3N,KAAOuV,EACZ5W,EAAMmK,MAAM,WAAW6M,WAAWL,IAElC3H,KAAK3N,KAAO,KAGdrB,EAAMmK,MAAM,WAAW2I,QACvBmE,GAAUjI,KAAM1M,GACT0M,QAiDT,SAASiI,GAAUC,EAAY5U,GAC7B,IACIjB,EAAM8V,EAAc5U,EAAO6U,EAAUC,EAAaC,EADlDC,EAAQvT,OAAOwT,OAAO,MAY1B,IARgC,MAA5BxX,EAAMiF,OAAOC,KAAK/C,MACpB4J,EAAQ,MAERzG,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,aAAczI,EAAMiF,OAAOC,KAAK1D,MAEnEuK,KAGiC,MAA5B/L,EAAMiF,OAAOC,KAAK/C,OAyDvB,OAxDAiV,GAAW,EACXC,GAAc,EACd/U,IAAYlC,EAAWqX,SAES,WAA5BzX,EAAMiF,OAAOC,KAAK/C,OAAuB6P,GAAgBtG,IAAQ,OACnE0L,GAAW,EACXrL,KAG8B,UAA5B/L,EAAMiF,OAAOC,KAAK/C,QACf6P,GAAgBtG,IAAQ,OAC3BpJ,GAAWlC,EAAWqX,SACtB1L,IACAiC,EAAYhO,EAAMiF,OAAOwD,MAErBuJ,GAAgBhS,EAAMiF,OAAOC,KAAM,OACrCmS,GAAc,EACdtL,EAAQ,KAEH/L,EAAM0X,SACTpS,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,mBAAoB,MAItDlF,EAAMqF,SACTC,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,kBAAmB,OAK5B,MAA5BzI,EAAMiF,OAAOC,KAAK/C,QACpBkV,GAAc,EACdtL,KAKmB,SAFrBxJ,EAAQvC,EAAMiF,OAAOC,MAEV/C,OAAmC,QAAhBI,EAAMJ,OAAqB6P,GAAgBtG,IAAQ,KAgB/EyL,EAAe,MAfXE,GAEFrV,EAAM,OAAQO,EAAOA,EAAMJ,OAG7BgV,EAAe5U,EAAMJ,MACrB4J,IACAxJ,EAAQvC,EAAMiF,OAAOC,KAEhBkS,GAA4B,gBAAhB7U,EAAMJ,MAEZiV,GAA4B,cAAhB7U,EAAMJ,OAC3BH,EAAM,OAAQO,EAAO,gBAAkB4U,EAAe,aAAc5U,EAAMJ,OAF1EH,EAAM,OAAQO,EAAO,SAAW4U,EAAe,aAAc5U,EAAMJ,QAQ/DI,EAAMJ,OACZ,IAAK,IACHmD,EAAQ,OAAQ/C,GAChBwJ,IACA,MAEF,IAAK,cACCqL,GAGFO,GAAaJ,EADblW,EAAOuW,GAAatV,GACMC,GAAO,EAAM6U,GACvCS,GAASX,EAAY5U,EAASjB,EAAMgW,KAEhCA,GAAe/U,EAAUlC,EAAWqX,UAE7BH,EADTtV,EAAM,OAAQO,EAAOA,EAAMJ,OAK3BmV,GAAkBH,IAAiBC,EAGrCrL,IACA8L,GAASX,EAAY5U,EAAStC,EAAMkN,UAAU4K,UAGhD,MAEF,IAAK,IAEHD,GAASX,EAAY5U,EADrBjB,EAAO0W,GAAqBzV,GACQ+U,GAEpC,MAEF,QAGE,QAAa3S,KAFbrD,EAAOuW,GAAatV,IAEI,CACtBN,EAAM,OAAQO,EAAOA,EAAMJ,OAC3B4J,IACA,MAGEoL,GACFa,GAAab,EAAcI,EAAOlW,EAAMkB,GAAO,EAAM6U,GACrD/V,EAAOrB,EAAMkN,UAAU4K,UAEnBV,GAAqB,cAAT/V,GACdW,EAAM,OAAQO,EAAO,sBAAuBlB,GAG9CsW,GAAaJ,EAAOlW,EAAMkB,GAAO,EAAM6U,IAGzCS,GAASX,EAAY5U,EAASjB,EAAMgW,GAK1CtL,EAAQ,KACRkM,GAAgBV,GAChBvX,EAAM6W,aAAc,EACpB7W,EAAMmK,MAAM,WAAW8I,UAGzB,SAAS4E,GAASX,EAAY5U,EAASjB,EAAM6W,GAO3C,GANIA,IACGlY,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,YAAa,MAIpB,MAA5BzI,EAAMiF,OAAOC,KAAK/C,MAAe,CAInC,GAHAH,EAAM,OAAQhC,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,OACnD4J,IAEgC,MAA5B/L,EAAMiF,OAAOC,KAAK/C,MAapB,OAXA4J,SAEgC,MAA5B/L,EAAMiF,OAAOC,KAAK/C,QACpBmD,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,IAAKlF,EAAMiF,OAAOC,KAAK/C,OAC1D4J,IACA3J,GAAWE,GACXyJ,MAOF,KAAmC,MAA5B/L,EAAMiF,OAAOC,KAAK/C,OACvB4J,IAKNoM,GAAW7V,EAAS,CAClBjB,KAAMA,EACNG,KAAM0W,EAAY,YAAc,KAChCE,UAAU,EACVzF,UAAWuE,IA+Jf,SAASmB,GAAkBC,GACzB,IAEIC,EAFAC,EAAKxY,EAAMiF,OAAOC,KAClB0G,GAAK,EAGT,GACmB,MAAb4M,EAAGrW,MACLmW,GAAU,EACY,MAAbE,EAAGrW,QACZmW,GAAU,GAIZC,EAAMC,EACNA,EAAK9M,EAFLE,GAAK,UAGe,IAAX0M,GAA8B,MAAdC,EAAIpW,QAA8B,UAAZqW,EAAGhX,MAEpD,OAAOgX,EAmUT,SAASZ,GAAatV,GACpB,IAAIY,EAAKyO,GAAmBrP,GAAS,GAgBrC,OAdKY,IAC0B,aAAzBlD,EAAMiF,OAAOC,KAAKhC,IACpBA,EAAKlD,EAAMiF,OAAOC,KAAK/C,MACvB4J,KACkC,aAAzB/L,EAAMiF,OAAOC,KAAKhC,KAC3BA,EAAKlD,EAAMiF,OAAOC,KAAK/C,MAAMsW,WAC7B1M,MAIO,mBAAP7I,GACFoC,EAAQ,QAGHpC,EAmJT,SAASwV,GAAQrX,EAAMkB,EAAOoW,GAC5B,IAAIxO,EAAQ,CACV,SAAU9I,EACV,aAAc,EACd,YAAa,EAMb,aAAc,UACd,YAAY,EACZ,SAAU,KACV,cAAe,KACf,YAAa,KACb,cAAe,KACf,YAAa,KACb,UAAW,KACX,cAAe,KACf,YAAa,KACb,UAAW,KACX,UAAW,KACX,WAAY,MAkBd,OAfIkB,GACF7C,EAAE0V,OAAOjL,EAAO,CACd,SAAU5H,EAAMyE,KAChB,cAAezE,EAAMgF,UACrB,YAAaqR,GAAcrW,KAI/B7C,EAAE0V,OAAOjL,EAAOwO,GAEZxO,EAAM,eACRA,EAAM,WAAaA,EAAM,aAAa,WACtCA,EAAM,eAAiBA,EAAM,aAAa,gBAGrCA,EAWT,SAASS,GAAcT,GACrB,OAAOA,EAAM,cAAgBA,EAAM,UAQrC,SAASkL,GAAkB/S,EAASuW,GAGlC,IAAIC,EAAM9J,KAAK1M,QACXgT,EAAUtG,KAAKsG,QACfyD,EAAQ/J,KAAK+J,MACbjM,EAA4B,iBAAd+L,EAAyB,KAAOA,EAElD,IAAKvD,EACH,MAAQ0D,MACDhZ,EAAMiF,OAAOC,KAAKiQ,UAAYnV,EAAMiF,OAAOC,KAAK6T,MAAQA,EAC3DlM,EAAWvK,EAAS,GAGpByJ,IAKN,MAAO,CACL7I,GAAI,aACJ1B,KAAM,aACNuU,IAAKjJ,GAGP,SAASkM,IACP,GAAIhZ,EAAMiF,OAAOwD,KAAK0M,UAAYnV,EAAMiF,OAAOwD,KAAK8M,MAAQvV,EAAMiF,OAAOwD,KAAKnG,UAAYwW,EAExF,OAAO,EAGT,IAAIG,EAAWjZ,EAAMiF,OAAOC,KAAKiQ,UAAYnV,EAAMiF,OAAOC,KAAKqQ,MAAQvV,EAAMiF,OAAOC,KAAK5C,UAAYwW,EAErG,OADIG,GAAUlN,IACPkN,GAAYjZ,EAAMiF,OAAOC,KAAKoN,YA0BzC,SAAS6F,GAAW7V,EAASpC,GAC3B,IAAIyO,EAAGpM,EAAOlB,EAAMsR,EAAWuG,EAAkBC,EAAaC,EAAShB,EAAUiB,EAC7EC,EAAYtZ,EAAM+C,OAClBwW,EAAavZ,EAAM4H,QACnB4R,EAAUlX,EAAUlC,EAAWqX,SAE/BvX,IACFmB,EAAOnB,EAAQmB,KACfsR,EAAYzS,EAAQyS,UACpBuG,EAAmBhZ,EAAQgZ,iBAC3BC,EAA+B,cAAjBjZ,EAAQsB,KACtB4X,EAA2B,UAAjBlZ,EAAQsB,KAClB4W,EAAWlY,EAAQkY,SACnBiB,EAAiBnZ,EAAQmZ,gBAG3B/W,IAAYlC,EAAWqM,KACvBnK,IAAYlC,EAAWqZ,UAEnBD,EACFlX,GAAWlC,EAAW+C,MAEtBb,IAAYlC,EAAW+C,MAGrBgW,EACF7W,GAAWlC,EAAWiD,MACZ+V,IACV9W,IAAYlC,EAAWiD,OAGzBf,IAAYlC,EAAWqX,SACvBzX,EAAM+C,OAASiB,OAAOwT,OAAOxX,EAAM+C,QACnC/C,EAAM4H,QAAU5D,OAAOwT,OAAOxX,EAAM4H,SACpC5H,EAAMmK,MAAQuO,GAAQrX,GAAQrB,EAAMkN,UAAU4K,QAAS9X,EAAMiF,OAAOC,KAAM,CACxE,cAAeyN,EACf,YAAa3S,EAAMmK,MACnB,UAAWiP,EACX,WAAYhB,EACZ,UAAWoB,IAEb7K,EAAI3O,EAAMmK,MACV5H,EAAQvC,EAAMiF,OAAOwD,KACrBjI,EAAUoI,KAAK5I,EAAMmK,OAMrBnK,EAAMmK,MAAM,WAAW2I,MAAM,iBAC7B,IAAI4G,GAA4BtB,IAAa/W,GAAQ6X,GAEjDQ,GACF1Z,EAAMmK,MAAM,WAAW0E,MAAM8K,IAAID,EAA0BR,EAAmB,QAAU,WAAYlZ,EAAMiF,OAAOwD,MAAM,GAGpH2Q,GACHpZ,EAAMmK,MAAM,WAAWA,MAAMwP,IAAI,YAAa,MAAOpX,GAAO,GAI9DvC,EAAMmK,MAAM,WAAW2I,MAAM,kBAC7B,IAAI8G,EAzTN,SAAwBtX,EAASpC,GAC/B,IAAIgF,EAEA2U,EAEAtY,EAHAuY,EAAY,GAEZ7U,EAAS,GAET8U,GAAc,EACdC,GAAW,EACX/K,EAAQ,EACRgL,EAAU/Z,GAAWA,EAAQ+Z,QAC7BC,GAAmB,EAEvB,GAAID,IAAkC,IAAvBA,EAAQ7X,WAErB,OADApC,EAAMmK,MAAM,WAAWgQ,SAASF,EAAQ9X,MAAO8X,GACxC,CACLhL,MAAO,EACPmL,OAAQ,CAACH,EAAQ9X,OACjBkY,UAAU,GAUd,GANAnV,EAAOlF,EAAMiF,OAAOC,KAEfhF,GAAYA,EAAQoa,eACvBvO,EAAQ,KAGmB,MAAzB/L,EAAMiF,OAAOC,KAAKhC,GAStB,OAAS,CACP+L,IAEA,IAAIsL,EAAgB,GAGpB,GAFAP,EAAWlI,GAAW,QAElBpS,EAAEuQ,SAAS,CAAC,IAAK,KAAMjQ,EAAMiF,OAAOC,KAAKhC,IAI3C,IAAK3B,KAHL2Y,GAAmB,EACnBjV,EAASuV,GAAqBlY,IAG5Bf,EAAI0D,EAAO1D,IAEL2B,KACJ4W,EAAUlR,KAAKrH,EAAE2B,IACjBqX,EAAc3R,KAAK,CAACrH,EAAE2B,GAAI3B,EAAEgB,cAMhC,GAFAsX,EAAQzX,GAAWE,GAGjBwX,EAAUlR,KAAKiR,GACfU,EAAc3R,KAAK,CAACiR,EAAO7Z,EAAMiF,OAAOwD,YAGxC,MAAQgS,GAAiBza,EAAMiF,OAAOC,KAAM,CAAC,IAAK,OAChD6G,IA0CN,GAlCIgO,GAC2B,MAAzB/Z,EAAMiF,OAAOC,KAAKhC,IACpBlB,EAAM,OAAQhC,EAAMiF,OAAOwD,MAIF,MAAzBzI,EAAMiF,OAAOC,KAAKhC,KACflD,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,qBAAsB,KAGvD8U,GACFhY,EAAM,OAAQhC,EAAMiF,OAAOC,MAG7B6G,EAAQ,KACRgO,GAAc,EACdlN,EAAWvK,EAAS,KAItBiY,EAAcrW,QAAQiW,GAEO,MAAzBna,EAAMiF,OAAOC,KAAKhC,KAChB8W,GACF1U,EAAQ,OAAQtF,EAAMiF,OAAOC,MAG/B6G,EAAQ,KACRkC,EAAW,CACTI,eAAe,KAIU,MAAzBrO,EAAMiF,OAAOC,KAAKhC,GAMpB,MAL6B,MAAzBlD,EAAMiF,OAAOwD,KAAKvF,IAAelD,EAAMqF,SACzCC,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,wCAAyC,KAG9EsD,EAAQ,IAAK7G,GACN,CACL+J,MAAOA,EACPmL,OAAQN,EACRO,UAAWH,IAAqBF,IAAaD,QAtFjDhO,EAAQ,KAIV,SAASoO,EAASO,GAChB1a,EAAMmK,MAAM,WAAWgQ,SAAS3K,MAAMxP,EAAMmK,MAAM,WAAYuQ,IAwR/CC,CAAerY,EAASpC,GAsDzC,OApDI0Z,GACF5Z,EAAMmK,MAAM,YAAcyP,EAAWQ,OACrCpa,EAAMmK,MAAM,qBAAuByP,EAAWS,SAC9Cra,EAAMmK,MAAM,aAAa8E,MAAQ2K,EAAW3K,MAC5CjP,EAAMmK,MAAM,aAAayQ,mCAEzB5a,EAAMmK,MAAM,YAAc,GAC1BnK,EAAMmK,MAAM,aAAa8E,MAAQ,EACjCjP,EAAMmK,MAAM,sBAAuB,GAGjCiP,IACF9W,IAAYlC,EAAWiD,MAElBrD,EAAMoF,OAAM,IACfE,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,6BAA8B,KAG9DvI,EAAQ+Z,SACXlO,EAAQ,OAIZ8C,GAAMvM,GAAS,GAAO,GAAM,EAAM8W,GAE7BpZ,EAAM+C,OAAO8X,UAAW1B,GAAgBnZ,EAAMmK,MAAM,cACvD7E,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAG/BzI,EAAMmK,MAAM,aAAa2Q,iCACzB9a,EAAMmK,MAAM,aAAa4Q,iCACzB/a,EAAMmK,MAAM,kBAAoBnK,EAAM+C,OAAOuI,OAC7CtL,EAAM+C,OAASuW,EACftZ,EAAM4H,QAAU2R,EAChBvZ,EAAMmK,MAAM,UAAYnK,EAAMiF,OAAOwD,KAAKzB,KAC1ChH,EAAMmK,MAAM,mBAAqBnK,EAAMiF,OAAOwD,KAAKlB,UAEnDvH,EAAMmK,MAAM,WAAW8I,UAGvBjT,EAAMmK,MAAM,WAAW8I,UACvBjT,EAAMmK,MAAQnK,EAAMmK,MAAM,aAErBkP,GAAmBrZ,EAAM+C,OAAOiY,WAAYhb,EAAMmK,MAAM,cAIvDwE,EAAE,oBACJrJ,EAAQ,OAAQ/C,EAAOoM,EAAE,mBAAmBsM,KAAK,OAI9CtM,EAGT,SAASiK,GAAcsC,GACrB,MAAO,CACL/G,eAAgB,EAChBF,kBAAmB,EACnBkH,gBAAiB,EACjBlM,MAAO,EACP6L,+BAAgC,WAC1B9a,EAAM+C,OAAOqY,eAAiBpM,KAAKmF,eAAiBnU,EAAM+C,OAAOqY,eACnE9V,EAAQ,OAAQ4V,EAAoBlM,KAAKmF,iBAG7CyG,+BAAgC,WAC1Blb,EAAE2b,SAASrb,EAAM+C,OAAOuY,YAActM,KAAKC,MAAQjP,EAAM+C,OAAOuY,WAClEhW,EAAQ,OAAQ4V,EAAoBlM,KAAKC,QAG7CiF,qCAAsC,WAChClU,EAAM+C,OAAOwY,UAAYvM,KAAKiF,iBAAmB,GAAKjF,KAAKiF,mBAAqBjU,EAAM+C,OAAOwY,SAAW,GAC1GjW,EAAQ,OAAQ,KAAM0J,KAAKiF,mBAG/B8G,+BAAgC,WAC9B,IAAIS,EAAMxb,EAAM+C,OAAO0Y,cACnBC,EAAK1M,KAAKmM,gBAEVK,GAAOE,EAAKF,GACdlW,EAAQ,OAAQ4V,EAAoBQ,KAM5C,SAAS/F,KACP3V,EAAMmK,MAAM,aAAagR,iBAAmB,EAK9C,SAASQ,GAAoBpZ,GAC3B,GAAKA,IAASA,EAAMqT,MAIpB,GAAiB,MAAbrT,EAAMW,GAKV,OAAQX,EAAMW,IACZ,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACElD,EAAM+C,OAAO6Y,MAChBtW,EAAQ,OAAQ/C,QAfpBoZ,GAAoBpZ,EAAMuL,OA6B9B,SAASmK,GAAgBV,GAEvB,GAAIvX,EAAM2C,QACR,IAAK,IAAItB,KAAQkW,EACXA,EAAMlW,IAASkW,EAAMlW,GAAMwa,cAAgBtE,EAAMlW,GAAMya,cAAgBvE,EAAMlW,GAAM0a,QACrFzW,EAAQ,OAAQiS,EAAMlW,GAAMwa,aAMpC,SAASzF,GAAa9T,EAASjB,EAAM4G,GACnC,GAAI+J,GAAgBhS,EAAMiF,OAAOC,KAAM,KAAM,CAC3C,IAAI4H,EAAO9M,EAAMiF,OAAOwD,KAAKvF,GAC7B6I,EAAQ,KACR,IAAI7I,EAAKd,GAAWE,GASpB,OARAtC,EAAMiF,OAAOwD,KAAKsI,gBAAiB,EAE/B1P,IAAS6B,EACXlB,EAAM,OAAQhC,EAAMiF,OAAOkH,KAAMW,EAAM5J,GAEvC+E,IAGKjI,EAAMiF,OAAOwD,MA+LxB,SAAS+R,GAAqBlY,EAASpC,GACrC,IAAI8b,EAAe9b,GAAWA,EAAQ+b,WAOtC,OANA3Z,IAAYlC,EAAWqM,KAElBzM,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAMuT,EAAe,2BAA6B,wBAAyB,KAGnGE,GAA8B5Z,EAASpC,GAGhD,SAASgc,GAA8B5Z,EAASpC,GAC9C,IAAIic,EAAKrS,EAgHL5G,EAAIf,EA/GJia,EAAc,GACdC,EAAgBnc,GAAWA,EAAQmc,cACnCL,EAAe9b,GAAWA,EAAQ+b,WAClCK,EAAmBN,EAAe,CACpCC,WAAYD,GACV,KACAO,EAAaF,EAAgBrc,EAAMiF,OAAOwD,KAAOzI,EAAMiF,OAAOC,KAE9DsX,EAAc,SAASA,IACzB,IAAI3C,EAEJ,GAAIY,GAAiBza,EAAMiF,OAAOC,KAAM,CAAC,IAAK,MAG5C,IAFAiX,EAAMD,GAA8B5Z,EAASga,GAExCxS,EAAM,EAAGA,EAAMqS,EAAIjV,OAAQ4C,IAC9BsS,EAAYxT,KAAK,CACf1F,GAAIiZ,EAAIrS,GAAK5G,GACbX,MAAO4Z,EAAIrS,GAAKvH,aAGf,GAAIyP,GAAgBhS,EAAMiF,OAAOC,KAAM,KAC5CkX,EAAYxT,KAAK,CACf1F,GAAI,KACJX,MAAOvC,EAAMiF,OAAOwD,YAEjB,GAAIuJ,GAAgBhS,EAAMiF,OAAOC,KAAM,KAC5C6G,EAAQ,KACRyQ,IACAzQ,EAAQ,SACH,CACL,GAAIiQ,EAAc,CAChB,IAAIS,EAAe5P,EAAWvK,EAAS,IAEnCma,IACFtN,GAAoB7M,EAASma,GAEzBA,EAAara,aACfyX,EAAQ4C,EAAata,aAIzB0X,EAAQzX,GAAWE,GAGjBuX,GACFuC,EAAYxT,KAAK,CACf1F,GAAI2W,EACJtX,MAAOvC,EAAMiF,OAAOwD,SAMxBiU,EAAqB,SAA4Bpa,GACnD,IAAIY,EAAIiQ,EAER,GAAInB,GAAgBhS,EAAMiF,OAAOC,KAAM,KACrC6G,EAAQ,KACRc,EAAWvK,EAAS,IACpByJ,EAAQ,KACRA,EAAQ,KACRyQ,SACK,GAA6B,aAAzBxc,EAAMiF,OAAOC,KAAKhC,IAA8C,aAAzBlD,EAAMiF,OAAOC,KAAKhC,GAClE6I,IACAA,EAAQ,KACRyQ,QACK,CAEL,IAAIG,EAAS7K,GAAW,QAEpB6K,GACG3c,EAAM0X,SACTpS,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,uBAAwB,KAQ9B,iBAA3BlF,EAAMiF,OAAOC,KAAK1D,KACpB0B,EAAKd,GAAWE,GAGhBN,EAAM,OADNmR,EAAOtG,EAAWvK,EAAS,IACP6Q,EAAKhR,QAG3Be,EAAKd,GAAWE,IAGbqa,GAAU3K,GAAgBhS,EAAMiF,OAAOC,KAAM,MAChD6G,EAAQ,KACRyQ,KACStZ,IAEL8Y,GACF7M,GAAoB7M,EAAStC,EAAMiF,OAAOwD,MAG5C2T,EAAYxT,KAAK,CACf1F,GAAIA,EACJX,MAAOvC,EAAMiF,OAAOwD,QAIpBkU,GAAU3K,GAAgBhS,EAAMiF,OAAOC,KAAM,MAC/CI,EAAQ,OAAQtF,EAAMiF,OAAOC,QAOnC,GAAI8M,GAAgBuK,EAAY,KAAM,CAC/BF,GACHtQ,EAAQ,KAGNiG,GAAgBhS,EAAMiF,OAAOC,KAAM,MACrCI,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAK/B,IAFA,IAAImU,GAAqB,GAEjB5K,GAAgBhS,EAAMiF,OAAOC,KAAM,MAAM,CAC/C,IAAIyX,EAAS7K,GAAW,QACxB0K,IAEIG,IAAWC,GAAsB5K,GAAgBhS,EAAMiF,OAAOC,KAAM,OACtEI,EAAQ,OAAQtF,EAAMiF,OAAOC,MAC7B0X,GAAqB,IAGlBD,GAAU3K,GAAgBhS,EAAMiF,OAAOC,KAAM,OAC5C8M,GAAgBhS,EAAMiF,OAAOkH,KAAM,OAErCJ,EAAQ,KAERA,EAAQ,KAGV7I,EAAKlD,EAAMiF,OAAOkH,MAClBhK,EAAQ0K,EAAWvK,EAAS,MAEfH,EAAMC,YAA8B,cAAhBD,EAAMA,OACrCmD,EAAQ,OAAQpC,EAAIA,EAAGf,QAItB6P,GAAgBhS,EAAMiF,OAAOC,KAAM,MACtC6G,EAAQ,KAIZA,EAAQ,UACH,GAAIiG,GAAgBuK,EAAY,KAAM,CAS3C,IARKF,GACHtQ,EAAQ,KAGNiG,GAAgBhS,EAAMiF,OAAOC,KAAM,MACrCI,EAAQ,OAAQtF,EAAMiF,OAAOwD,OAGvBuJ,GAAgBhS,EAAMiF,OAAOC,KAAM,OACzCwX,EAAmBpa,GAEf0P,GAAgBhS,EAAMiF,OAAOC,KAAM,OACrC6G,EAAQ,KACR7I,EAAKlD,EAAMiF,OAAOkH,MAClBhK,EAAQ0K,EAAWvK,EAAS,MAEfH,EAAMC,YAA8B,cAAhBD,EAAMA,OACrCmD,EAAQ,OAAQpC,EAAIA,EAAGf,QAItB6P,GAAgBhS,EAAMiF,OAAOC,KAAM,OACtC6G,EAAQ,MAEJiG,GAAgBhS,EAAMiF,OAAOC,KAAM,SAQ3C6G,EAAQ,KAGV,OAAOqQ,EAGT,SAASS,GAA0B5X,EAAQ9C,GACzC,IAAIqL,EAAQrL,EAAMqL,MACbA,GAEL9N,EAAEod,IAAI7X,EAAQ8X,MAAMhQ,QAAQS,GAASA,EAAQ,CAACA,IAAQtJ,SAAQ,SAAUuG,GACtE,IAAIlI,EAAQkI,EAAI,GACZtI,EAAQsI,EAAI,GACZlI,GAASJ,EAAOI,EAAMiL,MAAQrL,EAAeI,GAASA,EAAMiL,QAAUrL,GAExEmD,EAAQ,OAAQ/C,EAAMiL,MAAOjL,EAAMiL,MAAMrL,UAI/C,SAAS6a,GAAuBxb,EAAMmR,EAAWrQ,GAE/C,IAGI2C,EAAQgY,EAAM9a,EAAO+a,EAHrBzQ,EAAOnK,EAAUlC,EAAWqM,KAC5B0Q,EAAiB,QAAT3b,EACR4b,EAAmB,UAAT5b,EAgBd,IAbKxB,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAMjH,EAAM,KAGvC2b,GAASE,OACXtR,EAAQ,KACR/L,EAAMmK,MAAM,WAAW2I,QACvBoK,GAAW,EACXvK,EAAU4B,aAAc,GAG1B5B,EAAUnF,MAAQ,KAET,CACP,IAAI8P,EAAQ,GAwBZ,IAAK,IAAI/b,KAtBL7B,EAAEuQ,SAAS,CAAC,IAAK,KAAMjQ,EAAMiF,OAAOC,KAAK/C,QAC3C8C,EAASuV,GAAqBlY,GAC9B2a,GAAO,IAEPhY,EAAS,CAAC,CACR/B,GAAId,GAAWE,GACfC,MAAOvC,EAAMiF,OAAOwD,OAEtBwU,GAAO,IAUJxQ,GAAQ2Q,GAAoC,MAAzBpd,EAAMiF,OAAOC,KAAKhC,IACxCoC,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOwD,KAAKtG,OAGzC8C,EACRA,EAAOsY,eAAehc,KAIX,SAHbA,EAAI0D,EAAO1D,IAGL2B,IAEJoC,EAAQ,OAAQ/D,EAAEgB,MAAOhB,EAAE2B,IAGzBlD,EAAMmK,MAAM,WAAW0E,MAAMsB,aACN,IAArBpP,EAAWQ,EAAE2B,KACfoC,EAAQ,OAAQ/D,EAAEgB,MAAOhB,EAAE2B,IAI3B3B,EAAE2B,KACJlD,EAAMmK,MAAM,WAAW2M,WAAWvV,EAAE2B,GAAI,CACtC1B,KAAMA,EACNe,MAAOhB,EAAEgB,QAEX+a,EAAM1U,KAAKrH,EAAEgB,SAKnB,GAA6B,MAAzBvC,EAAMiF,OAAOC,KAAKhC,GAAY,CAChCyP,EAAU6K,gBAAiB,EAC3BzR,EAAQ,MAEHU,GAAuB,MAAff,EAAK,GAAGxI,IAAclD,EAAMiF,OAAOC,KAAK9C,YACnDkD,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,OAGvD,IAAIe,EAAKlD,EAAMiF,OAAOkH,MACtBhK,EAAQ0K,EAAWvK,EAAS,OAGtBH,EAAMC,YAA8B,cAAhBD,EAAMA,OAC5BmD,EAAQ,OAAQpC,EAAIA,EAAGf,OAGpB8a,GACHJ,GAA0BS,EAAOnb,IAQvC,GAAgC,OAA5BnC,EAAMiF,OAAOC,KAAK/C,OAA8C,OAA5BnC,EAAMiF,OAAOC,KAAK/C,MACxD,IAAKZ,KAAK0D,EACJA,EAAOsY,eAAehc,KACxBA,EAAI0D,EAAO1D,GACXvB,EAAMmK,MAAM,WAAW6M,WAAWzV,EAAE2B,KAO1C,GAFAyP,EAAUnF,MAAQmF,EAAUnF,MAAMsH,OAAOwI,GAEZ,MAAzBtd,EAAMiF,OAAOC,KAAKhC,GACpB,MAGFyP,EAAU8K,UAAW,EACrB1R,EAAQ,KACRkC,IAUF,OAPIiP,IACFnR,EAAQ,KACR8C,GAAMvM,GAAS,GAAM,GACrBqQ,EAAU9D,OAAQ,EAClB7O,EAAMmK,MAAM,WAAW8I,WAGlBN,EAttDT+D,GAAiBpF,MAAO,EACxBoF,GAAiBnC,aAAc,EAO/BxF,EAAO,SAAS,SAAUzM,GACxB,IAAIqU,EAAWC,EAmCf,OAjCK5W,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,QAAS,KAG9CzI,EAAM6W,aAAc,EAEhB7W,EAAMiF,OAAOC,KAAK9C,YAA0C,YAA5BpC,EAAMiF,OAAOC,KAAK/C,QAEpDwU,GADAC,EAAiB5W,EAAMiF,OAAOC,MACH/C,MAC3BC,GAAWE,IAImB,YAA5BtC,EAAMiF,OAAOC,KAAK/C,QACpB4J,EAAQ,WACRc,EAAWvK,EAAS,IAGtBtC,EAAMmK,MAAM,WAAW2I,QAEnB8D,GACF5H,KAAK3N,KAAOuV,EACZ5W,EAAMmK,MAAM,WAAW2M,WAAWH,EAAW,CAC3CnV,KAAM,QACNuV,aAAa,EACbxU,MAAOqU,IAET5W,EAAMmK,MAAM,WAAW0E,MAAMoG,IAAI0B,EAAWC,IAE5C5H,KAAK3N,KAAO,KAGd4V,GAAUjI,KAAM1M,GACT0M,QAkLTD,EAAO,QAAQuC,MAAO,EACtB5E,GAAM,KAAK,SAAUpK,EAASwK,EAAMuE,GAClC,IAAItI,EAAI3G,GAAWE,GAAS,GAyB5B,MAvBiB,iBAANyG,GACT6L,GAAY7L,GAGdsI,EAAKvE,KAAOA,EACZuE,EAAKvD,MAAQ/E,EAETA,GAAW,mBAANA,GAAsD,MAA5B/I,EAAMiF,OAAOC,KAAK/C,OACnDmD,EAAQ,SAGNwH,GAAuB,cAAfA,EAAK3K,OAAgC,WAAN4G,GAAwB,WAANA,EAEjD/I,EAAM+C,OAAOwT,OAAQzJ,GAAuB,aAAfA,EAAK3K,OAA+B,UAAN4G,GAAuB,YAANA,GACtFzD,EAAQ,OAAQwH,GAFZ9M,EAAM+C,OAAO2a,MAAOpY,EAAQ,OAAQwH,EAAM/D,GAAY/I,EAAMiD,YAAYjB,EAAM,QAK/EhC,EAAM+C,OAAOwT,MAAe,SAANxN,GAAsB,eAANA,GACrCmH,GAAapD,EAAM9M,IACrBsF,EAAQ,QAIL+L,IACN,KAAK,GACR3E,GAAM,MAAM,SAAUpK,EAASwK,EAAMuE,GAsBnC,OArBKrR,EAAMgQ,UACT1K,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,oBAAqB,MAGtDuJ,GAAgBhS,EAAMiF,OAAOC,KAAM,MACrCmM,EAAKvE,KAAOA,EACZf,IACAsF,EAAKvD,MAAQ9N,EAAMiF,OAAOwD,KAAKgF,IAAInL,EAASwK,IACnCkF,GAAgBhS,EAAMiF,OAAOC,KAAM,MAC5CmM,EAAKvE,KAAOA,EACZf,IACAsF,EAAKvD,MAAQ9N,EAAMiF,OAAOwD,KAAKgF,IAAInL,EAASwK,GAC5CuE,EAAKC,MAAO,GAEZtR,EAAMwO,OAAO,KAAKf,IAAIgI,KAAKpE,EAAM/O,EAASwK,GAGb,eAA3B9M,EAAMiF,OAAOC,KAAK1D,MACpBQ,EAAM,OAAQhC,EAAMiF,OAAOC,KAAM,KAG5BmM,IACN,KAAK,GAaR3E,GAAM,KAAK,SAAUpK,EAASwK,EAAMuE,GAC9BrR,EAAM+C,OAAO4a,OAAS7Q,IAASA,EAAK6Q,OAAqB,aAAZ7Q,EAAK5J,IACpDoC,EAAQ,QAGNtF,EAAM+C,OAAO0P,KAAOgI,GAAiBza,EAAMiF,OAAOkH,KAAM,CAAC,IAAK,QAAUS,EAAS5M,EAAMiF,OAAOkH,KAAMnM,EAAMiF,OAAOwD,OACnHnD,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOwD,KAAKvF,IAGvD,IAb+BX,EAa3Bqb,EAAI,EACJjS,EAAI,GAER,GAAImB,GACgB,iBAAdA,EAAKtL,KAAyB,CACjB,2CAGFI,KAAKkL,EAAK3K,SAAgD,IAFpD,CAAC,QAAS,UAAW,OAAQ,QAAS,WAAY,SAAU,SAAU,SAAU,SAAU,UAE/DN,QAAQiL,EAAK3K,SACtC,SAAf2K,EAAK3K,MAEPmD,EAAQ,OAAQwH,GACP9M,EAAM+C,OAAOyT,QACtBlR,EAAQ,OAAQwH,IAMxB,GAA6B,MAAzB9M,EAAMiF,OAAOC,KAAKhC,GACpB,KACE4O,GAAW,UACXnG,EAAEA,EAAEzE,QAAU2F,EAAWvK,EAAS,IAClCsb,GAAK,EAEwB,MAAzB5d,EAAMiF,OAAOC,KAAKhC,IAStB,GALA6I,EAAQ,KACRkC,EAAW,CACTI,eAAe,IAGY,MAAzBrO,EAAMiF,OAAOC,KAAKhC,GAAY,CAC3BlD,EAAMqF,SACTC,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,oCAAqC,KAG1E,MAuCN,OAlCAsD,EAAQ,KAEY,iBAATe,IACJ9M,EAAM2C,SAA0B,aAAfmK,EAAK3K,OAA8B,IAANyb,GACjDtY,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAG1BzI,EAAM+C,OAAOwT,OACG,SAAfzJ,EAAK3K,OAAmC,aAAf2K,EAAK3K,OAAuC,eAAf2K,EAAK3K,MAC7DmD,EAAQ,OAAQwH,KAUPnB,EAAE,IAAkB,aAAZA,EAAE,GAAGzI,IAAqC,eAAf4J,EAAK3K,OAAyC,gBAAf2K,EAAK3K,UAGvEwJ,EAAE,IAAkB,aAAZA,EAAE,GAAGzI,IAAoC,MAAf4J,EAAK3K,OAAqC,WAApB2K,EAAKA,KAAK3K,OAAsC,eAAf2K,EAAKgB,OAAyC,gBAAfhB,EAAKgB,SAFtIxI,EAAQ,OAAQwH,GAChB7D,EAAY6D,EAAMnB,EAAE,OA9EKpJ,EAqFAuK,GApFlB1K,YAA2B,MAAbG,EAAMW,IAA2B,MAAbX,EAAMW,IAA2B,OAAbX,EAAMW,IAA4B,MAAbX,EAAMW,IAA2B,OAAbX,EAAMW,IAA4B,OAAbX,EAAMW,IAA4B,MAAbX,EAAMW,IAA2B,UAAbX,EAAMW,IAA+B,OAAbX,EAAMW,IAAelD,EAAMoF,SAAW7C,EAAM,WAqF1O+C,EAAQ,OAAQ+L,IAIpBA,EAAKvE,KAAOA,EACLuE,IACN,KAAK,GAAMC,MAAO,EAsBrBvC,EAAO,KAAK,SAAUzM,EAASqK,GAC7B,IAAIkR,EAAKC,EAAetQ,EAAOuQ,EAC3BzH,EAAUtW,EAAMiF,OAAOwD,KACvBuV,EAAahe,EAAMiF,OAAOkH,KAC1B8R,GAAeje,EAAM+C,OAAOmb,aAC5B1F,EAAKH,GAAkB,GAS3B,GAP6B,aAAzBrY,EAAMiF,OAAOC,KAAKhC,KACpB4a,EAAgB9d,EAAMiF,OAAOC,KAAKyY,OAAQ,GAM3B,OAAbnF,EAAGrW,MAKL,OAJAqW,EAAGrO,MAAQgO,GAAW7V,EAAS,CAC7Bd,KAAM,QACN8Y,eAAe,IAEV9B,EAgBT,GAA6B,MAAzBxY,EAAMiF,OAAOC,KAAKhC,IAQtB,GAHA2a,EAAMhR,EAAWvK,EAAS,GAC1ByJ,EAAQ,IAAKiD,MAER6O,EAAL,CAYA,GARAA,EAAIjI,OAAQ,EAER5V,EAAM+C,OAAO4a,OAASE,GAAkB,aAAXA,EAAI3a,IACN,MAAzBlD,EAAMiF,OAAOC,KAAKhC,IAAuC,MAAzBlD,EAAMiF,OAAOC,KAAKhC,IAAuC,MAAzBlD,EAAMiF,OAAOC,KAAKhC,IACpFoC,EAAQ,OAAQ0J,MAIL,MAAX6O,EAAI3a,GAAY,CAGlB,IAFAsK,EAAQqQ,EAAI/Q,KAEQ,MAAbU,EAAMtK,IACXsK,EAAQA,EAAMV,KAGhBiR,EAAOF,EAAI/P,WAEXN,EAAQuQ,EAAOF,EAEVI,IAGEH,IACHA,EAA2B,UAAXD,EAAI3a,IAGtB+a,EAEA3H,EAAQnJ,aAA0B,MAAX0Q,EAAI3a,IAAc4a,IAEzCA,KAICvR,KAA0C,MAAzBvM,EAAMiF,OAAOkH,KAAKjJ,KAEzB,OAAX2a,EAAI3a,KAAgBqJ,KACT,MAAXsR,EAAI3a,IAAgC,OAAlB8a,EAAW9a,IAE7BuM,GAAsBoO,IAAiC,OAAzB7d,EAAMiF,OAAOC,KAAKhC,IAE9B,OAAlB8a,EAAW9a,KAA2B,OAAX2a,EAAI3a,IAA0B,OAAX2a,EAAI3a,KAErC,aAAb2a,EAAIrc,MAAuBwQ,GAAgBwG,EAAI,MAAQ,QAAQ5W,KAAKic,EAAI1b,QACxEmU,EAAQnJ,YAAyB,MAAX0Q,EAAI3a,IAA8B,MAAhB2a,EAAI/Q,KAAK5J,IAEtC,OAAX2a,EAAI3a,KAAkC,QAAlB8a,EAAW9a,IAA2C,eAA3BlD,EAAMiF,OAAOC,KAAK1D,OAp3EvE,IAAoBe,EAm4ElB,OARK0b,KA33Ea1b,EA23EciL,GA13EnBA,OAASjL,EAAMuL,OAASvL,EAAMuK,MAAqB,UAAbvK,EAAMW,IAA+B,UAAbX,EAAMW,IA03EvCsK,IAAUuQ,KAClDE,EAActR,EAAMa,EAAMD,KAAOZ,EAAM,GAAKA,IAAQa,EAAMD,MAAQhB,KAAiBwR,EAAKpR,IAAM3M,EAAMiF,OAAOC,KAAKqI,KAG7G0Q,GACH3Y,EAAQ,OAAQgR,GAGXuH,QAxEL9R,EAAQ,SAr1DZ,SAAqBrC,GACnB,IAAI6E,EAAID,EAAO5E,EAAG,IAalB,OAZA6E,EAAE7B,OAAQ,EAEV6B,EAAEd,IAAM,SAAUnL,EAASwK,GAOzB,OANAe,EAAmB7N,EAAMiF,OAAOkH,KAAMnM,EAAMiF,OAAOwD,MACnDuG,KAAKlC,KAAOA,EACZkC,KAAKlB,MAAQqK,GAAW7V,EAAS,CAC/Bd,KAAM,QACNyY,QAASnN,IAEJkC,MAGFT,EAi5DT4P,CAAY,OAAMxR,IAAM,IACxBD,GAAM,KAAK,SAAUpK,EAASwK,EAAMuE,GAClC,IAAInH,EAAGR,EA8CP,OA5CI1J,EAAM+C,OAAO0P,KAAOgI,GAAiBza,EAAMiF,OAAOkH,KAAM,CAAC,IAAK,QAAUS,EAAS5M,EAAMiF,OAAOkH,KAAMnM,EAAMiF,OAAOwD,OACnHnD,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOwD,KAAKvF,KAGvDgH,EAAI2C,EAAWvK,GAAWlC,EAAWqM,KAAM,KAEvB,aAAXvC,EAAE1I,OACJxB,EAAM+C,OAAOwT,MAAqB,SAAZrM,EAAE/H,OAAgC,eAAZ+H,EAAE/H,OAC7C+N,GAAapD,EAAM9M,IACrBsF,EAAQ,QAIZsP,GAAY1K,EAAE/H,QAETnC,EAAM+C,OAAOqb,KAAOre,EAAIqC,WAAWR,KAAKsI,EAAE/H,UAC7CuH,EAAI1J,EAAMwO,OAAOtE,EAAE/H,SAGJE,EAAWC,EAASoH,GAQT,SAAZQ,EAAE/H,OAAgC,cAAZ+H,EAAE/H,QAIpCmD,EAAQ,OAAQtF,EAAMiF,OAAOkH,KAAMjC,EAAE/H,QAK3C4J,EAAQ,IAAKsF,GAETnH,GAAiB,mBAAZA,EAAE/H,OAA0D,MAA5BnC,EAAMiF,OAAOC,KAAK/C,OACzDmD,EAAQ,QAGV+L,EAAKvE,KAAOA,EACZuE,EAAKvD,MAAQ5D,EACNmH,IACN,KAAK,GA+DRtC,EAAO,KAAK,SAAUzM,GACpB,IAAI+b,EAAYC,KAEhB,GAAID,EAAUE,YAKZ,OAJKve,EAAM+C,OAAOyb,QAAWxe,EAAMyU,SACjCnP,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,uBAlEzC,SAAsCnG,GACpC,IAAIuQ,EAAM,CACVA,MAAW,GACX7S,EAAMmK,MAAM,eAAe2I,QAE3B,IAAI2L,GAAW,EAqDf,MAnDgC,QAA5Bze,EAAMiF,OAAOC,KAAK/C,QACpBsc,GAAW,EAENze,EAAMyU,SACTnP,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,MAAOlF,EAAMiF,OAAOC,KAAK/C,OAG9DnC,EAAMmK,MAAM,eAAeuU,SAAS,OACpC7L,EAAI/E,MAAQjB,EAAWvK,EAAS,KAGlCyJ,EAAQ,OAEwB,SAA5B/L,EAAMiF,OAAOC,KAAK/C,QACpB4J,EAAQ,QAEH/L,EAAMyU,SACTnP,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,aAIvCsD,EAAQ,KACR/L,EAAMmK,MAAM,eAAeuU,SAAS,UACpC7L,EAAI/F,KAAOD,EAAWvK,EAAS,KAE3B5C,EAAEuQ,SAAS,CAAC,KAAM,MAAOjQ,EAAMiF,OAAOC,KAAK/C,OAC7C4J,IAGA/J,EAAM,OAAQhC,EAAMiF,OAAOwD,MAG7BzI,EAAMmK,MAAM,eAAeuU,SAAS,YACpC7R,EAAWvK,EAAS,IACpByJ,EAAQ,KAEwB,OAA5B/L,EAAMiF,OAAOC,KAAK/C,QACpB4J,EAAQ,MACRA,EAAQ,KACR/L,EAAMmK,MAAM,eAAeuU,SAAS,UACpC7R,EAAWvK,EAAS,IACpByJ,EAAQ,MAGL0S,IACHze,EAAMmK,MAAM,eAAeuU,SAAS,OACpC7L,EAAI/E,MAAQjB,EAAWvK,EAAS,KAGlCyJ,EAAQ,KACR/L,EAAMmK,MAAM,eAAe8I,UACpBJ,EAWE8L,CAA6Brc,GAC/B,GAAI+b,EAAUO,aAKnB,OAJA5P,KAAKkC,eAAiBsJ,GAAqBlY,EAAS,CAClD+Z,eAAe,EACfJ,YAAY,IAEPjN,KAGT,IAAIrL,GAAKiJ,EAAS5M,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOC,MAYlD,IAXA8J,KAAKxB,MAAQ,GAET7J,IACFjD,GAAUV,EAAM+C,OAAOrC,OAEnBV,EAAMiF,OAAOC,KAAKsC,OAAS9G,EAASV,EAAM+C,OAAOrC,SAEnDA,GAAUV,EAAM+C,OAAOrC,SAIK,UAAzBV,EAAMiF,OAAOC,KAAKhC,IAAgB,CACvC,KAAgC,MAAzBlD,EAAMiF,OAAOC,KAAKhC,IAAY,CACnC,IAAKlD,EAAM+C,OAAO8b,QAAS,CACzB,GAAK7e,EAAM2C,QAIJ,CACL2C,EAAQ,QAER,GACEyG,EAAQ,WACwB,MAAzB/L,EAAMiF,OAAOC,KAAKhC,IAE3B,SARAoC,EAAQ,QAYZyG,EAAQ,KAGV,GAA6B,MAAzB/L,EAAMiF,OAAOC,KAAKhC,GACpB,MAMF,GAHA4O,GAAW,UACX9C,KAAKxB,MAAM5E,KAAKiE,EAAWvK,EAAS,KAEP,MAAzBtC,EAAMiF,OAAOC,KAAKhC,GAUf,CACDlD,EAAM+C,OAAO+b,eAAiB9e,EAAM2C,SACtCmG,EAAU,OAAQ9I,EAAMiF,OAAOwD,KAAKzB,KAAMhH,EAAMiF,OAAOwD,KAAKlB,WAG9D,MATA,GALAwE,EAAQ,KACRkC,EAAW,CACTI,eAAe,IAGY,MAAzBrO,EAAMiF,OAAOC,KAAKhC,KAAelD,EAAM2C,QAAS,CAClD2C,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAC7B,OAgBN,OALI9E,IACFjD,GAAUV,EAAM+C,OAAOrC,QAGzBqL,EAAQ,IAAKiD,MACNA,QAygBT,SAAWT,GACTA,EAAEjB,IAAM,SAAUhL,GAChB,IAAIqB,EACAgL,EACA/C,EACAwO,EACA7Y,EAEAwd,EADAC,GAAoB,EAEpBzH,EAAQvT,OAAOwT,OAAO,MAEtByH,GAAgB,EAcpB,IAbAtb,GAAKiJ,EAAS5M,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOC,SAG5CxE,GAAUV,EAAM+C,OAAOrC,OAEnBV,EAAMiF,OAAOC,KAAKsC,OAAS9G,EAASV,EAAM+C,OAAOrC,SAEnDA,GAAUV,EAAM+C,OAAOrC,SAIX4d,KAEFM,aAKZ,OAJA5P,KAAKkC,eAAiBsJ,GAAqBlY,EAAS,CAClD+Z,eAAe,EACfJ,YAAY,IAEPjN,KAKT,IAFAhP,EAAMkf,cAAe,EAGU,MAAzBlf,EAAMiF,OAAOC,KAAKhC,IADf,CAOP,GAFA6b,EAAU/e,EAAMiF,OAAOC,KAAK/C,OAExBnC,EAAMiF,OAAOC,KAAK9C,YAAsC,MAAvB0J,IAAgB5I,IAAqC,MAAvB4I,IAAgB5I,GAQ5E,GAAkB,MAAdwI,IAAOxI,IAA2B,QAAZ6b,GAAiC,QAAZA,EAoC/C,GAAIjN,GAAW,UACf9R,EAAM0X,SACTpS,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,yBAA0B,KAG/D2H,EAAWvK,EAAS,QACf,CA0BL,GAzB6B,UAAzBtC,EAAMiF,OAAOC,KAAKhC,IAAmBuX,GAAiB/O,IAAQ,CAAC,IAAK,MAStEuT,GAAgB,GARXjf,EAAMqF,SACTC,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,kBAAmB,KAGxD+Z,GAAgB,EAChBlT,IACAiC,EAAYhO,EAAMiF,OAAOwD,OAKK,MAA5BzI,EAAMiF,OAAOC,KAAK/C,OAA4C,iBAA3BnC,EAAMiF,OAAOC,KAAK1D,MACnDyd,IAAkBjf,EAAM0X,QAC1BpS,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,mBAAoB,KAC7ClF,EAAMoF,SAChBE,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,sBAAuB,KAG5D6G,EAAQ,KACRiT,GAAoB,GAEpBA,GAAoB,EAGO,MAAzBhf,EAAMiF,OAAOC,KAAKhC,GACpB0I,EAAImM,GAAqBzV,GACzBtC,EAAMkN,UAAU+D,IAAIrF,QAMpB,GAJA5L,EAAMkN,UAAU+D,IAAIjR,EAAMiF,OAAOC,MAEjCyS,GAAaJ,EADb3L,EAAIgM,GAAatV,GACMtC,EAAMiF,OAAOC,MAEnB,iBAAN0G,EACT,MAI4B,MAA5B5L,EAAMiF,OAAOC,KAAK/C,OACfnC,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,kBAAmB,KAGxD0P,GAAW8G,EAAgB3c,EAAUlC,EAAWqX,SAAWnV,EAAS,CAClE8V,UAAU,EACV5W,KAAMwd,EAAoB,YAAc,SAG1CjT,EAAQ,KACRc,EAAWvK,EAAS,UA3FtByJ,EAAQgT,GAEH/e,EAAM2C,SACTX,EAAM,QAGqB,MAAzBhC,EAAMiF,OAAOC,KAAKhC,GACpB0I,EAAImM,GAAqBzV,IAEzBsJ,EAAIgM,GAAatV,KAINtC,EAAMoF,SACfpD,EAAM,QAMN4J,GACFoM,GAAa+G,EAASxH,EAAO3L,EAAG5L,EAAMiF,OAAOwD,MAG/ClH,EAAIvB,EAAMiF,OAAOC,KAIjBkV,GAHAzL,EAAIwJ,GAAW7V,EAAS,CACtB8V,UAAU,KAED,YAEK,QAAZ2G,GAAqBnT,GAAKwO,EAAOlT,OACnC5B,EAAQ,OAAQ/D,EAAG6Y,EAAO,GAAIxO,GACT,QAAZmT,GAAqBnT,GAA8B,IAAzB+C,EAAE,aAAaM,OAClD3J,EAAQ,OAAQ/D,EAAGqK,QAzChB5L,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,wBAAyB,KAK9DyS,GAAaJ,EADb3L,GADArK,EAAIsL,EAAWvK,EAAS,KAClBH,MACiBZ,GAmGzB,GAFAqT,GAAYhJ,GAEiB,MAAzB5L,EAAMiF,OAAOC,KAAKhC,GAaf,CACDlD,EAAM+C,OAAO+b,eAAiB9e,EAAM2C,SACtCmG,EAAU,OAAQ9I,EAAMiF,OAAOwD,KAAKzB,KAAMhH,EAAMiF,OAAOwD,KAAKlB,WAG9D,MAjBAwE,EAAQ,KACRkC,EAAW,CACTI,eAAe,EACfD,UAAU,IAGiB,MAAzBpO,EAAMiF,OAAOC,KAAKhC,GAEpBoC,EAAQ,OAAQtF,EAAMiF,OAAOwD,MACK,MAAzBzI,EAAMiF,OAAOC,KAAKhC,IAAelD,EAAM2C,SAChD2C,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAkBnC,OAPI9E,IACFjD,GAAUV,EAAM+C,OAAOrC,QAGzBqL,EAAQ,IAAKiD,MACbiJ,GAAgBV,GAChBvX,EAAMkf,cAAe,EACdlQ,MAGTT,EAAEnB,IAAM,WAENpL,EAAM,OAAQhC,EAAMiF,OAAOwD,OAtL/B,CAwLGgG,EAAM,MA4VT,IAAI0Q,GAAiBzQ,EAAK,SAAS,SAAUpM,GAC3C,OAAO0a,GAAuB,QAAShO,KAAM1M,MAyB/C,SAAS+a,KACP,MAAgC,MAAzBrd,EAAMiF,OAAOC,KAAKhC,IAAclD,EAAMyU,QAxB/C0K,GAAe7N,MAAO,EACtB6N,GAAe5K,aAAc,EA0B7B,IAg3BW6K,GAgEAC,GAh7BPC,GAAe5Q,EAAK,OAAO,SAAUpM,GACvC,OAAO0a,GAAuB,MAAOhO,KAAM1M,MAG7Cgd,GAAahS,IAAM,SAAUhL,EAASqK,GACpC,IAAI0Q,KAUF,OADArO,KAAKsC,MAAO,EACLtR,EAAMwO,OAAO,gBAAgBlB,IAAIkC,MAAMR,KAAMxC,WARpDxM,EAAMmK,MAAM,WAAW2I,QACvB/G,EAAQ,KACR/L,EAAMiF,OAAOkH,KAAKiB,IAAI9K,GACtByJ,EAAQ,KACRc,EAAWvK,EAASqK,GACpB3M,EAAMmK,MAAM,WAAW8I,WAO3BqM,GAAa7c,KAAO,CAClBG,KAAK,EACLF,sBAAsB,EACtBI,YAAY,GAEdwc,GAAahO,MAAO,EACpBgO,GAAa/K,aAAc,EAE3B+K,GAAajS,OAAS,SAAU/K,GAC9B,IAAI4C,EAAOlF,EAAMiF,OAAOC,KAGxB,QAAI8J,KAAKhI,OAAS9B,EAAK8B,OAAShH,EAAMoF,WAclBF,EAAK9C,cAAgBC,EAAWC,EAAS4C,IAAqB,QAAZA,EAAKhC,KAC/CuX,GAAiBvV,EAAM,CAAC,IAAK,OAASmY,OAGjD3O,EAAK,OAAO,SAAUpM,GACvC,IACI2C,EAAQgY,EAAM9a,EAAOe,EADrBuJ,EAAOnK,EAAUlC,EAAWqM,KAIhC,IAFAuC,KAAKxB,MAAQ,KAEJ,CACP,IAAI8P,EAAQ,GAuBZ,IAAK,IAAI/b,KArBL7B,EAAEuQ,SAAS,CAAC,IAAK,KAAMjQ,EAAMiF,OAAOC,KAAK/C,QAC3C8C,EAASuV,GAAqBlY,GAC9B2a,GAAO,IAEPhY,EAAS,IACT/B,EAAKd,GAAWE,KAGd2C,EAAO2D,KAAK,CACV1F,GAAIA,EACJX,MAAOvC,EAAMiF,OAAOwD,OAIxBwU,GAAO,GAGLjd,EAAM+C,OAAOwc,SACfja,EAAQ,OAAQ0J,MAGJ/J,EACRA,EAAOsY,eAAehc,KACxBA,EAAI0D,EAAO1D,GAEPvB,EAAMmK,MAAM,cAAgBnK,EAAMwf,oBACX,IAArBze,EAAWQ,EAAE2B,IACfoC,EAAQ,OAAQ/D,EAAEgB,MAAOhB,EAAE2B,KACa,IAA/BlD,EAAM+C,OAAO0c,iBACjBzf,EAAM2C,UAA6C,IAAlC/C,EAAKuF,gBAAgB,GAAG5D,EAAE2B,MAAkBlD,EAAMoF,UAA6C,IAAlCxF,EAAKuF,gBAAgB,GAAG5D,EAAE2B,MAC3GoC,EAAQ,OAAQ/D,EAAEgB,MAAOhB,EAAE2B,KAK7B3B,EAAE2B,KACJlD,EAAMmK,MAAM,WAAW2M,WAAWvV,EAAE2B,GAAI,CACtC1B,KAAM,MACNe,MAAOhB,EAAEgB,QAEX+a,EAAM1U,KAAKrH,EAAEgB,SAgCnB,GA3B6B,MAAzBvC,EAAMiF,OAAOC,KAAKhC,KACpB8L,KAAKwO,gBAAiB,EACtBxd,EAAMkN,UAAU+D,IAAIjR,EAAMiF,OAAOwD,MACjCsD,EAAQ,KAEW,MAAfL,EAAK,GAAGxI,IAAclD,EAAMiF,OAAOC,KAAK9C,cACrCqK,GAASzM,EAAMmK,MAAM,eAA6E,IAA9DnK,EAAMmK,MAAM,YAAYtI,QAAQ7B,EAAMiF,OAAOC,KAAK/C,QACzFmD,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,QAIzDe,EAAKlD,EAAMiF,OAAOkH,MAClBhK,EAAQ0K,EAAWvK,EAAS,QAGrBtC,EAAMmK,MAAM,cAAgBhI,EAAMC,YAA8B,cAAhBD,EAAMA,OACzDmD,EAAQ,OAAQpC,EAAIA,EAAGf,OAGpB8a,GACHJ,GAA0BS,EAAOnb,KAKvC6M,KAAKxB,MAAQwB,KAAKxB,MAAMsH,OAAOwI,GAEF,MAAzBtd,EAAMiF,OAAOC,KAAKhC,GACpB,MAGF8L,KAAKyO,UAAW,EAChB1R,EAAQ,KACRkC,IAGF,OAAOe,QAEIsC,MAAO,EACpB1C,EAAU,YAAY,SAAUtM,GAC9B,IAAIod,EAAWpd,EAAUlC,EAAWuf,OAChCzH,GAAY,EACZsB,EAAUlX,EAAUlC,EAAWqX,SAC/BmI,EAAY,GAEZpG,IACFoG,EAAY,UAGkB,MAA5B5f,EAAMiF,OAAOC,KAAK/C,QAChBqX,IAAYxZ,EAAM0X,QACpBpS,EAAQ,OAAQtF,EAAMiF,OAAOkH,KAAM,mBAAoB,KAC7CqN,GAAYxZ,EAAMoF,OAAM,IAClCE,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,YAAa,KAGlD6G,EAAQ,KACR6T,GAAa,aACb1H,GAAY,GAGd0H,GAAa,WAETnf,GACF6E,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAG/BuG,KAAK3N,KAAOsQ,GAAmBrP,GAAWtC,EAAMiF,OAAOwD,KAAO,KAEzDuG,KAAK3N,KAKRrB,EAAMmK,MAAM,WAAW2M,WAAW9H,KAAK3N,KAAKc,MAAO,CACjDX,KAAMoe,EACNrd,MAAOvC,EAAMiF,OAAOwD,KACpBsO,aAAa,IAPV2I,GACHpa,EAAQ,QAUZ,IAAIqJ,EAAIwJ,GAAW7V,EAAS,CAC1BjB,KAAM2N,KAAK3N,MAAQ2N,KAAK3N,KAAKc,MAC7BwQ,UAAW3D,KACXxN,KAAM0W,EAAY,YAAc,KAChCmB,eAAgB5Y,IASdof,EAAoBlR,EAAE,gBAAkB3O,EAAMiD,WAalD,OAXI+L,KAAK3N,OAAyB,cAAhBsN,EAAE,WAA6C,SAAhBA,EAAE,YAAyBkR,GAC1E7d,EAAM,OAAQgN,KAAK3N,MAMQ,MAAzBrB,EAAMiF,OAAOC,KAAKhC,IAA4B,MAAdwI,IAAOxI,IAA6B,OAAfwI,EAAK,GAAGxI,IAAelD,EAAMiF,OAAOC,KAAK8B,OAAShH,EAAMiF,OAAOwD,KAAKzB,MAC3HhF,EAAM,QAGDgN,QACNuF,aAAc,EACjBxF,EAAO,YAAY,SAAUzM,GAC3B,IAAI4V,GAAY,EACZsB,EAAUlX,EAAUlC,EAAWqX,SAEH,MAA5BzX,EAAMiF,OAAOC,KAAK/C,QAChBqX,IAAYxZ,EAAM0X,QACpBpS,EAAQ,OAAQtF,EAAMiF,OAAOkH,KAAM,mBAAoB,KAC7CqN,GAAYxZ,EAAMoF,OAAM,IAClCE,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,YAAa,KAGlDsD,EAAQ,KACRmM,GAAY,GAKdlJ,KAAK3N,KAAOsQ,GAAmB6H,EAAUlX,EAAUlC,EAAW+C,MAAQb,GAAWtC,EAAMiF,OAAOwD,KAAO,KACrG,IAAIkG,EAAIwJ,GAAW7V,EAAS,CAC1BjB,KAAM2N,KAAK3N,MAAQ2N,KAAK3N,KAAKc,MAC7BX,KAAM0W,EAAY,YAAc,OAWlC,OARIA,GAAalJ,KAAK3N,MAA4B,UAApB2N,KAAK3N,KAAKc,OACtCH,EAAM,OAAQgN,KAAK3N,KAAM,SAGvB2N,KAAK3N,OAAyB,cAAhBsN,EAAE,WAA6C,SAAhBA,EAAE,YAAyBA,EAAE,eAC5E3M,EAAM,OAAQgN,KAAK3N,MAGd2N,QAETJ,EAAU,MAAM,SAAUtM,GACxB,IAAIf,EAAIvB,EAAMiF,OAAOC,KACrByQ,KACA5J,EAAQ,KACR,IAAIoH,EAAOtG,EAAWvK,EAAS,GAE1B6Q,GACHnO,EAAK,OAAQgK,MAGf2M,GAAoBxI,GAGpB,IAAI2M,EAAe,KAEf9f,EAAM+C,OAAOgd,OAAS/f,EAAMggB,qBAC9BhgB,EAAMggB,oBAAqB,EAE3BF,EAAe9f,EAAMigB,cAAcjgB,EAAMigB,cAAc/Y,OAAS,GAE9C,iBAAdiM,EAAK3R,MAA0C,MAAf2R,EAAKhR,MACvC2d,EAAate,KAAO,aAEpBse,EAAate,KAAO,cAIxBuK,EAAQ,IAAKxK,GACb,IAAImI,EAAImF,GAAMvM,GAAS,GAAM,GAmB7B,OAhBIwd,GAAsC,eAAtBA,EAAate,MAC3BkI,GAAKA,EAAE,IAAoB,iBAAdA,EAAE,GAAGlI,MAA0C,aAAfkI,EAAE,GAAGvH,QACpD2d,EAAate,KAAO,4BAIK,SAAzBxB,EAAMiF,OAAOC,KAAKhC,KACpB6I,EAAQ,QAEqB,OAAzB/L,EAAMiF,OAAOC,KAAKhC,IAAwC,WAAzBlD,EAAMiF,OAAOC,KAAKhC,GACrDyP,GAAUrQ,GAEVuM,GAAMvM,GAAS,GAAM,IAIlB0M,QAETJ,EAAU,OAAO,SAAUtM,GACzB,IAAIqB,EACAuc,GAAe,EAEnB,SAASC,IAGP,GAFApU,EAAQ,KAEJ0O,GAAiBza,EAAMiF,OAAOC,KAAM,CAAC,IAAK,MAAO,CACnD,IAAID,EAASuV,GAAqBlY,GAElC5C,EAAE0gB,KAAKnb,GAAQ,SAAU1C,GACnBA,EAAMW,IACRlD,EAAMmK,MAAM,WAAWgQ,SAAS5X,EAAMW,GAAIX,EAAMA,MAAO,oBAGvB,iBAA3BvC,EAAMiF,OAAOC,KAAK1D,KAC3B8D,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,OAIrDnC,EAAMmK,MAAM,WAAWgQ,SAAS/X,GAAWE,GAAUtC,EAAMiF,OAAOwD,KAAM,aAG1C,OAA5BzI,EAAMiF,OAAOC,KAAK/C,QACfnC,EAAMyU,SACTnP,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,gBAGrCsD,EAAQ,MACRc,EAAWvK,EAAS,IAGtByJ,EAAQ,KAKV,IAFA8C,GAAMvM,EAAUlC,EAAWqZ,WAAW,GAEN,UAAzBzZ,EAAMiF,OAAOC,KAAKhC,IACvByS,KAEIhS,IAAM3D,EAAMyU,SACdnP,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,yBAGrC6G,EAAQ,SAEqB,MAAzB/L,EAAMiF,OAAOC,KAAKhC,IACpBlD,EAAMmK,MAAM,WAAW2I,MAAM,eAC7BoN,GAAe,EACfC,KACUngB,EAAMqgB,UAChB/a,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,yBAA0B,MAG/DoG,GAAMvM,GAAS,GAEX4d,IACFlgB,EAAMmK,MAAM,WAAW8I,UACvBiN,GAAe,GAGjBvc,GAAI,EAGN,MAA6B,YAAzB3D,EAAMiF,OAAOC,KAAKhC,IACpB6I,EAAQ,gBACR8C,GAAMvM,GAAS,KAIZqB,GACH3B,EAAM,OAAQhC,EAAMiF,OAAOC,KAAM,QAASlF,EAAMiF,OAAOC,KAAK/C,OAGvD6M,SAETJ,EAAU,SAAS,SAAUtM,GAC3B,IAAIf,EAAIvB,EAAMiF,OAAOC,KAUrB,OATAlF,EAAMmK,MAAM,eAAiB,EAC7BnK,EAAMmK,MAAM,cAAgB,EAC5BwL,KACA5J,EAAQ,KACR4P,GAAoB9O,EAAWvK,EAAS,IACxCyJ,EAAQ,IAAKxK,GACbsN,GAAMvM,GAAS,GAAM,GACrBtC,EAAMmK,MAAM,eAAiB,EAC7BnK,EAAMmK,MAAM,cAAgB,EACrB6E,QACNgE,UAAW,EACdpE,EAAU,QAAQ,SAAUtM,GAC1B,IAAIf,EAAIvB,EAAMiF,OAAOC,KAYrB,OAVIlF,EAAMiD,WACRjB,EAAM,OAAQhC,EAAMiF,OAAOwD,MACjBzI,EAAM+C,OAAOud,UACvBhb,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAG/BsD,EAAQ,KACRc,EAAWvK,EAAS,GACpByJ,EAAQ,IAAKxK,GACbsN,GAAMvM,GAAS,GAAM,GACd0M,QAETJ,EAAU,UAAU,SAAUtM,GAC5B,IAAIf,EAAIvB,EAAMiF,OAAOC,KACjBqb,GAAI,EACJC,GAAW,EACXC,GAAW,EAWf,IAVAzgB,EAAMmK,MAAM,eAAiB,EAC7B4B,EAAQ,KACR4P,GAAoB9O,EAAWvK,EAAS,IACxCyJ,EAAQ,IAAKxK,GACbA,EAAIvB,EAAMiF,OAAOC,KACjB6G,EAAQ,KACR/L,EAAMmK,MAAM,WAAW2I,QACnB9S,EAAMiF,OAAOC,KAAKsC,OAAS9G,IAAQ8f,GAAW,GAC7CA,IAAU9f,GAAUV,EAAM+C,OAAOrC,UAGpC,OAAQV,EAAMiF,OAAOC,KAAKhC,IACxB,IAAK,OACH,OAAQlD,EAAMmK,MAAM,WAClB,IAAK,QACL,IAAK,QACL,IAAK,OACL,IAAK,WACL,IAAK,SACL,IAAK,SACL,IAAK,QACH,MAEF,IAAK,UACCnK,EAAM+C,OAAO2d,YACfpb,EAAQ,OAAQtF,EAAMiF,OAAOC,MAG/B,MAEF,QAIOlF,EAAMiF,OAAOwD,KAAKgD,kBACrBnG,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,QAKzCsD,EAAQ,QACRc,EAAWvK,EAAS,GACpBme,GAAW,EACX9K,KACA4K,GAAI,EACJxU,EAAQ,KACR/L,EAAMmK,MAAM,UAAY,OACxB,MAEF,IAAK,UACH,OAAQnK,EAAMmK,MAAM,WAClB,IAAK,QACL,IAAK,QACL,IAAK,WACL,IAAK,SACL,IAAK,QACH,MAEF,IAAK,OACCnK,EAAM+C,OAAO2d,YACfpb,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAG/B,MAEF,QAGMgY,IAAazgB,EAAMiF,OAAOwD,KAAKgD,kBACjCnG,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,WAKzCsD,EAAQ,WACRwU,GAAI,EACJxU,EAAQ,KACR/L,EAAMmK,MAAM,UAAY,UACxB,MAEF,IAAK,IAMH,OALKqW,IAAU9f,GAAUV,EAAM+C,OAAOrC,QACtCqL,EAAQ,IAAKxK,GACbvB,EAAMmK,MAAM,WAAW8I,UACvBjT,EAAMmK,MAAM,eAAiB,OAC7BnK,EAAMmK,MAAM,eAAYzF,GAK1B,IAAK,QAEH,YADA1C,EAAM,OAAQhC,EAAMiF,OAAOC,KAAM,KAGnC,QAGE,GAFAxE,GAAUV,EAAM+C,OAAOrC,OAEnB6f,EACF,OAAQvgB,EAAMiF,OAAOwD,KAAKvF,IAExB,IAAK,IAEH,YADAlB,EAAM,QAGR,IAAK,IACHue,GAAI,EACJlN,GAAW/Q,GACX,MAIF,QAEE,YADAN,EAAM,OAAQhC,EAAMiF,OAAOwD,UAG1B,CAEL,GAA6B,MAAzBzI,EAAMiF,OAAOwD,KAAKvF,GAMpB,YADAlB,EAAM,OAAQhC,EAAMiF,OAAOC,KAAM,OAAQlF,EAAMiF,OAAOC,KAAK/C,OAJ3D4J,EAAQ,KACR/J,EAAM,OAAQhC,EAAMiF,OAAOwD,KAAM,KACjC4K,GAAW/Q,GAOf5B,GAAUV,EAAM+C,OAAOrC,WAG5BsS,UAAW,EACdtE,EAAK,YAAY,WAKf,OAJK1O,EAAM+C,OAAO4d,OAChBrb,EAAQ,OAAQ0J,MAGXA,QACNsC,MAAO,EAEV,WACE,IAAI/C,EAAIG,EAAK,MAAM,SAAUpM,GAC3BtC,EAAMmK,MAAM,eAAiB,EAC7BnK,EAAMmK,MAAM,cAAgB,EAC5BwL,KACA3G,KAAKxB,MAAQqB,GAAMvM,GAAS,GAAM,GAClCyJ,EAAQ,SACR,IAAIxK,EAAIvB,EAAMiF,OAAOC,KAMrB,OALA6G,EAAQ,KACR4P,GAAoB9O,EAAWvK,EAAS,IACxCyJ,EAAQ,IAAKxK,GACbvB,EAAMmK,MAAM,eAAiB,EAC7BnK,EAAMmK,MAAM,cAAgB,EACrB6E,QAETT,EAAEyE,UAAW,EACbzE,EAAE+C,MAAO,EAhBX,GAmBA1C,EAAU,OAAO,SAAUtM,GACzB,IAAIoH,EA6BAkX,EAEAC,EAEAC,EAEAC,EACAC,EACAC,EACAC,EArCA3f,EAAIvB,EAAMiF,OAAOC,KACjBic,GAAW,EACX3H,GAAU,EACV4H,EAAa,KAED,SAAZ7f,EAAEY,QACJif,EAAa7f,EACbwK,EAAQ,QAEH/L,EAAMyU,SACTnP,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,aAInCzI,EAAMiF,OAAOC,KAAK9C,YAA0C,UAA5BpC,EAAMiF,OAAOC,KAAK/C,QACpD4J,EAAQ,SACRyN,GAAU,EAEJlX,EAAUlC,EAAW+C,MAEfnD,EAAM0X,SAChBpS,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,yBAA0B,KAF7DzG,EAAM,OAAQhC,EAAMiF,OAAOwD,KAAM,UAMrCkN,KACA5J,EAAQ,KAYR,IAAIsV,EAAY3V,IACZ4V,EAAchf,EAAUlC,EAAWqM,KAEvC,GAA6B,QAAzBzM,EAAMiF,OAAOC,KAAKhC,GACpB6I,EAAQ,OAER8U,GADAK,EAAOlhB,EAAMiF,OAAOwD,KAAK2E,IAAIkU,IAChB7D,SAAWyD,EAAO,KAC/BJ,EAAcI,EAAK1D,eAAiB0D,EAAO,UACtC,GAA6B,UAAzBlhB,EAAMiF,OAAOC,KAAKhC,IAGJ,QAAzBlD,EAAMiF,OAAOC,KAAKhC,KAAiBme,EAAUjf,YAA+B,OAAjBif,EAAUne,IAAeuX,GAAiB4G,EAAW,CAAC,IAAK,OACpHtV,EAAQ/L,EAAMiF,OAAOC,KAAKhC,IAE1Bie,GAAW,EACXnhB,EAAMmK,MAAM,WAAW2I,QAEvB+N,GADAK,EAAOlhB,EAAMiF,OAAOwD,KAAK2E,IAAIkU,IAChB7D,SAAWyD,EAAO,KAC/BJ,EAAcI,EAAK1D,eAAiB0D,EAAO,UACtC,IAAKlP,GAAgBhS,EAAMiF,OAAOC,KAAM,KAAM,CAGnD,IAFA8b,EAAU,GAEyB,OAA5BhhB,EAAMiF,OAAOC,KAAK/C,OAA8C,OAA5BnC,EAAMiF,OAAOC,KAAK/C,QAAmB6P,GAAgBhS,EAAMiF,OAAOC,KAAM,MAC7GuV,GAAiBza,EAAMiF,OAAOC,KAAM,CAAC,IAAK,OAC5CsV,GAAqB8G,EAAa,CAChCrF,YAAY,IACX/X,SAAQ,SAAUgF,GACnB8F,KAAKpG,KAAKM,EAAK3G,SACdye,GAEChP,GAAgBhS,EAAMiF,OAAOC,KAAM,OACrC6G,EAAQ,KACR+U,EAAc9gB,EAAMiF,OAAOwD,KAC3BoE,EAAWyU,EAAa,OAG1BL,EAASpU,EAAWyU,EAAa,OAGX,iBAAhBL,EAAOzf,KACTwf,EAAQpY,KAAKqY,GACJjP,GAAgBiP,EAAQ,OACjCH,EAAcG,EACdD,EAAQpY,KAAKqY,KAKfjP,GAAgBhS,EAAMiF,OAAOC,KAAM,OACrC6G,EAAQ,KAEH8U,IACHA,EAAQ7gB,EAAMiF,OAAOwD,OAQtBqY,GAAgBD,GACnBG,EAAQ9c,SAAQ,SAAU3B,GACnBvC,EAAMmK,MAAM,WAAWrI,IAAIS,EAAMJ,QACpCmD,EAAQ,OAAQ/C,EAAOA,EAAMJ,UAarC,GAPAye,EAAS5gB,EAAMiF,OAAOC,KAElBsU,GAA4B,OAAjBoH,EAAOze,OACpBH,EAAM,OAAQ4e,GAIZlhB,EAAEuQ,SAAS,CAAC,KAAM,MAAO2Q,EAAOze,OAAQ,CAmD1C,GAlDqB,OAAjBye,EAAOze,OACT4e,EAAe,GAEV/gB,EAAMoF,SACTE,EAAQ,OAAQsb,EAAQ,SAAU,MAGpCG,EAAe,EAGbF,GACF7e,EAAM,OAAQ6e,EAAOD,EAAOze,MAAO,4BAGjC2e,GACF9e,EAAM,OAAQ8e,EAAaF,EAAOze,MAAO,6BAGvC8e,GAAWJ,GAAUC,GACvB3R,GAAoB7M,EAAS2e,EAAQL,GAGvC7U,EAAQ6U,EAAOze,OAOf0K,EAAWvK,EAASye,GACpBhV,EAAQ,IAAKxK,GAEQ,OAAjBqf,EAAOze,OAAkBnC,EAAM+C,OAAOgd,QACxC/f,EAAMggB,oBAAqB,OAECtb,IAAxB1E,EAAMigB,gBACRjgB,EAAMigB,cAAgB,IAKxBjgB,EAAMigB,cAAcrX,KAAK,CACvBpH,KAAM,YAIVxB,EAAMmK,MAAM,eAAiB,EAC7BnK,EAAMmK,MAAM,cAAgB,EAC5BT,EAAImF,GAAMvM,GAAS,GAAM,GAEJ,OAAjBse,EAAOze,OAAkBnC,EAAM+C,OAAOgd,MAAO,CAC/C,GAAI/f,EAAMigB,eAAiBjgB,EAAMigB,cAAc/Y,OAAS,EAAG,CACzD,IAAImF,EAAQrM,EAAMigB,cAAcvS,OAGhChE,GAAKA,EAAExC,OAAS,IAAsB,iBAATwC,EAAE,IAAkC,OAAfA,EAAE,GAAGvH,QACxC,eAAfkK,EAAM7K,MAAyBkI,EAAExC,OAAS,GAC3B,eAAfmF,EAAM7K,OACJ8D,EAAQ,OAAQ0J,MAKpBhP,EAAMggB,oBAAqB,EAG7BhgB,EAAMmK,MAAM,eAAiB,EAC7BnK,EAAMmK,MAAM,cAAgB,MACvB,CA+BL,GA9BIiX,GACFpf,EAAM,OAAQof,GAGhBrV,EAAQ,KAEJmV,GAAQA,EAAK1T,OAAS0T,EAAK1T,MAAM,KAChB,UAAf0T,EAAK/e,OAAsB+e,EAAK1D,gBAClClY,EAAQ,OAAQ4b,EAAMA,EAAK1T,MAAM,GAAGrL,OAGtC+e,EAAK1T,MAAMtJ,SAAQ,SAAU3B,GAC3BvC,EAAMmK,MAAM,WAAW6M,WAAWzU,EAAMJ,WAM5CnC,EAAMmK,MAAM,cAAgB,EAEC,MAAzBnK,EAAMiF,OAAOC,KAAKhC,IACpByY,GAAoB9O,EAAWvK,EAAS,IAG1CyJ,EAAQ,KAEqB,MAAzB/L,EAAMiF,OAAOC,KAAKhC,IACpBlB,EAAM,OAAQhC,EAAMiF,OAAOC,KAAM,IAAK,KAGX,MAAzBlF,EAAMiF,OAAOC,KAAKhC,GACpB,KACE2J,EAAWvK,EAAS,GAES,MAAzBtC,EAAMiF,OAAOC,KAAKhC,IAItB6I,EAAQ,KACRkC,IAIJlC,EAAQ,IAAKxK,GACbvB,EAAMmK,MAAM,eAAiB,EAC7B0E,GAAMvM,GAAS,GAAM,GACrBtC,EAAMmK,MAAM,eAAiB,EAC7BnK,EAAMmK,MAAM,cAAgB,EAQ9B,OAJIgX,GACFnhB,EAAMmK,MAAM,WAAW8I,UAGlBjE,QACNgE,UAAW,EACdtE,EAAK,SAAS,WACZ,IAAIqG,EAAI/U,EAAMiF,OAAOC,KAAK/C,MAc1B,OAZInC,EAAMiF,OAAOC,KAAK9C,YAAcwK,EAAS5M,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOC,OACtElF,EAAMmK,MAAM,WAAWA,MAAMoX,SAASxM,IACzCzP,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM6P,GAGrC/F,KAAKxB,MAAQxN,EAAMiF,OAAOC,KAC1B6G,KAEkC,IAA9B/L,EAAMmK,MAAM,eAAqB7E,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM8J,KAAK7M,OAG/E8P,GAAUjD,MACHA,QACNsC,MAAO,EACV5C,EAAK,YAAY,WACf,IAAIqG,EAAI/U,EAAMiF,OAAOC,KAAK/C,MAkB1B,OAhBkC,IAA9BnC,EAAMmK,MAAM,eAAwBnK,EAAMmK,MAAM,cAClD7E,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM8J,KAAK7M,OAGtCnC,EAAMiF,OAAOC,KAAK9C,YAChBwK,EAAS5M,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOC,QACtClF,EAAMmK,MAAM,WAAWA,MAAMoX,SAASxM,IACzCzP,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM6P,GAGrC/F,KAAKxB,MAAQxN,EAAMiF,OAAOC,KAC1B6G,KAIJkG,GAAUjD,MACHA,QACNsC,MAAO,EACV5C,EAAK,UAAU,SAAUpM,GAoBvB,OAnBIsK,EAASoC,KAAMhP,EAAMiF,OAAOC,MACD,MAAzBlF,EAAMiF,OAAOC,KAAKhC,IAAelD,EAAMiF,OAAOC,KAAKkN,QACrDpD,KAAKxB,MAAQX,EAAWvK,EAAS,IAE7B0M,KAAKxB,OAA6B,iBAApBwB,KAAKxB,MAAMhM,MAAgD,MAArBwN,KAAKxB,MAAMrL,OAAkB6M,KAAKxB,MAAMoI,OAAU5V,EAAM+C,OAAO6Y,MACrHtW,EAAQ,OAAQ0J,KAAKxB,OAGnBxN,EAAM+C,OAAO2R,eAAiBpS,EAAUlC,EAAW+C,SAAWb,EAAUlC,EAAWqZ,YAAczK,KAAKxB,MAAMpL,YAAmC,UAArB4M,KAAKxB,MAAMrL,OACvImD,EAAQ,OAAQ0J,KAAKxB,QAIM,iBAA3BxN,EAAMiF,OAAOC,KAAK1D,MAA2B,CAAC,IAAK,IAAK,IAAK,KAAKK,QAAQ7B,EAAMiF,OAAOC,KAAK/C,QAAU,GACxG6L,EAAYgB,MAIhBiD,GAAUjD,MACHA,QACNsC,MAAO,EACVvC,EAAO,SAAS,SAAUzM,GACxB,OAAIA,EAAUlC,EAAW+C,OAIlBnD,EAAMmK,MAAM,aACfnI,EAAM,OAAQgN,KAAM,SAGtBnC,EAAWvK,EAAS,IACb0M,OAEPA,KAAKsC,MAAO,EACLtR,EAAMwO,OAAO,gBAAgBlB,IAAIkC,MAAMR,KAAMxC,eAErD8E,MAAO,EAEC8N,GAgDRrQ,EAAO,SAAS,SAAUzM,EAASqK,GACpC,OAAIqC,KAAKwS,OAAOlf,IACTtC,EAAMqF,SACTC,EAAQ,OAAQ0J,KAAM,kBAAmB,KAG3C1M,GAAWlC,EAAWqX,SACtBzI,KAAKK,KAAOxC,EAAWvK,EAASqK,GAChCqC,KAAK5M,YAAa,EACX4M,OAGTA,KAAKsC,MAAO,EACLtR,EAAMwO,OAAO,gBAAgBlB,IAAIkC,MAAMR,KAAMxC,eA5DpD4S,GAAY3c,KAAO,CACjBG,KAAK,EACLF,sBAAsB,EACtBI,YAAY,GAGdsc,GAAYoC,OAAS,WACnB,IAAItc,EAAOlF,EAAMiF,OAAOC,KAGxB,OAAI8J,KAAKhI,OAAS9B,EAAK8B,OAIP,aAAZ9B,EAAKhC,KAIO,MAAZgC,EAAKhC,GAEmB,OADZmV,GAAkB,GACbnV,KAGjBgC,EAAK9C,YACc,OAAdsJ,IAAOxI,MAMlBkc,GAAY/R,OAAS+R,GAAYoC,OAEjCpC,GAAYhS,IAAM,SAAU9K,GAU1B,OATKtC,EAAMqF,SACTC,EAAQ,OAAQ0J,KAAM,kBAAmB,KAG3C1M,GAAWlC,EAAWqX,SACtBnV,GAAWlC,EAAW6M,QACtB+B,KAAKK,KAAOxC,EAAWvK,EAAS,GAChC0M,KAAKH,MAAQG,KAAKK,KAAKR,MACvBG,KAAKsC,KAAOtC,KAAKK,KAAKiC,KACftC,MAGToQ,GAAY9N,MAAO,SACZ8N,GAAY5c,SAiBV6c,GAGRtQ,EAAO,SAAS,SAAUzM,GAC3B,GAAItC,EAAMyU,QACR,OAAOgN,GAAShM,KAAKzG,KAAM1M,GAG7B,KAAMA,EAAUlC,EAAWiD,OAEzB,OADA2L,KAAKsC,MAAO,EACLtR,EAAMwO,OAAO,gBAAgBlB,IAAIkC,MAAMR,KAAMxC,WAGtD,IAAIL,EAAOnM,EAAMiF,OAAOkH,KAsCxB,OAlCKnM,EAAMmK,MAAM,aACfnI,EAAM,OAAQgN,KAAM,UAGjBA,KAAK7B,YAAchB,EAAKoB,IAAM,KAAOkN,GAAiBtO,EAAM,CAAC,OAChEnK,EAAM,OAAQgN,MAGXhP,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,QAAS,KAG9CzI,EAAMmK,MAAM,cAAe,EAEK,MAA5BnK,EAAMiF,OAAOC,KAAK/C,OACpB4J,EAAQ,MAIsB,MAA5B/L,EAAMiF,OAAOwD,KAAKtG,OAAiByK,EAAS5M,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOC,SAC1ElF,EAAMiF,OAAOC,KAAKoI,KACpBO,EAAmB7N,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOC,MACnD8J,KAAKxB,MAAQX,EAAWvK,EAAS,IAET,iBAApB0M,KAAKxB,MAAMhM,MAAgD,MAArBwN,KAAKxB,MAAMrL,OAAkB6M,KAAKxB,MAAMoI,OAAU5V,EAAM+C,OAAO6Y,MACvGtW,EAAQ,OAAQ0J,KAAKxB,QAEdxN,EAAMiF,OAAOC,KAAKuI,KACE,MAAzBzN,EAAMiF,OAAOC,KAAKhC,IACpBlB,EAAM,OAAQhC,EAAMiF,OAAOC,OAK1B8J,QAlDPqQ,GAAY1S,IAAM0S,GAAY9R,IAAM,GACpC8R,GAAY/N,MAAO,EAyDrB,IAAImQ,GAAW,SAAkBnf,GAC/B,IAAI6J,EAAOnM,EAAMiF,OAAOkH,MAEpBnM,EAAMoF,OAAM,IAAW9C,EAAUlC,EAAWiD,OAC9CrB,EAAM,OAAQhC,EAAMiF,OAAOwD,KAAM,SAGnCzI,EAAMmK,MAAM,cAAe,EAC3B,IAAIuX,GAAkB,EAwBtB,MAtBgC,MAA5B1hB,EAAMiF,OAAOC,KAAK/C,QACpBuf,GAAkB,EAClB3V,EAAQ,MAGNa,EAASoC,KAAMhP,EAAMiF,OAAOC,QAC1Bwc,GAA4C,MAAzB1hB,EAAMiF,OAAOC,KAAKhC,KAAelD,EAAM+C,OAAO0P,MAAQzS,EAAMiF,OAAOC,KAAKkN,OAASpS,EAAMiF,OAAOC,KAAKoI,OACxHO,EAAmB7N,EAAMiF,OAAOwD,KAAMzI,EAAMiF,OAAOC,MACnD8J,KAAKxB,MAAQX,EAAWvK,EAAS,IAET,iBAApB0M,KAAKxB,MAAMhM,MAAgD,MAArBwN,KAAKxB,MAAMrL,OAAkB6M,KAAKxB,MAAMoI,OAAU5V,EAAM+C,OAAO6Y,MACvGtW,EAAQ,OAAQ0J,KAAKxB,QAII,MAAzBxN,EAAMiF,OAAOC,KAAKhC,KAAeiJ,EAAKoB,IAAM,KAAOpB,EAAKoF,SAAWhF,MACrEvK,EAAM,OAAQgN,OAENhP,EAAM+C,OAAO0P,KACvBzE,EAAYgB,MAGPA,MAGTN,EAAK,SAAS,SAAUpM,GAItB,OAHA0L,EAAYgB,MACZA,KAAKxB,MAAQX,EAAWvK,EAAS,IACjC2P,GAAUjD,MACHA,QACNsC,MAAO,EACVvC,EAAO,UAAU,SAAUzM,GACzB,IAAI6T,EAAKC,GAAa9T,EAAS,QAAQ,WAChCtC,EAAMgQ,QAAO,IAChB1K,EAAQ,OAAQtF,EAAMiF,OAAOkH,KAAM,cAAe,MAG/CnM,EAAM+C,OAAOK,QAChBpB,EAAM,OAAQhC,EAAMiF,OAAOkH,SAI/B,OAAIgK,IAICnE,GAAgBhS,EAAMiF,OAAOC,KAAM,MAInClF,EAAMgQ,UACT1K,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,iBAAkB,MAGvDsD,EAAQ,KACRc,EAAWvK,EAAS,IACpByJ,EAAQ,KACDiD,MAVEhP,EAAMwO,OAAO,gBAAgBlB,IAAImI,KAAKzG,KAAM1M,OAYvD,IAAIqf,GAAejT,EAAK,UAAU,SAAUpM,GAS1C,GARKtC,EAAMmK,MAAM,WAAW0E,MAAMsB,YAChCnO,EAAM,OAAQhC,EAAMiF,OAAOwD,KAAM,UAG9BzI,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,SAAU,KAGhB,aAA3BzI,EAAMiF,OAAOC,KAAK1D,KAGpB,OADAuK,EAAQ,YACDiD,KAGT,GAAIhP,EAAMiF,OAAOC,KAAK9C,WAAY,CAUhC,GARA4M,KAAK3N,KAAOe,GAAWE,GAEvBtC,EAAMmK,MAAM,WAAW2M,WAAW9H,KAAK3N,KAAM,CAC3CG,KAAM,SACNuV,aAAa,EACbxU,MAAOvC,EAAMiF,OAAOwD,OAGU,MAA5BzI,EAAMiF,OAAOC,KAAK/C,MAUpB,OAFA4J,EAAQ,QACRA,EAAQ,YACDiD,KAPPjD,EAAQ,KAWZ,GAA6B,MAAzB/L,EAAMiF,OAAOC,KAAKhC,GAEpB6I,EAAQ,KACRA,EAAQ,MAEJ/L,EAAMiF,OAAOC,KAAK9C,aACpB4M,KAAK3N,KAAOe,GAAWE,GAEvBtC,EAAMmK,MAAM,WAAW2M,WAAW9H,KAAK3N,KAAM,CAC3CG,KAAM,SACNuV,aAAa,EACbxU,MAAOvC,EAAMiF,OAAOwD,aAOxB,IAFAsD,EAAQ,OAEC,CACP,GAAgC,MAA5B/L,EAAMiF,OAAOC,KAAK/C,MAAe,CACnC4J,EAAQ,KACR,MAGF,IAAI6V,EAiBJ,GAfqB,OAAjBlW,IAAOvJ,OACTC,GAAWE,GAAS,GACpByJ,EAAQ,MACR6V,EAAaxf,GAAWE,IAExBsf,EAAaxf,GAAWE,GAI1BtC,EAAMmK,MAAM,WAAW2M,WAAW8K,EAAY,CAC5CpgB,KAAM,SACNuV,aAAa,EACbxU,MAAOvC,EAAMiF,OAAOwD,OAGU,MAA5BzI,EAAMiF,OAAOC,KAAK/C,MAEf,IAAgC,MAA5BnC,EAAMiF,OAAOC,KAAK/C,MAAe,CAC1C4J,EAAQ,KACR,MAEA/J,EAAM,OAAQhC,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,OACnD,MANA4J,EAAQ,KAqBd,OATAA,EAAQ,QACRA,EAAQ,YAQDiD,QA4MT,SAAS6S,GAAcrgB,EAAM2I,GAC3B,OAAa,SAAT3I,IAAmB2I,EAAM,gBAIhB,aAAT3I,IAAuB2I,EAAM,iBAIpB,SAAT3I,IAAmB2I,EAAM,gBAA8C,UAA5BA,EAAM,eAAejH,OAIhEiH,EAAM,YACD0X,GAAcrgB,EAAM2I,EAAM,gBAxNrCwX,GAAarQ,MAAO,EACpBqQ,GAAanf,UAAW,EACxBmf,GAAalf,KAAO,CAClBC,sBAAsB,EACtBE,KAAK,GAGP+e,GAAatU,OAAS,WACpB,OAAQoN,GAAiBza,EAAMiF,OAAOC,KAAM,CAAC,IAAK,OAGpDyc,GAAahV,IAAM,IACnB+B,EAAK,UAAU,SAAUpM,GACvB,IACIC,EACAuf,EAFAC,GAAK,EAeT,GAZAzf,GAAoBlC,EAAWuf,OAE1B3f,EAAMoF,UACTE,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,SAAU,KAC7CsZ,GAAK,GAGF/hB,EAAMmK,MAAM,WAAW0E,MAAMsB,aAChCnO,EAAM,OAAQhC,EAAMiF,OAAOwD,KAAM,UACjCsZ,GAAK,GAGyB,MAA5B/hB,EAAMiF,OAAOC,KAAK/C,MAiBpB,OAdA4J,EAAQ,KAEwB,OAA5B/L,EAAMiF,OAAOC,KAAK/C,QACfnC,EAAMgQ,UACT1K,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,sBAAuB,MAG5DsD,EAAQ,MACR3J,GAAWE,GAAS,GACpBtC,EAAMmK,MAAM,WAAW6X,YAAY,KAAMhiB,EAAMiF,OAAOwD,OAGxDsD,EAAQ,QACRA,EAAQ,YACDiD,KAGT,GAA+B,YAA3BhP,EAAMiF,OAAOC,KAAK1D,KAAoB,CAOxCxB,EAAMkN,UAAU+D,IAAIjR,EAAMiF,OAAOC,MACjC6G,EAAQ,WACR,IAAIkW,EAAMjiB,EAAMiF,OAAOwD,KACnByZ,EAAaliB,EAAMiF,OAAOC,KAAKhC,GAuBnC,MArBmB,aAAfgf,GACFlT,KAAKH,OAAQ,EACb9C,EAAQ,YACRxJ,EAAQvC,EAAMwO,OAAiB,SAAEpB,IAAI9K,GACrCtC,EAAMmK,MAAM,WAAW6X,YAAYzf,EAAMlB,KAAM4gB,IACvB,UAAfC,GAAwC,aAAdxW,IAAOxI,IAC1C8L,KAAKH,OAAQ,EACb9C,EAAQ,SACRA,EAAQ,YACRxJ,EAAQvC,EAAMwO,OAAiB,SAAEpB,IAAI9K,EAAUlC,EAAWqX,UAC1DzX,EAAMmK,MAAM,WAAW6X,YAAYzf,EAAMlB,KAAM4gB,IACvB,UAAfC,GACTlT,KAAKH,OAAQ,EACb9C,EAAQ,SACRxJ,EAAQvC,EAAMwO,OAAc,MAAEpB,IAAI9K,GAClCtC,EAAMmK,MAAM,WAAW6X,YAAYzf,EAAMlB,KAAM4gB,KAE/CpV,EAAWvK,EAAS,IACpBtC,EAAMmK,MAAM,WAAW6X,YAAY,KAAMC,IAGpCjT,KAGT,GAAgC,MAA5BhP,EAAMiF,OAAOC,KAAK/C,MAAe,CAEnC4J,EAAQ,KAGR,IAFA,IAAIoW,EAAiB,IAEbnQ,GAAgBhS,EAAMiF,OAAOC,KAAM,MACpClF,EAAMiF,OAAOC,KAAK9C,YAErBJ,EAAM,OAAQhC,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,OAGrD4J,IAEgC,OAA5B/L,EAAMiF,OAAOC,KAAK/C,OACpB4J,EAAQ,MAEH/L,EAAMiF,OAAOC,KAAK9C,YAErBJ,EAAM,OAAQhC,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,OAGrDggB,EAAevZ,KAAK,CAClBwZ,MAAOpiB,EAAMiF,OAAOkH,KACpBwT,OAAQ3f,EAAMiF,OAAOC,OAEvB6G,KAEAoW,EAAevZ,KAAK,CAClBwZ,MAAOpiB,EAAMiF,OAAOwD,KACpBkX,OAAQ3f,EAAMiF,OAAOwD,OAIpBuJ,GAAgBhS,EAAMiF,OAAOC,KAAM,MACtC6G,EAAQ,KAyBZ,OArBAA,EAAQ,KAEwB,SAA5B/L,EAAMiF,OAAOC,KAAK/C,OAEpB4J,EAAQ,QACR+V,EAAkB9hB,EAAMiF,OAAOC,KAC/B6G,EAAQ,aACCgW,GACTI,EAAeje,SAAQ,SAAUqK,GAC/BvO,EAAMmK,MAAM,WAAW6X,YAAYzT,EAAE6T,MAAO7T,EAAEoR,WAIpB,IAA1BwC,EAAejb,SACb4a,EACFxc,EAAQ,OAAQ0J,KAAM,SAAU8S,EAAgB3f,OAEhDmD,EAAQ,OAAQ0J,KAAM,WAInBA,KA8CT,MA7CoC,QAAzBhP,EAAMiF,OAAOC,KAAKhC,IAE3B6I,EAAQ,QACRxJ,EAAQvC,EAAMiF,OAAOwD,KAAK2E,IAAI9K,IACxBkL,MAAMtJ,SAAQ,SAAUme,GAC5BriB,EAAMmK,MAAM,WAAW6X,YAAYK,EAASA,OAEZ,QAAzBriB,EAAMiF,OAAOC,KAAKhC,IAE3B6I,EAAQ,QACRxJ,EAAQvC,EAAMiF,OAAOwD,KAAK2E,IAAI9K,IACxBkL,MAAMtJ,SAAQ,SAAUme,GAC5BriB,EAAMmK,MAAM,WAAW6X,YAAYK,EAASA,OAEZ,UAAzBriB,EAAMiF,OAAOC,KAAKhC,IAE3B6I,EAAQ,UACRxJ,EAAQvC,EAAMiF,OAAOwD,KAAK2E,IAAI9K,IACxBkL,MAAMtJ,SAAQ,SAAUme,GAC5BriB,EAAMmK,MAAM,WAAW6X,YAAYK,EAASA,OAEZ,aAAzBriB,EAAMiF,OAAOC,KAAKhC,IAE3B8L,KAAKH,OAAQ,EACb9C,EAAQ,YACRxJ,EAAQvC,EAAMwO,OAAiB,SAAEpB,IAAI9K,GACrCtC,EAAMmK,MAAM,WAAW6X,YAAYzf,EAAMlB,KAAMkB,EAAMlB,OACnB,UAAzBrB,EAAMiF,OAAOC,KAAKhC,IAAgC,aAAdwI,IAAOxI,IAEpD8L,KAAKH,OAAQ,EACb9C,EAAQ,SACRA,EAAQ,YACRxJ,EAAQvC,EAAMwO,OAAiB,SAAEpB,IAAI9K,EAAUlC,EAAWqX,UAC1DzX,EAAMmK,MAAM,WAAW6X,YAAYzf,EAAMlB,KAAMkB,EAAMlB,OACnB,UAAzBrB,EAAMiF,OAAOC,KAAKhC,IAE3B8L,KAAKH,OAAQ,EACb9C,EAAQ,SACRxJ,EAAQvC,EAAMwO,OAAc,MAAEpB,IAAI9K,GAClCtC,EAAMmK,MAAM,WAAW6X,YAAYzf,EAAMlB,KAAMkB,EAAMlB,OAGrDW,EAAM,OAAQhC,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,OAG9C6M,QACNsC,MAAO,EAgCV,IAAIkE,GAAW,WACb,IAAItQ,EAAOlF,EAAMiF,OAAOC,KAcxB,OAZIuV,GAAiBvV,EAAM,CAAC,IAAK,MAC1B2c,GAAc,WAAY7hB,EAAMmK,QACnCnI,EAAM,OAAQgN,MAEPgD,GAAgB9M,EAAM,KAC1B2c,GAAc,OAAQ7hB,EAAMmK,QAC/BnI,EAAM,OAAQgN,MAGhBhN,EAAM,OAAQkD,EAAMA,EAAK/C,OAAS+C,EAAKhC,IAGlC8L,MAITM,GAAmB,YACnBA,GAAmB,WACnBA,GAAmB,QACnBA,GAAmB,QACnBA,GAAmB,UACnBA,GAAmB,OAAQ,CACzB1M,KAAK,IAEP0M,GAAmB,SAAU,CAC3B1M,KAAK,IAEP0M,GAAmB,UAAW,CAC5B1M,KAAK,IAEP0M,GAAmB,SACnBA,GAAmB,SACnBA,GAAmB,QACnBA,GAAmB,aAAc,CAC/B1M,KAAK,EACLE,YAAY,IAEdwM,GAAmB,OACnBA,GAAmB,YAAa,CAC9B1M,KAAK,EACLE,YAAY,IAEdwM,GAAmB,QACnBA,GAAmB,UACnBA,GAAmB,UAAW,CAC5B1M,KAAK,EACLE,YAAY,IAEdwM,GAAmB,UAAW,CAC5B1M,KAAK,EACLE,YAAY,IAEdwM,GAAmB,YAAa,CAC9B1M,KAAK,EACLE,YAAY,IAEdwM,GAAmB,SAAU,CAC3B1M,KAAK,EACLE,YAAY,IAEdwM,GAAmB,SACnBA,GAAmB,SAAU,CAC3B1M,KAAK,EACLE,YAAY,IAEdwM,GAAmB,gBACnBA,GAAmB,aACnBA,GAAmB,YAGnB,IAAIgP,GAAkB,WACpB,IAAI9F,EAAID,EAAKpM,EACTP,GAAK,EACL0W,EAAe,EACfzE,EAAM,GAENpD,GAAiBza,EAAMiF,OAAOwD,KAAM,CAAC,IAAK,QAC5C6Z,GAAgB,GAGlB,EAAG,CAYD,GAXAnW,GAAc,IAAPP,EAAW5L,EAAMiF,OAAOwD,KAAO+P,EACtCA,GAAY,IAAP5M,EAAW5L,EAAMiF,OAAOC,KAAOwG,EAAKE,GACzC2M,EAAM7M,EAAKE,EAAI,GACfA,GAAQ,EAEJ6O,GAAiBjC,EAAI,CAAC,IAAK,MAC7B8J,GAAgB,EACP7H,GAAiBjC,EAAI,CAAC,IAAK,QACpC8J,GAAgB,GAGG,IAAjBA,GAAsB9J,EAAGpW,YAA2B,QAAboW,EAAGrW,QAAoB6P,GAAgB7F,EAAM,KAAM,CAC5F0R,EAAIU,aAAc,EAClBV,EAAI0E,SAAU,EACd,MAGF,GAAqB,IAAjBD,GAAsB7H,GAAiBjC,EAAI,CAAC,IAAK,MAAO,CAC1D,GAAkB,MAAdD,EAAIpW,MAAe,CACrB0b,EAAIe,cAAe,EACnBf,EAAI0E,SAAU,EACd,MACK,GAAkB,MAAdhK,EAAIpW,MAAe,CAC5B0b,EAAI0E,SAAU,EACd,OAIAvQ,GAAgBwG,EAAI,OACtBqF,EAAI0E,SAAU,SAETD,EAAe,GAAe,UAAV9J,EAAGtV,IAEhC,OAAO2a,GAkBT,SAASlG,GAAaJ,EAAOlW,EAAMa,EAAKsgB,EAASpL,EAAUqL,GACrDvgB,EAAIE,aACNf,EAAOa,EAAIC,OAGb,IAAIyH,EAAMvI,EAMV,GAJImhB,GAAWpL,IACbxN,EAAM,UAAYvI,GAGhBkW,EAAM3N,IAAiB,cAATvI,IAAyBohB,EAAY,CACrD,IAAIna,EAAM,CAAC,MAAO,eAAgB,uBAClCA,EAAMA,GAAKka,IAAW,IAAUpL,IAAY,IAC5C9R,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAMoD,EAAKjH,QAExCkW,EAAM3N,GAAO5F,OAAOwT,OAAO,MAG7BD,EAAM3N,GAAK8Y,OAAQ,EACnBnL,EAAM3N,GAAK+Y,SAAWzgB,EAiBxB,SAAS8V,GAAab,EAAcI,EAAOlW,EAAMa,EAAKsgB,EAASpL,GAC7D,IAAIwL,EAA4B,QAAjBzL,EAAyB,cAAgB,cACpDvN,EAAMvI,EAQV,GAPArB,EAAMiF,OAAOwD,KAAK0O,aAAeA,EACjCnX,EAAMkN,UAAU+D,IAAI/O,GAEhBsgB,GAAWpL,IACbxN,EAAM,UAAYvI,GAGhBkW,EAAM3N,IACR,IAAK2N,EAAM3N,GAAK8Y,OAASnL,EAAM3N,GAAKgZ,KAAuB,cAATvhB,EAAsB,CACtE,IAAIiH,EAAM,GAENka,GACEpL,IACF9O,GAAO,WAGTA,GAAO6O,EAAe,cAEtB7O,EAAM,MAGRhD,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAMoD,EAAKjH,SAG1CkW,EAAM3N,GAAO5F,OAAOwT,OAAO,MAG7BD,EAAM3N,GAAKgZ,GAAY1gB,EAEnBkV,IACFG,EAAM3N,GAAKmS,QAAS,GAkBxB,SAAShE,GAAqBzV,GAC5ByJ,EAAQ,KAGR/L,EAAMiF,OAAOwD,KAAKgG,OAAQ,EAC1BzO,EAAMiF,OAAOwD,KAAK8E,IAAM,EAEnBvN,EAAMoF,SACTE,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,0BAA2B,KAGhE,IAAItG,EAAQ0K,EAAWvK,GAAWlC,EAAWqM,KAAM,IAEnD,OADAV,EAAQ,KACD5J,EAeT,SAASsY,GAAiBlY,EAAOqN,GAC/B,MAAmB,iBAAfrN,EAAMf,MACD9B,EAAEuQ,SAASL,EAAQrN,EAAMJ,OAkBpC,SAAS6P,GAAgBzP,EAAOJ,GAC9B,MAAsB,iBAAfI,EAAMf,MAA2Be,EAAMJ,QAAUA,EAI1D,SAAS0gB,GAA+BvgB,GAItC,IAAIuM,EAAQyP,KAERzP,EAAM0T,UACHviB,EAAMoF,SAAWyJ,EAAM+P,cAE1BtZ,EAAQ,OAAQtF,EAAMiF,OAAOwD,KAAM,2BAA4B,KAGjE4K,GAAW/Q,KAEXtC,EAAM+C,OAAOgL,UAAW,EACxB/N,EAAM8iB,UAAW,EACjBC,MAgBJ,IAAIC,GAAqB,WACvB,IAOIC,EAPAC,EAAY,WACdlU,KAAKmU,KAAO,MACZnU,KAAKoU,UAAY,IAGfC,EAAW,GAgBf,SAASpO,EAAIF,GAaX,OAAa,IAZLkO,EAASG,UAAUE,QAAO,SAAUC,GAE1C,GAAIA,EAAIphB,QAAU4S,IAAMwO,EAAI7P,MAK1B,OAJmB,IAAf6P,EAAIjY,SACNiY,EAAIjY,QAAS,GAGRyJ,KAER7N,OAML,MAAO,CACL4L,MAAO,WACLmQ,EAAW,IAAIC,EAEfG,EAASza,KAAKqa,IAEhBhQ,QAAS,WACPgQ,EAASG,UAAUE,QAAO,SAAUvO,GAC9BA,EAAEzJ,QAAQhG,EAAQ,OAAQyP,EAAExS,MAAOwS,EAAExS,MAAMihB,UAAYzO,EAAE5S,OACzD4S,EAAErB,OAAO1T,EAAMmK,MAAM,WAAW0E,MAAMoG,IAAIF,EAAE5S,MAAO4S,EAAExS,UAG3D8gB,EAASI,QAAQ,EAAG,GAEpBR,EAAWI,EAASA,EAASnc,OAAS,IAExCwX,SAAU,SAAkBhV,GACtBhK,EAAEuQ,SAAS,CAAC,MAAO,SAAU,WAAY,UAAWvG,KAAIuZ,EAASE,KAAOzZ,IAE9E2C,MAAO,SAAe0I,GACpB,GAAKkO,EAKL,OAAIA,GAA8B,QAAlBA,EAASE,MACnBlO,EAAIF,IACNkO,EAASG,UAAUxa,KAAK,CACtBrG,MAAOvC,EAAMiF,OAAOwD,KACpBtG,MAAO4S,EACPrB,OAAO,EACPpI,QAAQ,KAIL,GACE2X,GAA8B,WAAlBA,EAASE,MAhEpC,SAAiBpO,GASf,OAAa,IARLkO,EAASG,UAAUE,QAAO,SAAUC,GAE1C,GAAIA,EAAIphB,QAAU4S,EAEhB,OADAwO,EAAI7P,OAAQ,EACLqB,KAER7N,OA2DMwc,CAAQ3O,IACXkO,EAASG,UAAUxa,KAAK,CACtBrG,MAAOvC,EAAMiF,OAAOwD,KACpBtG,MAAO4S,EACPrB,OAAO,EACPpI,QAAQ,KAIL,GACE2X,GAA8B,aAAlBA,EAASE,MAC9BnjB,EAAMmK,MAAM,WAAW0E,MAAMoG,IAAIF,EAAG/U,EAAMiF,OAAOwD,OAC1C,MACEwa,GAA8B,WAAlBA,EAASE,QAE1BlO,EAAIF,IAIN/U,EAAMmK,MAAM,WAAW0E,MAAMoG,IAAIF,EAAG/U,EAAMiF,OAAOwD,OAG5C,MAgBf,SAASsa,KAsEP,OAAQ/iB,EAAMiF,OAAOC,KAAKhC,IACxB,IAAK,KAtEP,WACE,IAAIygB,EAAI,GACJpiB,EAAIvB,EAAMiF,OAAOC,KAGrB,GAFA6G,EAAQ,KAEqB,MAAzB/L,EAAMiF,OAAOC,KAAKhC,GACpB,OAAS,CACP,GAA6B,UAAzBlD,EAAMiF,OAAOC,KAAKhC,GACpBlB,EAAM,OAAQhC,EAAMiF,OAAOC,KAAM3D,EAAEyF,UAC9B,IAA6B,MAAzBhH,EAAMiF,OAAOC,KAAKhC,GAAY,CACvCoC,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAC7B,MACkC,MAAzBzI,EAAMiF,OAAOC,KAAKhC,GAC3BlB,EAAM,OAAQhC,EAAMiF,OAAOC,MACO,aAAzBlF,EAAMiF,OAAOC,KAAKhC,IAC3BoC,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,OAevD,IAZmC,IAA/BwhB,EAAE3jB,EAAMiF,OAAOC,KAAK/C,OACtBmD,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAM,MAAOlF,EAAMiF,OAAOC,KAAK/C,OACvB,cAA5BnC,EAAMiF,OAAOC,KAAK/C,QAA0BnC,EAAM+C,OAAO6gB,OAAqC,iBAA5B5jB,EAAMiF,OAAOC,KAAK/C,QAA6BnC,EAAM+C,OAAO8gB,SACvIve,EAAQ,OAAQtF,EAAMiF,OAAOC,KAAMlF,EAAMiF,OAAOC,KAAK/C,OAErDwhB,EAAE3jB,EAAMiF,OAAOC,KAAK/C,QAAS,EAG/B4J,IACAA,EAAQ,KACRgX,KAE6B,MAAzB/iB,EAAMiF,OAAOC,KAAKhC,GACpB,MAGF6I,EAAQ,KAIZA,EAAQ,KAiCN+X,GACA,MAEF,IAAK,KAjCP,WACE,IAAIviB,EAAIvB,EAAMiF,OAAOC,KAGrB,GAFA6G,EAAQ,KAEqB,MAAzB/L,EAAMiF,OAAOC,KAAKhC,GACpB,OAAS,CACP,GAA6B,UAAzBlD,EAAMiF,OAAOC,KAAKhC,GACpBlB,EAAM,OAAQhC,EAAMiF,OAAOC,KAAM3D,EAAEyF,UAC9B,IAA6B,MAAzBhH,EAAMiF,OAAOC,KAAKhC,GAAY,CACvCoC,EAAQ,OAAQtF,EAAMiF,OAAOwD,MAC7B,MACkC,MAAzBzI,EAAMiF,OAAOC,KAAKhC,IAC3BlB,EAAM,OAAQhC,EAAMiF,OAAOC,MAK7B,GAFA6d,KAE6B,MAAzB/iB,EAAMiF,OAAOC,KAAKhC,GACpB,MAGF6I,EAAQ,KAIZA,EAAQ,KASNgY,GACA,MAEF,IAAK,OACL,IAAK,QACL,IAAK,OACL,IAAK,WACL,IAAK,WACHhY,IACA,MAEF,IAAK,IACHA,EAAQ,KACRA,EAAQ,YACR,MAEF,QACE/J,EAAM,OAAQhC,EAAMiF,OAAOC,OAcjC,SAAS8e,GAAa7a,EAAWjJ,EAAS+jB,GACxC,IAAIC,EAAiBpa,EAAKqa,EAAKC,EAE/B,IAAKta,EAAM,EAAGA,EAAMX,EAAUjC,OAAQ4C,GAAO,EAM3C,IALAsa,EAAWjb,EAAUW,GACrB5J,EAAQyI,MAAQyb,EAASlb,KACzBgb,EAAkB7jB,EAAO+G,OAAOF,OAChCmd,GAAOD,EAASxd,KAAM1G,EAAS+jB,GAE1BE,EAAMD,EAAiBC,EAAM9jB,EAAO+G,OAAOF,OAAQid,GAAO,EAC7D9jB,EAAO+G,OAAO+c,GAAKnd,MAAQod,EAAS7hB,MAAMyE,KAAO,EAKvD,IAAIsd,GAAc,SAAqB/gB,GACrC,OAAOA,EAAIE,QAAQ,yBAA0B,SAI3C4gB,GAAS,SAAgB3a,EAAGia,EAAGpD,GACjC,IAAIhS,EAAGgW,EAAaC,EAChBC,EAAYC,EAAcC,EAC9BhB,EAAIjkB,EAAEklB,MAAMjB,GACZ3jB,EAAM6kB,QACNH,EAAe1kB,EAAM+C,OACrB4hB,EAAgB3kB,EAAM4H,QAElB+b,GAAKA,EAAEhb,MACTtI,EAAOsI,MAAQgb,EAAEhb,OAEjBtI,EAAO+G,OAAS,GAChB/G,EAAO8I,UAAY,GACnB9I,EAAO8D,UAAY,GACnB9D,EAAOsI,MAAQ,UAIjB9E,EADA9C,EAAaiD,OAAOwT,OAAO,MACP5X,EAAKuF,gBAAgB,IACzCtB,EAAQ9C,EAAYnB,EAAKklB,cACzBvkB,EAAWyD,OAAOwT,OAAO,MACzB,IAAIuN,EAAW/gB,OAAOwT,OAAO,MAE7B,SAAS4I,EAAKzP,EAAKqU,GACZrU,IACAoM,MAAMhQ,QAAQ4D,IAAuB,iBAARA,IAAkBA,EAAM3M,OAAOC,KAAK0M,IACtEA,EAAIzM,QAAQ8gB,IAGd,GAAIrB,EAuBF,IAtBAvD,EAAK,CAACuD,EAAEha,OAAQga,EAAEM,UAAU,SAAUgB,GACpC7E,EAAK6E,GAAM,SAAUpb,GACnB,IAAII,EAAOib,EAEK,MAAZrb,EAAK,IACPI,EAAQJ,EAAKI,MAAM,GACnB5J,EAAO8D,UAAU8F,GAASA,SAEnBlJ,EAAWkJ,KAElBib,EAAOlhB,OAAOmhB,yBAAyBF,EAAMpb,GAC7C9I,EAAW8I,KAAQqb,GAAOA,EAAK/iB,aAIrCie,EAAKuD,EAAEoB,UAAY,MAAM,SAAUlb,GACjCkb,EAASlb,IAAQ,YAEZ8Z,EAAEha,cACFga,EAAEoB,SACTN,EAAazgB,OAAOC,KAAK0f,GAEpBpV,EAAI,EAAGA,EAAIkW,EAAWvd,OAAQqH,IACjC,GAAI,aAAa3M,KAAK6iB,EAAWlW,IAC/BoW,EAAcF,EAAWlW,GAAGtE,MAAM,KAAM,MACnC,CACL,IAAImb,EAAYX,EAAWlW,GAC3BmW,EAAaU,GAAazB,EAAEyB,GAKlCplB,EAAM+C,OAAS2hB,EACf1kB,EAAM4H,QAAU+c,EAChB3kB,EAAM+C,OAAOrC,OAASV,EAAM+C,OAAOrC,QAAU,EAC7CV,EAAM+C,OAAO8F,OAAS7I,EAAM+C,OAAO8F,QAAU,GAC7CnI,EAAS,EACT,IA32MgBiQ,EAs8MZtP,EA3FAgkB,EAAmBllB,EAAaH,EAAOe,EAAYgkB,EAAUxkB,GAoBjE,GAnBA8kB,EAAiBC,GAAG,WAAW,SAAUC,GACvCjgB,EAAQkK,MAAM,KAAM,CAAC+V,EAAG3e,KAAM2e,EAAGhjB,OAAOuS,OAAOyQ,EAAG/hB,UAEpD6hB,EAAiBC,GAAG,SAAS,SAAUC,GAErCvjB,EAAMwN,MAAM,KAAM,CAAC+V,EAAG3e,KAAM2e,EAAGhjB,OAAOuS,OAAOyQ,EAAG/hB,UAElDxD,EAAMmK,MAAQuO,GAAQ,WAAY,KAAM,CACtC,YAAY,EACZ,UAAW2M,EACX,cAAerC,KACf,YAAapK,GAAc5Y,EAAMiF,OAAOC,QAE1C1E,EAAY,CAACR,EAAMmK,OACnBtJ,EAAS,GACTC,EAAc,KACdL,GAAU,EACVE,EAAY,GA73MIgQ,EA+3MFjH,EA93MiC,oBAAxC1F,OAAOyM,UAAUgI,SAAShD,KAAK9E,KA83MjBoM,MAAMhQ,QAAQrD,GAEjC,OADAV,EAAQ,OAAQ,IACT,EAuET,IAAK3H,KApELf,EAAM,CACAklB,aAEF,OAAOxlB,EAAM8iB,UAGf2C,UAAW,SAAmBpkB,GAC5B,OAAOrB,EAAM+C,OAAO1B,IAAS,MAE/BqkB,SAAU,SAAkBrkB,GAC1B,OAAOrB,EAAM2lB,MAAMtkB,IAErBukB,SAAU,SAAkBvkB,EAAMc,GAChCnC,EAAM2lB,MAAMtkB,GAAQc,GAEtB0jB,KAAM,SAAcjf,EAAMpD,GACxBsF,EAAU0G,MAAM,KAAM,CAAC5I,EAAMpD,EAAKwD,KAAMxD,EAAKsiB,MAAMhR,OAAOtR,EAAKA,QAEjE8hB,GAAI,SAAYhI,EAAOyI,GACrBzI,EAAM9T,MAAM,KAAKtF,QAAQ,SAAU7C,GACjCH,EAAQokB,GAAGjkB,EAAM0kB,IACjBC,KAAKhX,SAGX9N,EAAQ+kB,sBACPhlB,GAAgB,IAAIiD,SAAQ,SAAUmL,GACrCA,EAAK/O,MAEPN,EAAMiF,OAAOkH,KAAOnM,EAAMiF,OAAOwD,KAAOzI,EAAMiF,OAAOC,KAAOlF,EAAMwO,OAAO,WAErEmV,GAAKA,EAAEuC,mBACJnJ,MAAMhQ,QAAQ4W,EAAEuC,oBAEnBvC,EAAEuC,iBAAmB,CAACvC,EAAEuC,mBAG1BvC,EAAEuC,iBAAiBhiB,SAAQ,SAAUiiB,GAC9BA,EAAcC,OAAUD,EAAcnN,MAC3CuL,EAAcD,GAAY6B,EAAcC,OAAS,aAAe9B,GAAY6B,EAAcnN,KAC1FwL,EAAW,IAAI6B,OAAO9B,EAAa,MACnC7a,EAAIA,EAAEjG,QAAQ+gB,GAAU,SAAU1Z,GAChC,OAAOA,EAAMrH,QAAQ,KAAM,cAKjC7C,EAAM,IAAId,EAAM4J,IACZ4b,GAAG,WAAW,SAAUC,GAC1Bzc,EAAU0G,MAAM,KAAM,CAAC+V,EAAG3e,KAAM2e,EAAGve,KAAMue,EAAGhe,WAAWuN,OAAOyQ,EAAG/hB,UAEnE5C,EAAI0kB,GAAG,SAAS,SAAUC,GACxBvc,EAAQwG,MAAM,KAAM,CAAC+V,EAAG3e,KAAM2e,EAAGve,KAAMue,EAAGhe,WAAWuN,OAAOyQ,EAAG/hB,UAEjE5C,EAAI0kB,GAAG,SAAS,SAAUC,GACxBvgB,EAAK,OAAQugB,MAEf3kB,EAAI0kB,GAAG,cAAc,SAAUC,GAC7BrkB,EAAQolB,KAAK,aAAcf,MAE7B3kB,EAAI0kB,GAAG,UAAU,SAAUC,GACzBrkB,EAAQolB,KAAK,SAAUf,MAEzB3kB,EAAI0kB,GAAG,UAAU,SAAUC,GACzBrkB,EAAQolB,KAAK,SAAUf,MAKZ5B,EACPjkB,EAAEoC,IAAI6hB,EAAGtiB,IACXD,EAAYC,GAAM,EAAMrB,EAAMiF,OAAOwD,MAIzC,GAAIkb,EACF,IAAKtiB,KAAQsiB,EAAEzY,SACTxL,EAAEoC,IAAI6hB,EAAEzY,SAAU7J,IACpBD,EAAYC,GAAM,EAAOrB,EAAMiF,OAAOwD,MAK5C,IAQE,OAPArE,IAEAP,EAAQ9C,EAAYwf,GAAK,IAEzBtS,EAAWT,OAAQ,EACnBzB,IAEQ/L,EAAMiF,OAAOC,KAAKhC,IACxB,IAAK,IACL,IAAK,IACH2f,GAA+B,GAC/B,MAEF,QACEvP,KAEItT,EAAMwT,UAAU,gBACbxT,EAAMumB,mBACTjhB,EAAQ,OAAQtF,EAAMwT,UAAU,gBAIpCH,GAAW,GAGc,UAAzBrT,EAAMiF,OAAOC,KAAKhC,IACpB8B,EAAK,OAAQhF,EAAMiF,OAAOwD,MAG5BzI,EAAMmK,MAAM,WAAW8I,UACvB,MAAOjL,GACP,IAAIA,GAAoB,gBAAbA,EAAI3G,KAYb,MAAM2G,EAXN,IAAIwe,EAAKxmB,EAAMiF,OAAOC,MAAQ,GAC9B7E,EAAO+G,OAAOwB,KAAK,CACjBD,MAAO,SACPlB,IAAKO,EAAIP,IACTb,KAAMoB,EAAIpB,KACVc,OAAQM,EAAIN,OACZV,KAAMgB,EAAIhB,MAAQwf,EAAGxf,KACrBO,UAAWS,EAAIT,WAAaif,EAAGhf,OAarC,MAJqB,WAAjBnH,EAAOsI,OACTqb,GAAa3jB,EAAO8I,UAAWwa,GAAK,GAAIpD,GAGV,IAAzBlgB,EAAO+G,OAAOF,QAwEvB,OApEAmd,GAAOoC,UAAY,SAAUpX,GAC3BpO,EAAa2H,KAAKyG,IAGpBgV,GAAOoC,UAAUxmB,EAAMymB,UAEvBrC,GAAO7gB,KAAO,WACZ,IAIImjB,EAAIhY,EAAG/C,EAAGgS,EAAGqG,EAJbzgB,EAAO,CACThD,UAAW,GACXN,QAASF,EAAM+C,QAIbshB,GAAOjd,OAAOF,SAChB1D,EAAK4D,OAASid,GAAOjd,QAGnBpH,EAAM8iB,WAERtf,EAAKojB,MAAO,GAGd,IAAIC,EAAiB7mB,EAAMmK,MAAM,WAAW2c,oBAY5C,IAVID,EAAe3f,OAAS,IAC1B1D,EAAKujB,SAAWF,IAGlB5C,EAAUjkB,EAAMmK,MAAM,WAAW6c,2BAErB9f,OAAS,IACnB1D,EAAKygB,QAAUA,GAGZrY,EAAI,EAAGA,EAAIpL,EAAU0G,OAAQ0E,GAAK,EACrC+C,EAAInO,EAAUoL,IACd+a,EAAK,IACFtlB,KAAOsN,EAAE,UACZgY,EAAGM,MAAQtY,EAAE,YACbgY,EAAG3f,KAAO2H,EAAE,UACZgY,EAAGpf,UAAYoH,EAAE,eACjBgY,EAAG5I,KAAOpP,EAAE,UACZgY,EAAGO,cAAgBvY,EAAE,mBACrBgY,EAAG3S,QAAU,CACXmT,WAAYxY,EAAE,aAAawM,gBAC3BiM,WAAYzY,EAAE,aAAaM,MAC3BoE,WAAY1E,EAAE,aAAawF,gBAE7B3Q,EAAKhD,UAAUoI,KAAK+d,GAGtB,IAAIU,EAAUrnB,EAAMmK,MAAM,WAAWmd,aAMrC,IAAK1J,KAJDyJ,EAAQngB,OAAS,IACnB1D,EAAK8H,OAAS+b,GAGNxmB,EACR,GAAyB,iBAAdA,EAAO+c,GAAiB,CACjCpa,EAAK3C,OAASA,EACd,MAIJ,OAAO2C,GAGT6gB,GAAOkD,OAASlD,GACTA,GAlpNI,IAspNsBmD,IACjCA,EAAQnnB,OAASA","sources":["webpack://my-awesome-web-tool-gallery/./node_modules/jshint/src/jshint.js"],"sourcesContent":["/*!\n * JSHint, by JSHint Community.\n *\n * Licensed under the MIT license.\n *\n * JSHint is a derivative work of JSLint:\n *\n *   Copyright (c) 2002 Douglas Crockford  (www.JSLint.com)\n *\n *   Permission is hereby granted, free of charge, to any person obtaining\n *   a copy of this software and associated documentation files (the \"Software\"),\n *   to deal in the Software without restriction, including without limitation\n *   the rights to use, copy, modify, merge, publish, distribute, sublicense,\n *   and/or sell copies of the Software, and to permit persons to whom\n *   the Software is furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included\n *   in all copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n *   DEALINGS IN THE SOFTWARE.\n *\n */\n\n/*jshint quotmark:double */\n\n/*exported console */\nvar _ = require(\"lodash\");\n\nvar events = require(\"events\");\n\nvar vars = require(\"./vars.js\");\n\nvar messages = require(\"./messages.js\");\n\nvar Lexer = require(\"./lex.js\").Lexer;\n\nvar reg = require(\"./reg.js\");\n\nvar state = require(\"./state.js\").state;\n\nvar style = require(\"./style.js\");\n\nvar options = require(\"./options.js\");\n\nvar scopeManager = require(\"./scope-manager.js\");\n\nvar prodParams = require(\"./prod-params.js\"); // We need this module here because environments such as IE and Rhino\n// don't necessarilly expose the 'console' API and browserify uses\n// it to log things. It's a sad state of affair, really.\n\n\nvar console = require(\"console-browserify\"); // We build the application inside a function so that we produce only a singleton\n// variable. That function will be invoked immediately, and its return value is\n// the JSHINT function itself.\n\n\nvar JSHINT = function () {\n  \"use strict\";\n\n  var api,\n      // Extension API\n  // These are operators that should not be used with the ! operator.\n  bang = {\n    \"<\": true,\n    \"<=\": true,\n    \"==\": true,\n    \"===\": true,\n    \"!==\": true,\n    \"!=\": true,\n    \">\": true,\n    \">=\": true,\n    \"+\": true,\n    \"-\": true,\n    \"*\": true,\n    \"/\": true,\n    \"%\": true\n  },\n      declared,\n      // Globals that were declared using /*global ... */ syntax.\n  functions,\n      // All of the functions\n  inblock,\n      indent,\n      lookahead,\n      lex,\n      member,\n      membersOnly,\n      predefined,\n      // Global variables defined by option\n  extraModules = [],\n      emitter = new events.EventEmitter();\n\n  function checkOption(name, isStable, t) {\n    var type, validNames;\n\n    if (isStable) {\n      type = \"\";\n      validNames = options.validNames;\n    } else {\n      type = \"unstable \";\n      validNames = options.unstableNames;\n    }\n\n    name = name.trim();\n\n    if (/^[+-]W\\d{3}$/g.test(name)) {\n      return true;\n    }\n\n    if (validNames.indexOf(name) === -1) {\n      if (t.type !== \"jslint\" && !_.has(options.removed, name)) {\n        error(\"E001\", t, type, name);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function isString(obj) {\n    return Object.prototype.toString.call(obj) === \"[object String]\";\n  }\n\n  function isIdentifier(tkn, value) {\n    if (!tkn) return false;\n    if (!tkn.identifier || tkn.value !== value) return false;\n    return true;\n  }\n  /**\n   * ES3 defined a set of \"FutureReservedWords\" in order \"to allow for the\n   * possibility of future adoption of [proposed] extensions.\"\n   *\n   * ES5 reduced the set of FutureReservedWords, in some cases by using them to\n   * define new syntactic forms (e.g. `class` and `const`) and in other cases\n   * by simply allowing their use as Identifiers (e.g. `int` and `goto`).\n   * Separately, ES5 introduced new restrictions on certain tokens, but limited\n   * the restriction to strict mode code (e.g. `let` and `yield`).\n   *\n   * This function determines if a given token describes a reserved word\n   * according to the current state of the parser.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {Token} token\n   */\n\n\n  function isReserved(context, token) {\n    if (!token.reserved) {\n      return false;\n    }\n\n    var meta = token.meta;\n\n    if (meta && meta.isFutureReservedWord) {\n      if (state.inES5()) {\n        // ES3 FutureReservedWord in an ES5 environment.\n        if (!meta.es5) {\n          return false;\n        }\n\n        if (token.isProperty) {\n          return false;\n        }\n      }\n    } else if (meta && meta.es5 && !state.inES5()) {\n      return false;\n    } // Some identifiers are reserved only within a strict mode environment.\n\n\n    if (meta && meta.strictOnly && state.inES5()) {\n      if (!state.option.strict && !state.isStrict()) {\n        return false;\n      }\n    }\n\n    if (token.id === \"await\" && !(context & prodParams.async) && !state.option.module) {\n      return false;\n    }\n\n    if (token.id === \"yield\" && !(context & prodParams.yield)) {\n      return state.isStrict();\n    }\n\n    return true;\n  }\n\n  function supplant(str, data) {\n    return str.replace(/\\{([^{}]*)\\}/g, function (a, b) {\n      var r = data[b];\n      return typeof r === \"string\" || typeof r === \"number\" ? r : a;\n    });\n  }\n\n  function combine(dest, src) {\n    Object.keys(src).forEach(function (name) {\n      if (_.has(JSHINT.blacklist, name)) return;\n      dest[name] = src[name];\n    });\n  }\n\n  function processenforceall() {\n    if (state.option.enforceall) {\n      for (var enforceopt in options.bool.enforcing) {\n        if (state.option[enforceopt] === undefined && !options.noenforceall[enforceopt]) {\n          state.option[enforceopt] = true;\n        }\n      }\n\n      for (var relaxopt in options.bool.relaxing) {\n        if (state.option[relaxopt] === undefined) {\n          state.option[relaxopt] = false;\n        }\n      }\n    }\n  }\n  /**\n   * Apply all linting options according to the status of the `state` object.\n   */\n\n\n  function applyOptions() {\n    var badESOpt = null;\n    processenforceall();\n    /**\n     * TODO: Remove in JSHint 3\n     */\n\n    badESOpt = state.inferEsVersion();\n\n    if (badESOpt) {\n      quit(\"E059\", state.tokens.next, \"esversion\", badESOpt);\n    }\n\n    if (state.inES5()) {\n      combine(predefined, vars.ecmaIdentifiers[5]);\n    }\n\n    if (state.inES6()) {\n      combine(predefined, vars.ecmaIdentifiers[6]);\n    }\n\n    if (state.inES8()) {\n      combine(predefined, vars.ecmaIdentifiers[8]);\n    }\n    /**\n     * Use `in` to check for the presence of any explicitly-specified value for\n     * `globalstrict` because both `true` and `false` should trigger an error.\n     */\n\n\n    if (state.option.strict === \"global\" && \"globalstrict\" in state.option) {\n      quit(\"E059\", state.tokens.next, \"strict\", \"globalstrict\");\n    }\n\n    if (state.option.module) {\n      /**\n       * TODO: Extend this restriction to *all* ES6-specific options.\n       */\n      if (!state.inES6()) {\n        warning(\"W134\", state.tokens.next, \"module\", 6);\n      }\n    }\n\n    if (state.option.regexpu) {\n      /**\n       * TODO: Extend this restriction to *all* ES6-specific options.\n       */\n      if (!state.inES6()) {\n        warning(\"W134\", state.tokens.next, \"regexpu\", 6);\n      }\n    }\n\n    if (state.option.couch) {\n      combine(predefined, vars.couch);\n    }\n\n    if (state.option.qunit) {\n      combine(predefined, vars.qunit);\n    }\n\n    if (state.option.rhino) {\n      combine(predefined, vars.rhino);\n    }\n\n    if (state.option.shelljs) {\n      combine(predefined, vars.shelljs);\n      combine(predefined, vars.node);\n    }\n\n    if (state.option.typed) {\n      combine(predefined, vars.typed);\n    }\n\n    if (state.option.phantom) {\n      combine(predefined, vars.phantom);\n    }\n\n    if (state.option.prototypejs) {\n      combine(predefined, vars.prototypejs);\n    }\n\n    if (state.option.node) {\n      combine(predefined, vars.node);\n      combine(predefined, vars.typed);\n    }\n\n    if (state.option.devel) {\n      combine(predefined, vars.devel);\n    }\n\n    if (state.option.dojo) {\n      combine(predefined, vars.dojo);\n    }\n\n    if (state.option.browser) {\n      combine(predefined, vars.browser);\n      combine(predefined, vars.typed);\n    }\n\n    if (state.option.browserify) {\n      combine(predefined, vars.browser);\n      combine(predefined, vars.typed);\n      combine(predefined, vars.browserify);\n    }\n\n    if (state.option.nonstandard) {\n      combine(predefined, vars.nonstandard);\n    }\n\n    if (state.option.jasmine) {\n      combine(predefined, vars.jasmine);\n    }\n\n    if (state.option.jquery) {\n      combine(predefined, vars.jquery);\n    }\n\n    if (state.option.mootools) {\n      combine(predefined, vars.mootools);\n    }\n\n    if (state.option.worker) {\n      combine(predefined, vars.worker);\n    }\n\n    if (state.option.wsh) {\n      combine(predefined, vars.wsh);\n    }\n\n    if (state.option.yui) {\n      combine(predefined, vars.yui);\n    }\n\n    if (state.option.mocha) {\n      combine(predefined, vars.mocha);\n    }\n  } // Produce an error warning.\n\n\n  function quit(code, token, a, b) {\n    var percentage = Math.floor(token.line / state.lines.length * 100);\n    var message = messages.errors[code].desc;\n    var exception = {\n      name: \"JSHintError\",\n      line: token.line,\n      character: token.from,\n      message: message + \" (\" + percentage + \"% scanned).\",\n      raw: message,\n      code: code,\n      a: a,\n      b: b\n    };\n    exception.reason = supplant(message, exception) + \" (\" + percentage + \"% scanned).\";\n    throw exception;\n  }\n\n  function removeIgnoredMessages() {\n    var ignored = state.ignoredLines;\n    if (_.isEmpty(ignored)) return;\n    JSHINT.errors = _.reject(JSHINT.errors, function (err) {\n      return ignored[err.line];\n    });\n  }\n\n  function warning(code, t, a, b, c, d) {\n    var ch, l, w, msg;\n\n    if (/^W\\d{3}$/.test(code)) {\n      if (state.ignored[code]) return;\n      msg = messages.warnings[code];\n    } else if (/E\\d{3}/.test(code)) {\n      msg = messages.errors[code];\n    } else if (/I\\d{3}/.test(code)) {\n      msg = messages.info[code];\n    }\n\n    t = t || state.tokens.next || {};\n\n    if (t.id === \"(end)\") {\n      // `~\n      t = state.tokens.curr;\n    }\n\n    l = t.line;\n    ch = t.from;\n    w = {\n      id: \"(error)\",\n      raw: msg.desc,\n      code: msg.code,\n      evidence: state.lines[l - 1] || \"\",\n      line: l,\n      character: ch,\n      scope: JSHINT.scope,\n      a: a,\n      b: b,\n      c: c,\n      d: d\n    };\n    w.reason = supplant(msg.desc, w);\n    JSHINT.errors.push(w);\n    removeIgnoredMessages();\n    if (JSHINT.errors.length >= state.option.maxerr) quit(\"E043\", t);\n    return w;\n  }\n\n  function warningAt(m, l, ch, a, b, c, d) {\n    return warning(m, {\n      line: l,\n      from: ch\n    }, a, b, c, d);\n  }\n\n  function error(m, t, a, b, c, d) {\n    warning(m, t, a, b, c, d);\n  }\n\n  function errorAt(m, l, ch, a, b, c, d) {\n    return error(m, {\n      line: l,\n      from: ch\n    }, a, b, c, d);\n  } // Tracking of \"internal\" scripts, like eval containing a static string\n\n\n  function addEvalCode(elem, token) {\n    JSHINT.internals.push({\n      id: \"(internal)\",\n      elem: elem,\n      token: token,\n      code: token.value.replace(/([^\\\\])(\\\\*)\\2\\\\n/g, \"$1\\n\")\n    });\n  }\n  /**\n   * Process an inline linting directive\n   *\n   * @param {Token} directiveToken - the directive-bearing comment token\n   * @param {Token} previous - the token that preceeds the directive\n   */\n\n\n  function lintingDirective(directiveToken, previous) {\n    var body = directiveToken.body.split(\",\").map(function (s) {\n      return s.trim();\n    });\n    var predef = {};\n\n    if (directiveToken.type === \"falls through\") {\n      previous.caseFallsThrough = true;\n      return;\n    }\n\n    if (directiveToken.type === \"globals\") {\n      body.forEach(function (item, idx) {\n        var parts = item.split(\":\");\n        var key = parts[0].trim();\n\n        if (key === \"-\" || !key.length) {\n          // Ignore trailing comma\n          if (idx > 0 && idx === body.length - 1) {\n            return;\n          }\n\n          error(\"E002\", directiveToken);\n          return;\n        }\n\n        if (key.charAt(0) === \"-\") {\n          key = key.slice(1);\n          JSHINT.blacklist[key] = key;\n          delete predefined[key];\n        } else {\n          predef[key] = parts.length > 1 && parts[1].trim() === \"true\";\n        }\n      });\n      combine(predefined, predef);\n\n      for (var key in predef) {\n        if (_.has(predef, key)) {\n          declared[key] = directiveToken;\n        }\n      }\n    }\n\n    if (directiveToken.type === \"exported\") {\n      body.forEach(function (e, idx) {\n        if (!e.length) {\n          // Ignore trailing comma\n          if (idx > 0 && idx === body.length - 1) {\n            return;\n          }\n\n          error(\"E002\", directiveToken);\n          return;\n        }\n\n        state.funct[\"(scope)\"].addExported(e);\n      });\n    }\n\n    if (directiveToken.type === \"members\") {\n      membersOnly = membersOnly || {};\n      body.forEach(function (m) {\n        var ch1 = m.charAt(0);\n        var ch2 = m.charAt(m.length - 1);\n\n        if (ch1 === ch2 && (ch1 === \"\\\"\" || ch1 === \"'\")) {\n          m = m.substr(1, m.length - 2).replace(\"\\\\\\\"\", \"\\\"\");\n        }\n\n        membersOnly[m] = false;\n      });\n    }\n\n    var numvals = [\"maxstatements\", \"maxparams\", \"maxdepth\", \"maxcomplexity\", \"maxerr\", \"maxlen\", \"indent\"];\n\n    if (directiveToken.type === \"jshint\" || directiveToken.type === \"jslint\" || directiveToken.type === \"jshint.unstable\") {\n      body.forEach(function (item) {\n        var parts = item.split(\":\");\n        var key = parts[0].trim();\n        var val = parts.length > 1 ? parts[1].trim() : \"\";\n        var numberVal;\n\n        if (!checkOption(key, directiveToken.type !== \"jshint.unstable\", directiveToken)) {\n          return;\n        }\n\n        if (numvals.indexOf(key) >= 0) {\n          // GH988 - numeric options can be disabled by setting them to `false`\n          if (val !== \"false\") {\n            numberVal = +val;\n\n            if (typeof numberVal !== \"number\" || !isFinite(numberVal) || numberVal <= 0 || Math.floor(numberVal) !== numberVal) {\n              error(\"E032\", directiveToken, val);\n              return;\n            }\n\n            state.option[key] = numberVal;\n          } else {\n            state.option[key] = key === \"indent\" ? 4 : false;\n          }\n\n          return;\n        }\n\n        if (key === \"validthis\") {\n          // `validthis` is valid only within a function scope.\n          if (state.funct[\"(global)\"]) return void error(\"E009\");\n          if (val !== \"true\" && val !== \"false\") return void error(\"E002\", directiveToken);\n          state.option.validthis = val === \"true\";\n          return;\n        }\n\n        if (key === \"quotmark\") {\n          switch (val) {\n            case \"true\":\n            case \"false\":\n              state.option.quotmark = val === \"true\";\n              break;\n\n            case \"double\":\n            case \"single\":\n              state.option.quotmark = val;\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          return;\n        }\n\n        if (key === \"shadow\") {\n          switch (val) {\n            case \"true\":\n              state.option.shadow = true;\n              break;\n\n            case \"outer\":\n              state.option.shadow = \"outer\";\n              break;\n\n            case \"false\":\n            case \"inner\":\n              state.option.shadow = \"inner\";\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          return;\n        }\n\n        if (key === \"unused\") {\n          switch (val) {\n            case \"true\":\n              state.option.unused = true;\n              break;\n\n            case \"false\":\n              state.option.unused = false;\n              break;\n\n            case \"vars\":\n            case \"strict\":\n              state.option.unused = val;\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          return;\n        }\n\n        if (key === \"latedef\") {\n          switch (val) {\n            case \"true\":\n              state.option.latedef = true;\n              break;\n\n            case \"false\":\n              state.option.latedef = false;\n              break;\n\n            case \"nofunc\":\n              state.option.latedef = \"nofunc\";\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          return;\n        }\n\n        if (key === \"ignore\") {\n          switch (val) {\n            case \"line\":\n              state.ignoredLines[directiveToken.line] = true;\n              removeIgnoredMessages();\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          return;\n        }\n\n        if (key === \"strict\") {\n          switch (val) {\n            case \"true\":\n              state.option.strict = true;\n              break;\n\n            case \"false\":\n              state.option.strict = false;\n              break;\n\n            case \"global\":\n            case \"implied\":\n              state.option.strict = val;\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          return;\n        }\n\n        if (key === \"module\") {\n          /**\n           * TODO: Extend this restriction to *all* \"environmental\" options.\n           */\n          if (!hasParsedCode(state.funct)) {\n            error(\"E055\", directiveToken, \"module\");\n          }\n        }\n\n        if (key === \"esversion\") {\n          switch (val) {\n            case \"3\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n            case \"10\":\n            case \"11\":\n              state.option.moz = false;\n              state.option.esversion = +val;\n              break;\n\n            case \"2015\":\n            case \"2016\":\n            case \"2017\":\n            case \"2018\":\n            case \"2019\":\n            case \"2020\":\n              state.option.moz = false; // Translate specification publication year to version number.\n\n              state.option.esversion = +val - 2009;\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          if (!hasParsedCode(state.funct)) {\n            error(\"E055\", directiveToken, \"esversion\");\n          }\n\n          return;\n        }\n\n        var match = /^([+-])(W\\d{3})$/g.exec(key);\n\n        if (match) {\n          // ignore for -W..., unignore for +W...\n          state.ignored[match[2]] = match[1] === \"-\";\n          return;\n        }\n\n        var tn;\n\n        if (val === \"true\" || val === \"false\") {\n          if (directiveToken.type === \"jslint\") {\n            tn = options.renamed[key] || key;\n            state.option[tn] = val === \"true\";\n\n            if (options.inverted[tn] !== undefined) {\n              state.option[tn] = !state.option[tn];\n            }\n          } else if (directiveToken.type === \"jshint.unstable\") {\n            /* istanbul ignore next */\n            state.option.unstable[key] = val === \"true\";\n          } else {\n            state.option[key] = val === \"true\";\n          }\n\n          return;\n        }\n\n        error(\"E002\", directiveToken);\n      });\n      applyOptions();\n    }\n  }\n  /**\n   * Return a token beyond the token available in `state.tokens.next`. If no\n   * such token exists, return the \"(end)\" token. This function is used to\n   * determine parsing strategies in cases where the value of the next token\n   * does not provide sufficient information, as is the case with `for` loops,\n   * e.g.:\n   *\n   *     for ( var i in ...\n   *\n   * versus:\n   *\n   *     for ( var i = ...\n   *\n   * @param {number} [p] - offset of desired token; defaults to 0\n   *\n   * @returns {token}\n   */\n\n\n  function peek(p) {\n    var i = p || 0,\n        j = lookahead.length,\n        t;\n\n    if (i < j) {\n      return lookahead[i];\n    }\n\n    while (j <= i) {\n      t = lex.token(); // When the lexer is exhausted, this function should produce the \"(end)\"\n      // token, even in cases where the requested token is beyond the end of\n      // the input stream.\n\n      if (!t) {\n        // If the lookahead buffer is empty, the expected \"(end)\" token was\n        // already emitted by the most recent invocation of `advance` and is\n        // available as the next token.\n        if (!lookahead.length) {\n          return state.tokens.next;\n        }\n\n        return lookahead[j - 1];\n      }\n\n      lookahead[j] = t;\n      j += 1;\n    }\n\n    return t;\n  }\n\n  function peekIgnoreEOL() {\n    var i = 0;\n    var t;\n\n    do {\n      t = peek(i++);\n    } while (t.id === \"(endline)\");\n\n    return t;\n  }\n  /**\n   * Consume the next token.\n   *\n   * @param {string} [expected] - the expected value of the next token's `id`\n   *                              property (in the case of punctuators) or\n   *                              `value` property (in the case of identifiers\n   *                              and literals); if unspecified, any token will\n   *                              be accepted\n   * @param {object} [relatedToken] - the token that informed the expected\n   *                                  value, if any (for example: the opening\n   *                                  brace when a closing brace is expected);\n   *                                  used to produce more meaningful errors\n   */\n\n\n  function advance(expected, relatedToken) {\n    var nextToken = state.tokens.next;\n\n    if (expected && nextToken.id !== expected) {\n      if (relatedToken) {\n        if (nextToken.id === \"(end)\") {\n          error(\"E019\", relatedToken, relatedToken.id);\n        } else {\n          error(\"E020\", nextToken, expected, relatedToken.id, relatedToken.line, nextToken.value);\n        }\n      } else if (nextToken.type !== \"(identifier)\" || nextToken.value !== expected) {\n        error(\"E021\", nextToken, expected, nextToken.value);\n      }\n    }\n\n    state.tokens.prev = state.tokens.curr;\n    state.tokens.curr = state.tokens.next;\n\n    for (;;) {\n      state.tokens.next = lookahead.shift() || lex.token();\n\n      if (!state.tokens.next) {\n        // No more tokens left, give up\n        quit(\"E041\", state.tokens.curr);\n      }\n\n      if (state.tokens.next.id === \"(end)\" || state.tokens.next.id === \"(error)\") {\n        return;\n      }\n\n      if (state.tokens.next.check) {\n        state.tokens.next.check();\n      }\n\n      if (state.tokens.next.isSpecial) {\n        lintingDirective(state.tokens.next, state.tokens.curr);\n      } else {\n        if (state.tokens.next.id !== \"(endline)\") {\n          break;\n        }\n      }\n    }\n  }\n  /**\n   * Determine whether a given token is an operator.\n   *\n   * @param {token} token\n   *\n   * @returns {boolean}\n   */\n\n\n  function isOperator(token) {\n    return token.first || token.right || token.left || token.id === \"yield\" || token.id === \"await\";\n  }\n\n  function isEndOfExpr(context, curr, next) {\n    if (arguments.length <= 1) {\n      curr = state.tokens.curr;\n      next = state.tokens.next;\n    }\n\n    if (next.id === \"in\" && context & prodParams.noin) {\n      return true;\n    }\n\n    if (next.id === \";\" || next.id === \"}\" || next.id === \":\") {\n      return true;\n    }\n\n    if (next.infix === curr.infix || // Infix operators which follow `yield` should only be consumed as part\n    // of the current expression if allowed by the syntactic grammar. In\n    // effect, this prevents automatic semicolon insertion when `yield` is\n    // followed by a newline and a comma operator (without enabling it when\n    // `yield` is followed by a newline and a `[` token).\n    curr.id === \"yield\" && curr.rbp < next.rbp) {\n      return !sameLine(curr, next);\n    }\n\n    return false;\n  }\n  /**\n   * The `expression` function is the heart of JSHint's parsing behaior. It is\n   * based on the Pratt parser, but it extends that model with a `fud` method.\n   * Short for \"first null denotation,\" it it similar to the `nud` (\"null\n   * denotation\") function, but it is only used on the first token of a\n   * statement. This simplifies usage in statement-oriented languages like\n   * JavaScript.\n   *\n   * .nud  Null denotation\n   * .fud  First null denotation\n   * .led  Left denotation\n   *  lbp  Left binding power\n   *  rbp  Right binding power\n   *\n   * They are elements of the parsing method called Top Down Operator Precedence.\n   *\n   * In addition to parsing, this function applies a number of linting patterns.\n   *\n   * @param {number} context - the parsing context (a bitfield describing\n   *                           conditions of the current parsing operation\n   *                           which can influence how the next tokens are\n   *                           interpreted); see `prod-params.js` for more\n   *                           detail)\n   * @param {number} rbp - the right-binding power of the token to be consumed\n   */\n\n\n  function expression(context, rbp) {\n    var left,\n        isArray = false,\n        isObject = false;\n    var initial = context & prodParams.initial;\n    var curr;\n    context &= ~prodParams.initial;\n    state.nameStack.push();\n    if (state.tokens.next.id === \"(end)\") error(\"E006\", state.tokens.curr);\n    advance();\n\n    if (initial) {\n      state.funct[\"(verb)\"] = state.tokens.curr.value;\n      state.tokens.curr.beginsStmt = true;\n    }\n\n    curr = state.tokens.curr;\n\n    if (initial && curr.fud && (!curr.useFud || curr.useFud(context))) {\n      left = state.tokens.curr.fud(context);\n    } else {\n      if (state.tokens.curr.nud) {\n        left = state.tokens.curr.nud(context, rbp);\n      } else {\n        error(\"E030\", state.tokens.curr, state.tokens.curr.id);\n      }\n\n      while (rbp < state.tokens.next.lbp && !isEndOfExpr(context)) {\n        isArray = state.tokens.curr.value === \"Array\";\n        isObject = state.tokens.curr.value === \"Object\"; // #527, new Foo.Array(), Foo.Array(), new Foo.Object(), Foo.Object()\n        // Line breaks in IfStatement heads exist to satisfy the checkJSHint\n        // \"Line too long.\" error.\n\n        if (left && (left.value || left.first && left.first.value)) {\n          // If the left.value is not \"new\", or the left.first.value is a \".\"\n          // then safely assume that this is not \"new Array()\" and possibly\n          // not \"new Object()\"...\n          if (left.value !== \"new\" || left.first && left.first.value && left.first.value === \".\") {\n            isArray = false; // ...In the case of Object, if the left.value and state.tokens.curr.value\n            // are not equal, then safely assume that this not \"new Object()\"\n\n            if (left.value !== state.tokens.curr.value) {\n              isObject = false;\n            }\n          }\n        }\n\n        advance();\n\n        if (isArray && state.tokens.curr.id === \"(\" && state.tokens.next.id === \")\") {\n          warning(\"W009\", state.tokens.curr);\n        }\n\n        if (isObject && state.tokens.curr.id === \"(\" && state.tokens.next.id === \")\") {\n          warning(\"W010\", state.tokens.curr);\n        }\n\n        if (left && state.tokens.curr.led) {\n          left = state.tokens.curr.led(context, left);\n        } else {\n          error(\"E033\", state.tokens.curr, state.tokens.curr.id);\n        }\n      }\n    }\n\n    state.nameStack.pop();\n    return left;\n  } // Functions for conformance of style.\n\n\n  function sameLine(first, second) {\n    return first.line === (second.startLine || second.line);\n  }\n\n  function nobreaknonadjacent(left, right) {\n    if (!state.option.laxbreak && !sameLine(left, right)) {\n      warning(\"W014\", right, right.value);\n    }\n  }\n\n  function nolinebreak(t) {\n    if (!sameLine(t, state.tokens.next)) {\n      warning(\"E022\", t, t.value);\n    }\n  }\n  /**\n   * Validate the comma token in the \"current\" position of the token stream.\n   *\n   * @param {object} [opts]\n   * @param {boolean} [opts.property] - flag indicating whether the current\n   *                                    comma token is situated directly within\n   *                                    an object initializer\n   * @param {boolean} [opts.allowTrailing] - flag indicating whether the\n   *                                         current comma token may appear\n   *                                         directly before a delimiter\n   *\n   * @returns {boolean} flag indicating the validity of the current comma\n   *                    token; `false` if the token directly causes a syntax\n   *                    error, `true` otherwise\n   */\n\n\n  function checkComma(opts) {\n    var prev = state.tokens.prev;\n    var curr = state.tokens.curr;\n    opts = opts || {};\n\n    if (!sameLine(prev, curr)) {\n      if (!state.option.laxcomma) {\n        if (checkComma.first) {\n          warning(\"I001\", curr);\n          checkComma.first = false;\n        }\n\n        warning(\"W014\", prev, curr.value);\n      }\n    }\n\n    if (state.tokens.next.identifier && !(opts.property && state.inES5())) {\n      // Keywords that cannot follow a comma operator.\n      switch (state.tokens.next.value) {\n        case \"break\":\n        case \"case\":\n        case \"catch\":\n        case \"continue\":\n        case \"default\":\n        case \"do\":\n        case \"else\":\n        case \"finally\":\n        case \"for\":\n        case \"if\":\n        case \"in\":\n        case \"instanceof\":\n        case \"return\":\n        case \"switch\":\n        case \"throw\":\n        case \"try\":\n        case \"var\":\n        case \"let\":\n        case \"while\":\n        case \"with\":\n          error(\"E024\", state.tokens.next, state.tokens.next.value);\n          return false;\n      }\n    }\n\n    if (state.tokens.next.type === \"(punctuator)\") {\n      switch (state.tokens.next.value) {\n        case \"}\":\n        case \"]\":\n        case \",\":\n        case \")\":\n          if (opts.allowTrailing) {\n            return true;\n          }\n\n          error(\"E024\", state.tokens.next, state.tokens.next.value);\n          return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Factory function for creating \"symbols\"--objects that will be inherited by\n   * tokens. The objects created by this function are stored in a symbol table\n   * and set as the prototype of the tokens generated by the lexer.\n   *\n   * Note that this definition of \"symbol\" describes an implementation detail\n   * of JSHint and is not related to the ECMAScript value type introduced in\n   * ES2015.\n   *\n   * @param {string} s - the name of the token; for keywords (e.g. `void`) and\n   *                     delimiters (e.g.. `[`), this is the token's text\n   *                     representation; for literals (e.g. numbers) and other\n   *                     \"special\" tokens (e.g. the end-of-file marker) this is\n   *                     a parenthetical value\n   * @param {number} p - the left-binding power of the token as used by the\n   *                     Pratt parsing semantics\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function symbol(s, p) {\n    var x = state.syntax[s];\n\n    if (!x || typeof x !== \"object\") {\n      state.syntax[s] = x = {\n        id: s,\n        lbp: p,\n        // Symbols that accept a right-hand side do so with a binding power\n        // that is commonly identical to their left-binding power. (This value\n        // is relevant when determining if the grouping operator is necessary\n        // to override the precedence of surrounding operators.) Because the\n        // exponentiation operator's left-binding power and right-binding power\n        // are distinct, the values must be encoded separately.\n        rbp: p,\n        value: s\n      };\n    }\n\n    return x;\n  }\n  /**\n   * Convenience function for defining delimiter symbols.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function delim(s) {\n    var x = symbol(s, 0);\n    x.delim = true;\n    return x;\n  }\n  /**\n   * Convenience function for defining statement-denoting symbols.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} f - the first null denotation function for the symbol;\n   *                       see the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function stmt(s, f) {\n    var x = delim(s);\n    x.identifier = x.reserved = true;\n    x.fud = f;\n    return x;\n  }\n  /**\n   * Convenience function for defining block-statement-denoting symbols.\n   *\n   * A block-statement-denoting symbol is one like 'if' or 'for', which will be\n   * followed by a block and will not have to end with a semicolon.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} - the first null denotation function for the symbol; see\n   *                     the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function blockstmt(s, f) {\n    var x = stmt(s, f);\n    x.block = true;\n    return x;\n  }\n  /**\n   * Denote a given JSHint symbol as an identifier and a reserved keyword.\n   *\n   * @param {object} - a JSHint symbol value\n   *\n   * @returns {object} - the provided object\n   */\n\n\n  function reserveName(x) {\n    var c = x.id.charAt(0);\n\n    if (c >= \"a\" && c <= \"z\" || c >= \"A\" && c <= \"Z\") {\n      x.identifier = x.reserved = true;\n    }\n\n    return x;\n  }\n  /**\n   * Convenience function for defining \"prefix\" symbols--operators that accept\n   * expressions as a right-hand side.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - the first null denotation function for the symbol;\n   *                         see the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function prefix(s, f) {\n    var x = symbol(s, 150);\n    reserveName(x);\n    x.nud = typeof f === \"function\" ? f : function (context) {\n      this.arity = \"unary\";\n      this.right = expression(context, 150);\n\n      if (this.id === \"++\" || this.id === \"--\") {\n        if (state.option.plusplus) {\n          warning(\"W016\", this, this.id);\n        }\n\n        if (this.right) {\n          checkLeftSideAssign(context, this.right, this);\n        }\n      }\n\n      return this;\n    };\n    return x;\n  }\n  /**\n   * Convenience function for defining \"type\" symbols--those that describe\n   * literal values.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} f - the first null denotation function for the symbol;\n   *                       see the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function type(s, f) {\n    var x = symbol(s, 0);\n    x.type = s;\n    x.nud = f;\n    return x;\n  }\n  /**\n   * Convenience function for defining JSHint symbols for reserved\n   * keywords--those that are restricted from use as bindings (and as property\n   * names in ECMAScript 3 environments).\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} func - the first null denotation function for the\n   *                          symbol; see the `expression` function for more\n   *                          detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function reserve(name, func) {\n    var x = type(name, func);\n    x.identifier = true;\n    x.reserved = true;\n    return x;\n  }\n  /**\n   * Convenience function for defining JSHint symbols for keywords that are\n   * only reserved in some circumstances.\n   *\n   * @param {string} name - the name of the symbol\n   * @param {object} [meta] - a collection of optional arguments\n   * @param {function} [meta.nud] -the null denotation function for the symbol;\n   *                   see the `expression` function for more detail\n   * @param {boolean} [meta.es5] - `true` if the identifier is reserved\n   *                               in ECMAScript 5 or later\n   * @param {boolean} [meta.strictOnly] - `true` if the identifier is only\n   *                                      reserved in strict mode code.\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function FutureReservedWord(name, meta) {\n    var x = type(name, state.syntax[\"(identifier)\"].nud);\n    meta = meta || {};\n    meta.isFutureReservedWord = true;\n    x.value = name;\n    x.identifier = true;\n    x.reserved = true;\n    x.meta = meta;\n    return x;\n  }\n  /**\n   * Convenience function for defining \"infix\" symbols--operators that require\n   * operands as both \"land-hand side\" and \"right-hand side\".\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - a function to be invoked that consumes the\n   *                         right-hand side of the operator\n   * @param {number} p - the left-binding power of the token as used by the\n   *                     Pratt parsing semantics\n   * @param {boolean} [w] - if `true`\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function infix(s, f, p, w) {\n    var x = symbol(s, p);\n    reserveName(x);\n    x.infix = true;\n\n    x.led = function (context, left) {\n      if (!w) {\n        nobreaknonadjacent(state.tokens.prev, state.tokens.curr);\n      }\n\n      if ((s === \"in\" || s === \"instanceof\") && left.id === \"!\") {\n        warning(\"W018\", left, \"!\");\n      }\n\n      if (typeof f === \"function\") {\n        return f(context, left, this);\n      } else {\n        this.left = left;\n        this.right = expression(context, p);\n        return this;\n      }\n    };\n\n    return x;\n  }\n  /**\n   * Convenience function for defining the `=>` token as used in arrow\n   * functions.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function application(s) {\n    var x = symbol(s, 42);\n    x.infix = true;\n\n    x.led = function (context, left) {\n      nobreaknonadjacent(state.tokens.prev, state.tokens.curr);\n      this.left = left;\n      this.right = doFunction(context, {\n        type: \"arrow\",\n        loneArg: left\n      });\n      return this;\n    };\n\n    return x;\n  }\n  /**\n   * Convenience function for defining JSHint symbols for relation operators.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - a function to be invoked to enforce any additional\n   *                         linting rules.\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function relation(s, f) {\n    var x = symbol(s, 100);\n    x.infix = true;\n\n    x.led = function (context, left) {\n      nobreaknonadjacent(state.tokens.prev, state.tokens.curr);\n      this.left = left;\n      var right = this.right = expression(context, 100);\n\n      if (isIdentifier(left, \"NaN\") || isIdentifier(right, \"NaN\")) {\n        warning(\"W019\", this);\n      } else if (f) {\n        f.apply(this, [context, left, right]);\n      }\n\n      if (!left || !right) {\n        quit(\"E041\", state.tokens.curr);\n      }\n\n      if (left.id === \"!\") {\n        warning(\"W018\", left, \"!\");\n      }\n\n      if (right.id === \"!\") {\n        warning(\"W018\", right, \"!\");\n      }\n\n      return this;\n    };\n\n    return x;\n  }\n  /**\n   * Determine if a given token marks the beginning of a UnaryExpression.\n   *\n   * @param {object} token\n   *\n   * @returns {boolean}\n   */\n\n\n  function beginsUnaryExpression(token) {\n    return token.arity === \"unary\" && token.id !== \"++\" && token.id !== \"--\";\n  }\n\n  var typeofValues = {};\n  typeofValues.legacy = [// E4X extended the `typeof` operator to return \"xml\" for the XML and\n  // XMLList types it introduced.\n  // Ref: 11.3.2 The typeof Operator\n  // http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-357.pdf\n  \"xml\", // IE<9 reports \"unknown\" when the `typeof` operator is applied to an\n  // object existing across a COM+ bridge. In lieu of official documentation\n  // (which does not exist), see:\n  // http://robertnyman.com/2005/12/21/what-is-typeof-unknown/\n  \"unknown\"];\n  typeofValues.es3 = [\"undefined\", \"boolean\", \"number\", \"string\", \"function\", \"object\"];\n  typeofValues.es3 = typeofValues.es3.concat(typeofValues.legacy);\n  typeofValues.es6 = typeofValues.es3.concat(\"symbol\", \"bigint\");\n  /**\n   * Validate comparisons between the result of a `typeof` expression and a\n   * string literal.\n   *\n   * @param {token} [left] - one of the values being compared\n   * @param {token} [right] - the other value being compared\n   * @param {object} state - the global state object (see `state.js`)\n   *\n   * @returns {boolean} - `false` if the second token describes a `typeof`\n   *                       expression and the first token is a string literal\n   *                       whose value is never returned by that operator;\n   *                       `true` otherwise\n   */\n\n  function isTypoTypeof(left, right, state) {\n    var values;\n    if (state.option.notypeof) return false;\n    if (!left || !right) return false;\n    values = state.inES6() ? typeofValues.es6 : typeofValues.es3;\n\n    if (right.type === \"(identifier)\" && right.value === \"typeof\" && left.type === \"(string)\") {\n      if (left.value === \"bigint\") {\n        if (!state.inES11()) {\n          warning(\"W119\", left, \"BigInt\", \"11\");\n        }\n\n        return false;\n      }\n\n      return !_.includes(values, left.value);\n    }\n\n    return false;\n  }\n  /**\n   * Determine if a given token describes the built-in `eval` function.\n   *\n   * @param {token} left\n   * @param {object} state - the global state object (see `state.js`)\n   *\n   * @returns {boolean}\n   */\n\n\n  function isGlobalEval(left, state) {\n    var isGlobal = false; // permit methods to refer to an \"eval\" key in their own context\n\n    if (left.type === \"this\" && state.funct[\"(context)\"] === null) {\n      isGlobal = true;\n    } // permit use of \"eval\" members of objects\n    else if (left.type === \"(identifier)\") {\n      if (state.option.node && left.value === \"global\") {\n        isGlobal = true;\n      } else if (state.option.browser && (left.value === \"window\" || left.value === \"document\")) {\n        isGlobal = true;\n      }\n    }\n\n    return isGlobal;\n  }\n  /**\n   * Determine if a given token describes a property of a built-in object.\n   *\n   * @param {token} left\n   *\n   * @returns {boolean}\n   */\n\n\n  function findNativePrototype(left) {\n    var natives = [\"Array\", \"ArrayBuffer\", \"Boolean\", \"Collator\", \"DataView\", \"Date\", \"DateTimeFormat\", \"Error\", \"EvalError\", \"Float32Array\", \"Float64Array\", \"Function\", \"Infinity\", \"Intl\", \"Int16Array\", \"Int32Array\", \"Int8Array\", \"Iterator\", \"Number\", \"NumberFormat\", \"Object\", \"RangeError\", \"ReferenceError\", \"RegExp\", \"StopIteration\", \"String\", \"SyntaxError\", \"TypeError\", \"Uint16Array\", \"Uint32Array\", \"Uint8Array\", \"Uint8ClampedArray\", \"URIError\"];\n\n    function walkPrototype(obj) {\n      if (typeof obj !== \"object\") return;\n      return obj.right === \"prototype\" ? obj : walkPrototype(obj.left);\n    }\n\n    function walkNative(obj) {\n      while (!obj.identifier && typeof obj.left === \"object\") {\n        obj = obj.left;\n      }\n\n      if (obj.identifier && natives.indexOf(obj.value) >= 0 && state.funct[\"(scope)\"].isPredefined(obj.value)) {\n        return obj.value;\n      }\n    }\n\n    var prototype = walkPrototype(left);\n    if (prototype) return walkNative(prototype);\n  }\n  /**\n   * Determine if the given token is a valid assignment target; emit errors\n   * and/or warnings as appropriate\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {token} left - the left hand side of the assignment\n   * @param {token=} assignToken - the token for the assignment, used for\n   *                               reporting\n   * @param {object=} options - optional object\n   * @param {boolean} options.allowDestructuring - whether to allow\n   *                                               destructuring binding\n   *\n   * @returns {boolean} Whether the left hand side is OK\n   */\n\n\n  function checkLeftSideAssign(context, left, assignToken, options) {\n    var allowDestructuring = options && options.allowDestructuring;\n    assignToken = assignToken || left;\n\n    if (state.option.freeze) {\n      var nativeObject = findNativePrototype(left);\n      if (nativeObject) warning(\"W121\", left, nativeObject);\n    }\n\n    if (left.identifier && !left.isMetaProperty) {\n      // The `reassign` method also calls `modify`, but we are specific in\n      // order to catch function re-assignment and globals re-assignment\n      state.funct[\"(scope)\"].block.reassign(left.value, left);\n    }\n\n    if (left.id === \".\") {\n      if (!left.left || left.left.value === \"arguments\" && !state.isStrict()) {\n        warning(\"W143\", assignToken);\n      }\n\n      state.nameStack.set(state.tokens.prev);\n      return true;\n    } else if (left.id === \"{\" || left.id === \"[\") {\n      if (!allowDestructuring || !left.destructAssign) {\n        if (left.id === \"{\" || !left.left) {\n          warning(\"E031\", assignToken);\n        } else if (left.left.value === \"arguments\" && !state.isStrict()) {\n          warning(\"W143\", assignToken);\n        }\n      }\n\n      if (left.id === \"[\") {\n        state.nameStack.set(left.right);\n      }\n\n      return true;\n    } else if (left.identifier && !isReserved(context, left) && !left.isMetaProperty) {\n      if (state.funct[\"(scope)\"].bindingtype(left.value) === \"exception\") {\n        warning(\"W022\", left);\n      }\n\n      if (left.value === \"eval\" && state.isStrict()) {\n        error(\"E031\", assignToken);\n        return false;\n      } else if (left.value === \"arguments\") {\n        if (!state.isStrict()) {\n          warning(\"W143\", assignToken);\n        } else {\n          error(\"E031\", assignToken);\n          return false;\n        }\n      }\n\n      state.nameStack.set(left);\n      return true;\n    }\n\n    error(\"E031\", assignToken);\n    return false;\n  }\n  /**\n   * Convenience function for defining JSHint symbols for assignment operators.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - a function to be invoked that consumes the\n   *                         right-hand side of the operator (see the `infix`\n   *                         function)\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function assignop(s, f) {\n    var x = infix(s, typeof f === \"function\" ? f : function (context, left, that) {\n      that.left = left;\n      checkLeftSideAssign(context, left, that, {\n        allowDestructuring: true\n      });\n      that.right = expression(context, 10);\n      return that;\n    }, 20);\n    x.exps = true;\n    x.assign = true;\n    return x;\n  }\n  /**\n   * Convenience function for defining JSHint symbols for bitwise operators.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - the left denotation function for the symbol; see\n   *                         the `expression` function for more detail\n   * @param {number} p - the left-binding power of the token as used by the\n   *                     Pratt parsing semantics\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function bitwise(s, f, p) {\n    var x = symbol(s, p);\n    reserveName(x);\n    x.infix = true;\n    x.led = typeof f === \"function\" ? f : function (context, left) {\n      if (state.option.bitwise) {\n        warning(\"W016\", this, this.id);\n      }\n\n      this.left = left;\n      this.right = expression(context, p);\n      return this;\n    };\n    return x;\n  }\n  /**\n   * Convenience function for defining JSHint symbols for bitwise assignment\n   * operators. See the `assignop` function for more detail.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function bitwiseassignop(s) {\n    symbol(s, 20).exps = true;\n    return infix(s, function (context, left, that) {\n      if (state.option.bitwise) {\n        warning(\"W016\", that, that.id);\n      }\n\n      checkLeftSideAssign(context, left, that);\n      that.right = expression(context, 10);\n      return that;\n    }, 20);\n  }\n  /**\n   * Convenience function for defining JSHint symbols for those operators which\n   * have a single operand that appears before them in the source code.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function suffix(s) {\n    var x = symbol(s, 150);\n\n    x.led = function (context, left) {\n      // this = suffix e.g. \"++\" punctuator\n      // left = symbol operated e.g. \"a\" identifier or \"a.b\" punctuator\n      if (state.option.plusplus) {\n        warning(\"W016\", this, this.id);\n      }\n\n      checkLeftSideAssign(context, left, this);\n      this.left = left;\n      return this;\n    };\n\n    return x;\n  }\n  /**\n   * Retrieve the value of the next token if it is an identifier and optionally\n   * advance the parser.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {boolean} [isName] - `true` if an IdentifierName should be consumed\n   *                             (e.g. object properties)\n   * @param {boolean} [preserve] - `true` if the token should not be consumed\n   *\n   * @returns {string|undefined} - the value of the identifier, if present\n   */\n\n\n  function optionalidentifier(context, isName, preserve) {\n    if (!state.tokens.next.identifier) {\n      return;\n    }\n\n    if (!preserve) {\n      advance();\n    }\n\n    var curr = state.tokens.curr;\n\n    if (isReserved(context, curr) && !(isName && state.inES5())) {\n      warning(\"W024\", state.tokens.curr, state.tokens.curr.id);\n    }\n\n    return curr.value;\n  }\n  /**\n   * Consume the \"...\" token which designates \"spread\" and \"rest\" operations if\n   * it is present. If the operator is repeated, consume every repetition, and\n   * issue a single error describing the syntax error.\n   *\n   * @param {string} operation - either \"spread\" or \"rest\"\n   *\n   * @returns {boolean} a value describing whether or not any tokens were\n   *                    consumed in this way\n   */\n\n\n  function spreadrest(operation) {\n    if (!checkPunctuator(state.tokens.next, \"...\")) {\n      return false;\n    }\n\n    if (!state.inES6(true)) {\n      warning(\"W119\", state.tokens.next, operation + \" operator\", \"6\");\n    }\n\n    advance();\n\n    if (checkPunctuator(state.tokens.next, \"...\")) {\n      warning(\"E024\", state.tokens.next, \"...\");\n\n      while (checkPunctuator(state.tokens.next, \"...\")) {\n        advance();\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Ensure that the current token is an identifier and retrieve its value.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {boolean} [isName] - `true` if an IdentifierName should be consumed\n   *                             (e.g. object properties)\n   *\n   * @returns {string|undefined} - the value of the identifier, if present\n   */\n\n\n  function identifier(context, isName) {\n    var i = optionalidentifier(context, isName, false);\n\n    if (i) {\n      return i;\n    }\n\n    error(\"E030\", state.tokens.next, state.tokens.next.value); // The token should be consumed after a warning is issued so the parser\n    // can continue as though an identifier were found. The semicolon token\n    // should not be consumed in this way so that the parser interprets it as\n    // a statement delimiter;\n\n    if (state.tokens.next.id !== \";\") {\n      advance();\n    }\n  }\n  /**\n   * Determine if the provided token may be evaluated and emit a linting\n   * warning if this is note the case.\n   *\n   * @param {token} controlToken\n   */\n\n\n  function reachable(controlToken) {\n    var i = 0,\n        t;\n\n    if (state.tokens.next.id !== \";\" || controlToken.inBracelessBlock) {\n      return;\n    }\n\n    for (;;) {\n      do {\n        t = peek(i);\n        i += 1;\n      } while (t.id !== \"(end)\" && t.id === \"(comment)\");\n\n      if (t.reach) {\n        return;\n      }\n\n      if (t.id !== \"(endline)\") {\n        if (t.id === \"function\") {\n          if (state.option.latedef === true) {\n            warning(\"W026\", t);\n          }\n\n          break;\n        }\n\n        warning(\"W027\", t, t.value, controlToken.value);\n        break;\n      }\n    }\n  }\n  /**\n   * Consume the semicolon that delimits the statement currently being parsed,\n   * emitting relevant warnings/errors as appropriate.\n   *\n   * @param {token} stmt - token describing the statement under consideration\n   */\n\n\n  function parseFinalSemicolon(stmt) {\n    if (state.tokens.next.id !== \";\") {\n      // don't complain about unclosed templates / strings\n      if (state.tokens.next.isUnclosed) return advance();\n      var isSameLine = sameLine(state.tokens.curr, state.tokens.next) && state.tokens.next.id !== \"(end)\";\n      var blockEnd = checkPunctuator(state.tokens.next, \"}\");\n\n      if (isSameLine && !blockEnd && !(stmt.id === \"do\" && state.inES6(true))) {\n        errorAt(\"E058\", state.tokens.curr.line, state.tokens.curr.character);\n      } else if (!state.option.asi) {\n        // If this is the last statement in a block that ends on the same line\n        // *and* option lastsemic is on, ignore the warning.  Otherwise, issue\n        // a warning about missing semicolon.\n        if (!(blockEnd && isSameLine && state.option.lastsemic)) {\n          warningAt(\"W033\", state.tokens.curr.line, state.tokens.curr.character);\n        }\n      }\n    } else {\n      advance(\";\");\n    }\n  }\n  /**\n   * Consume a statement.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   *\n   * @returns {token} - the token describing the statement\n   */\n\n\n  function statement(context) {\n    var i = indent,\n        r,\n        t = state.tokens.next,\n        hasOwnScope = false;\n    context |= prodParams.initial;\n\n    if (t.id === \";\") {\n      advance(\";\");\n      return;\n    } // Is this a labelled statement?\n\n\n    var res = isReserved(context, t); // We're being more tolerant here: if someone uses\n    // a FutureReservedWord (that is not meant to start a statement)\n    // as a label, we warn but proceed anyway.\n\n    if (res && t.meta && t.meta.isFutureReservedWord && !t.fud) {\n      warning(\"W024\", t, t.id);\n      res = false;\n    }\n\n    if (t.identifier && !res && peek().id === \":\") {\n      advance();\n      advance(\":\");\n      hasOwnScope = true;\n      state.funct[\"(scope)\"].stack();\n      state.funct[\"(scope)\"].block.addLabel(t.value, {\n        token: state.tokens.curr\n      });\n\n      if (!state.tokens.next.labelled && state.tokens.next.value !== \"{\") {\n        warning(\"W028\", state.tokens.next, t.value, state.tokens.next.value);\n      }\n\n      t = state.tokens.next;\n    } // Is it a lonely block?\n\n\n    if (t.id === \"{\") {\n      // Is it a switch case block?\n      //\n      //  switch (foo) {\n      //    case bar: { <= here.\n      //      ...\n      //    }\n      //  }\n      var iscase = state.funct[\"(verb)\"] === \"case\" && state.tokens.curr.value === \":\";\n      block(context, true, true, false, false, iscase);\n\n      if (hasOwnScope) {\n        state.funct[\"(scope)\"].unstack();\n      }\n\n      return;\n    } // Parse the statement.\n\n\n    r = expression(context, 0);\n\n    if (r && !(r.identifier && r.value === \"function\") && !(r.type === \"(punctuator)\" && r.left && r.left.identifier && r.left.value === \"function\")) {\n      if (!state.isStrict() && state.stmtMissingStrict()) {\n        warning(\"E007\");\n      }\n    } // Look for the final semicolon.\n\n\n    if (!t.block) {\n      if (!state.option.expr && (!r || !r.exps)) {\n        warning(\"W030\", state.tokens.curr);\n      } else if (state.option.nonew && r && r.left && r.id === \"(\" && r.left.id === \"new\") {\n        warning(\"W031\", t);\n      }\n\n      parseFinalSemicolon(t);\n    } // Restore the indentation.\n\n\n    indent = i;\n\n    if (hasOwnScope) {\n      state.funct[\"(scope)\"].unstack();\n    }\n\n    return r;\n  }\n  /**\n   * Consume a series of statements until encountering either the end of the\n   * program or a token that interrupts control flow.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   *\n   * @returns {Array<token>} - the tokens consumed\n   */\n\n\n  function statements(context) {\n    var a = [],\n        p;\n\n    while (!state.tokens.next.reach && state.tokens.next.id !== \"(end)\") {\n      if (state.tokens.next.id === \";\") {\n        p = peek();\n\n        if (!p || p.id !== \"(\" && p.id !== \"[\") {\n          warning(\"W032\");\n        }\n\n        advance(\";\");\n      } else {\n        a.push(statement(context));\n      }\n    }\n\n    return a;\n  }\n  /**\n   * Parse any directives in a directive prologue.\n   */\n\n\n  function directives() {\n    var current = state.tokens.next;\n\n    while (state.tokens.next.id === \"(string)\") {\n      var next = peekIgnoreEOL();\n\n      if (!isEndOfExpr(0, current, next)) {\n        break;\n      }\n\n      current = next;\n      advance();\n      var directive = state.tokens.curr.value;\n\n      if (state.directive[directive] || directive === \"use strict\" && state.option.strict === \"implied\") {\n        warning(\"W034\", state.tokens.curr, directive);\n      } // From ECMAScript 2016:\n      //\n      // > 14.1.2 Static Semantics: Early Errors\n      // >\n      // > [...]\n      // > - It is a Syntax Error if ContainsUseStrict of FunctionBody is true\n      // >   and IsSimpleParameterList of FormalParameters is false.\n\n\n      if (directive === \"use strict\" && state.inES7() && !state.funct[\"(global)\"] && state.funct[\"(hasSimpleParams)\"] === false) {\n        error(\"E065\", state.tokens.curr);\n      }\n\n      state.directive[directive] = state.tokens.curr;\n      parseFinalSemicolon(current);\n    }\n\n    if (state.isStrict()) {\n      state.option.undef = true;\n    }\n  }\n  /**\n   * Parses a single block. A block is a sequence of statements wrapped in\n   * braces.\n   *\n   * @param {number} context - parsing context\n   * @param {boolean} ordinary - `true` for everything but function bodies and\n   *                             try blocks\n   * @param {boolean} [stmt] - `true` if block can be a single statement (e.g.\n   *                           in if/for/while)\n   * @param {boolean} [isfunc] - `true` if block is a function body\n   * @param {boolean} [isfatarrow] - `true` if its a body of a fat arrow\n   *                                 function\n   * @param {boolean} [iscase] - `true` if block is a switch case block\n   *\n   * @returns {token} - the token describing the block\n   */\n\n\n  function block(context, ordinary, stmt, isfunc, isfatarrow, iscase) {\n    var a,\n        b = inblock,\n        old_indent = indent,\n        m,\n        t,\n        d;\n    inblock = ordinary;\n    t = state.tokens.next;\n    var metrics = state.funct[\"(metrics)\"];\n    metrics.nestedBlockDepth += 1;\n    metrics.verifyMaxNestedBlockDepthPerFunction();\n\n    if (state.tokens.next.id === \"{\") {\n      advance(\"{\"); // create a new block scope\n\n      state.funct[\"(scope)\"].stack();\n\n      if (state.tokens.next.id !== \"}\") {\n        indent += state.option.indent;\n\n        while (!ordinary && state.tokens.next.from > indent) {\n          indent += state.option.indent;\n        }\n\n        if (isfunc) {\n          m = {};\n\n          for (d in state.directive) {\n            m[d] = state.directive[d];\n          }\n\n          directives();\n          state.funct[\"(isStrict)\"] = state.isStrict();\n\n          if (state.option.strict && state.funct[\"(context)\"][\"(global)\"]) {\n            if (!m[\"use strict\"] && !state.isStrict()) {\n              warning(\"E007\");\n            }\n          }\n        }\n\n        a = statements(context);\n        metrics.statementCount += a.length;\n        indent -= state.option.indent;\n      } else if (isfunc) {\n        // Ensure property is set for functions with empty bodies.\n        state.funct[\"(isStrict)\"] = state.isStrict();\n      }\n\n      advance(\"}\", t);\n\n      if (isfunc) {\n        state.funct[\"(scope)\"].validateParams(isfatarrow);\n\n        if (m) {\n          state.directive = m;\n        }\n      }\n\n      state.funct[\"(scope)\"].unstack();\n      indent = old_indent;\n    } else if (!ordinary) {\n      if (isfunc) {\n        state.funct[\"(scope)\"].stack();\n\n        if (stmt && !isfatarrow && !state.inMoz()) {\n          error(\"W118\", state.tokens.curr, \"function closure expressions\");\n        }\n\n        if (isfatarrow) {\n          state.funct[\"(scope)\"].validateParams(true);\n        }\n\n        var expr = expression(context, 10);\n\n        if (state.option.noreturnawait && context & prodParams.async && expr.identifier && expr.value === \"await\") {\n          warning(\"W146\", expr);\n        }\n\n        if (state.option.strict && state.funct[\"(context)\"][\"(global)\"]) {\n          if (!state.isStrict()) {\n            warning(\"E007\");\n          }\n        }\n\n        state.funct[\"(scope)\"].unstack();\n      } else {\n        error(\"E021\", state.tokens.next, \"{\", state.tokens.next.value);\n      }\n    } else {\n      state.funct[\"(scope)\"].stack();\n\n      if (!stmt || state.option.curly) {\n        warning(\"W116\", state.tokens.next, \"{\", state.tokens.next.value);\n      } // JSHint observes Annex B of the ECMAScript specification by default,\n      // where function declarations are permitted in the statement positions\n      // of IfStatements.\n\n\n      var supportsFnDecl = state.funct[\"(verb)\"] === \"if\" || state.tokens.curr.id === \"else\";\n      state.tokens.next.inBracelessBlock = true;\n      indent += state.option.indent; // test indentation only if statement is in new line\n\n      a = [statement(context)];\n      indent -= state.option.indent;\n\n      if (a[0] && a[0].declaration && !(supportsFnDecl && a[0].id === \"function\")) {\n        error(\"E048\", a[0], a[0].id[0].toUpperCase() + a[0].id.slice(1));\n      }\n\n      state.funct[\"(scope)\"].unstack();\n    } // Don't clear and let it propagate out if it is \"break\", \"return\" or\n    // similar in switch case\n\n\n    switch (state.funct[\"(verb)\"]) {\n      case \"break\":\n      case \"continue\":\n      case \"return\":\n      case \"throw\":\n        if (iscase) {\n          break;\n        }\n\n      /* falls through */\n\n      default:\n        state.funct[\"(verb)\"] = null;\n    }\n\n    inblock = b;\n\n    if (ordinary && state.option.noempty && (!a || a.length === 0)) {\n      warning(\"W035\", state.tokens.prev);\n    }\n\n    metrics.nestedBlockDepth -= 1;\n    return a;\n  }\n  /**\n   * Update the global state which tracks all statically-identifiable property\n   * names, and emit a warning if the `members` linting directive is in use and\n   * does not include the given name.\n   *\n   * @param {string} m - the property name\n   */\n\n\n  function countMember(m) {\n    if (membersOnly && typeof membersOnly[m] !== \"boolean\") {\n      warning(\"W036\", state.tokens.curr, m);\n    }\n\n    if (typeof member[m] === \"number\") {\n      member[m] += 1;\n    } else {\n      member[m] = 1;\n    }\n  } // Build the syntax table by declaring the syntactic elements of the language.\n\n\n  type(\"(number)\", function () {\n    if (state.tokens.next.id === \".\") {\n      warning(\"W005\", this);\n    }\n\n    return this;\n  });\n  type(\"(string)\", function () {\n    return this;\n  });\n  state.syntax[\"(identifier)\"] = {\n    type: \"(identifier)\",\n    lbp: 0,\n    identifier: true,\n    nud: function nud(context) {\n      var v = this.value; // If this identifier is the lone parameter to a shorthand \"fat arrow\"\n      // function definition, i.e.\n      //\n      //     x => x;\n      //\n      // ...it should not be considered as a variable in the current scope. It\n      // will be added to the scope of the new function when the next token is\n      // parsed, so it can be safely ignored for now.\n\n      var isLoneArrowParam = state.tokens.next.id === \"=>\";\n\n      if (isReserved(context, this)) {\n        warning(\"W024\", this, v);\n      } else if (!isLoneArrowParam && !state.funct[\"(comparray)\"].check(v)) {\n        state.funct[\"(scope)\"].block.use(v, state.tokens.curr);\n      }\n\n      return this;\n    },\n    led: function led() {\n      /* istanbul ignore next */\n      error(\"E033\", state.tokens.next, state.tokens.next.value);\n    }\n  };\n  var baseTemplateSyntax = {\n    identifier: false,\n    template: true\n  };\n  state.syntax[\"(template)\"] = _.extend({\n    lbp: 155,\n    type: \"(template)\",\n    nud: doTemplateLiteral,\n    led: doTemplateLiteral,\n    noSubst: false\n  }, baseTemplateSyntax);\n  state.syntax[\"(template middle)\"] = _.extend({\n    lbp: 0,\n    type: \"(template middle)\",\n    noSubst: false\n  }, baseTemplateSyntax);\n  state.syntax[\"(template tail)\"] = _.extend({\n    lbp: 0,\n    type: \"(template tail)\",\n    tail: true,\n    noSubst: false\n  }, baseTemplateSyntax);\n  state.syntax[\"(no subst template)\"] = _.extend({\n    lbp: 155,\n    type: \"(template)\",\n    nud: doTemplateLiteral,\n    led: doTemplateLiteral,\n    noSubst: true,\n    tail: true // mark as tail, since it's always the last component\n\n  }, baseTemplateSyntax);\n  type(\"(regexp)\", function () {\n    return this;\n  }); // ECMAScript parser\n\n  delim(\"(endline)\");\n\n  (function (x) {\n    x.line = x.from = 0;\n  })(delim(\"(begin)\"));\n\n  delim(\"(end)\").reach = true;\n  delim(\"(error)\").reach = true;\n  delim(\"}\").reach = true;\n  delim(\")\");\n  delim(\"]\");\n  delim(\"\\\"\").reach = true;\n  delim(\"'\").reach = true;\n  delim(\";\");\n  delim(\":\").reach = true;\n  delim(\"#\");\n  reserve(\"else\");\n  reserve(\"case\").reach = true;\n  reserve(\"catch\");\n  reserve(\"default\").reach = true;\n  reserve(\"finally\");\n  reserve(\"true\", function () {\n    return this;\n  });\n  reserve(\"false\", function () {\n    return this;\n  });\n  reserve(\"null\", function () {\n    return this;\n  });\n  reserve(\"this\", function () {\n    if (state.isStrict() && !isMethod() && !state.option.validthis && (state.funct[\"(statement)\"] && state.funct[\"(name)\"].charAt(0) > \"Z\" || state.funct[\"(global)\"])) {\n      warning(\"W040\", this);\n    }\n\n    return this;\n  });\n\n  (function (superSymbol) {\n    superSymbol.rbp = 161;\n  })(reserve(\"super\", function () {\n    superNud.call(state.tokens.curr, this);\n    return this;\n  }));\n\n  assignop(\"=\", \"assign\");\n  assignop(\"+=\", \"assignadd\");\n  assignop(\"-=\", \"assignsub\");\n  assignop(\"*=\", \"assignmult\");\n\n  assignop(\"/=\", \"assigndiv\").nud = function () {\n    /* istanbul ignore next */\n    error(\"E014\");\n  };\n\n  assignop(\"%=\", \"assignmod\");\n  assignop(\"**=\", function (context, left, that) {\n    if (!state.inES7()) {\n      warning(\"W119\", that, \"Exponentiation operator\", \"7\");\n    }\n\n    that.left = left;\n    checkLeftSideAssign(context, left, that);\n    that.right = expression(context, 10);\n    return that;\n  });\n  bitwiseassignop(\"&=\");\n  bitwiseassignop(\"|=\");\n  bitwiseassignop(\"^=\");\n  bitwiseassignop(\"<<=\");\n  bitwiseassignop(\">>=\");\n  bitwiseassignop(\">>>=\");\n  infix(\",\", function (context, left, that) {\n    if (state.option.nocomma) {\n      warning(\"W127\", that);\n    }\n\n    that.left = left;\n\n    if (checkComma()) {\n      that.right = expression(context, 10);\n    } else {\n      that.right = null;\n    }\n\n    return that;\n  }, 10, true);\n  infix(\"?\", function (context, left, that) {\n    increaseComplexityCount();\n    that.left = left;\n    that.right = expression(context & ~prodParams.noin, 10);\n    advance(\":\");\n    expression(context, 10);\n    return that;\n  }, 30);\n  infix(\"||\", function (context, left, that) {\n    increaseComplexityCount();\n    that.left = left;\n    that.right = expression(context, 40);\n    return that;\n  }, 40);\n  var andPrecedence = 50;\n  infix(\"&&\", function (context, left, that) {\n    increaseComplexityCount();\n    that.left = left;\n    that.right = expression(context, andPrecedence);\n    return that;\n  }, andPrecedence);\n  infix(\"??\", function (context, left, that) {\n    if (!left.paren && (left.id === \"||\" || left.id === \"&&\")) {\n      error(\"E024\", that, \"??\");\n    }\n\n    if (!state.inES11()) {\n      warning(\"W119\", that, \"nullish coalescing\", \"11\");\n    }\n\n    increaseComplexityCount();\n    that.left = left;\n    var right = that.right = expression(context, 39);\n\n    if (!right.paren && (right.id === \"||\" || right.id === \"&&\")) {\n      error(\"E024\", that.right, that.right.id);\n    }\n\n    return that;\n  }, 39); // The Exponentiation operator, introduced in ECMAScript 2016\n  //\n  // ExponentiationExpression[Yield] :\n  //   UnaryExpression[?Yield]\n  //   UpdateExpression[?Yield] ** ExponentiationExpression[?Yield]\n\n  infix(\"**\", function (context, left, that) {\n    if (!state.inES7()) {\n      warning(\"W119\", that, \"Exponentiation operator\", \"7\");\n    } // Disallow UnaryExpressions which are not wrapped in parenthesis\n\n\n    if (!left.paren && beginsUnaryExpression(left)) {\n      error(\"E024\", that, \"**\");\n    }\n\n    that.left = left;\n    that.right = expression(context, that.rbp);\n    return that;\n  }, 150);\n  state.syntax[\"**\"].rbp = 140;\n  bitwise(\"|\", \"bitor\", 70);\n  bitwise(\"^\", \"bitxor\", 80);\n  bitwise(\"&\", \"bitand\", 90);\n  relation(\"==\", function (context, left, right) {\n    var eqnull = state.option.eqnull && ((left && left.value) === \"null\" || (right && right.value) === \"null\");\n\n    switch (true) {\n      case !eqnull && state.option.eqeqeq:\n        this.from = this.character;\n        warning(\"W116\", this, \"===\", \"==\");\n        break;\n\n      /* istanbul ignore next */\n\n      case isTypoTypeof(right, left, state):\n        warning(\"W122\", this, right.value);\n        break;\n\n      case isTypoTypeof(left, right, state):\n        warning(\"W122\", this, left.value);\n        break;\n    }\n\n    return this;\n  });\n  relation(\"===\", function (context, left, right) {\n    if (isTypoTypeof(right, left, state)) {\n      warning(\"W122\", this, right.value);\n    } else if (isTypoTypeof(left, right, state)) {\n      /* istanbul ignore next */\n      warning(\"W122\", this, left.value);\n    }\n\n    return this;\n  });\n  relation(\"!=\", function (context, left, right) {\n    var eqnull = state.option.eqnull && ((left && left.value) === \"null\" || (right && right.value) === \"null\");\n\n    if (!eqnull && state.option.eqeqeq) {\n      this.from = this.character;\n      warning(\"W116\", this, \"!==\", \"!=\");\n    } else if (isTypoTypeof(right, left, state)) {\n      /* istanbul ignore next */\n      warning(\"W122\", this, right.value);\n    } else if (isTypoTypeof(left, right, state)) {\n      warning(\"W122\", this, left.value);\n    }\n\n    return this;\n  });\n  relation(\"!==\", function (context, left, right) {\n    if (isTypoTypeof(right, left, state)) {\n      warning(\"W122\", this, right.value);\n    } else if (isTypoTypeof(left, right, state)) {\n      /* istanbul ignore next */\n      warning(\"W122\", this, left.value);\n    }\n\n    return this;\n  });\n  relation(\"<\");\n  relation(\">\");\n  relation(\"<=\");\n  relation(\">=\");\n  bitwise(\"<<\", \"shiftleft\", 120);\n  bitwise(\">>\", \"shiftright\", 120);\n  bitwise(\">>>\", \"shiftrightunsigned\", 120);\n  infix(\"in\", \"in\", 120);\n  infix(\"instanceof\", function (context, left, token) {\n    var right;\n    var scope = state.funct[\"(scope)\"];\n    token.left = left;\n    token.right = right = expression(context, 120); // This condition reflects a syntax error which will be reported by the\n    // `expression` function.\n\n    if (!right) {\n      return token;\n    }\n\n    if (right.id === \"(number)\" || right.id === \"(string)\" || right.value === \"null\" || right.value === \"undefined\" && !scope.has(\"undefined\") || right.arity === \"unary\" || right.id === \"{\" || right.id === \"[\" && !right.right || right.id === \"(regexp)\" || right.id === \"(template)\" && !right.tag) {\n      error(\"E060\");\n    }\n\n    if (right.id === \"function\") {\n      warning(\"W139\");\n    }\n\n    return token;\n  }, 120);\n  infix(\"+\", function (context, left, that) {\n    var next = state.tokens.next;\n    var right;\n    that.left = left;\n    that.right = right = expression(context, 130);\n\n    if (left && right && left.id === \"(string)\" && right.id === \"(string)\") {\n      left.value += right.value;\n      left.character = right.character;\n\n      if (!state.option.scripturl && reg.javascriptURL.test(left.value)) {\n        warning(\"W050\", left);\n      }\n\n      return left;\n    }\n\n    if (next.id === \"+\" || next.id === \"++\") {\n      warning(\"W007\", that.right);\n    }\n\n    return that;\n  }, 130);\n  prefix(\"+\", function (context) {\n    var next = state.tokens.next;\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n\n    if (next.id === \"+\" || next.id === \"++\") {\n      warning(\"W007\", this.right);\n    }\n\n    return this;\n  });\n  infix(\"-\", function (context, left, that) {\n    var next = state.tokens.next;\n    that.left = left;\n    that.right = expression(context, 130);\n\n    if (next.id === \"-\" || next.id === \"--\") {\n      warning(\"W006\", that.right);\n    }\n\n    return that;\n  }, 130);\n  prefix(\"-\", function (context) {\n    var next = state.tokens.next;\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n\n    if (next.id === \"-\" || next.id === \"--\") {\n      warning(\"W006\", this.right);\n    }\n\n    return this;\n  });\n  infix(\"*\", \"mult\", 140);\n  infix(\"/\", \"div\", 140);\n  infix(\"%\", \"mod\", 140);\n  suffix(\"++\");\n  prefix(\"++\", \"preinc\");\n  state.syntax[\"++\"].exps = true;\n  suffix(\"--\");\n  prefix(\"--\", \"predec\");\n  state.syntax[\"--\"].exps = true;\n  prefix(\"delete\", function (context) {\n    this.arity = \"unary\";\n    var p = expression(context, 150);\n\n    if (!p) {\n      return this;\n    }\n\n    if (p.id !== \".\" && p.id !== \"[\") {\n      warning(\"W051\");\n    }\n\n    this.first = p; // The `delete` operator accepts unresolvable references when not in strict\n    // mode, so the operand may be undefined.\n\n    if (p.identifier && !state.isStrict()) {\n      p.forgiveUndef = true;\n    }\n\n    return this;\n  }).exps = true;\n  prefix(\"~\", function (context) {\n    if (state.option.bitwise) {\n      warning(\"W016\", this, \"~\");\n    }\n\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n    return this;\n  });\n  infix(\"...\");\n  prefix(\"!\", function (context) {\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n\n    if (!this.right) {\n      // '!' followed by nothing? Give up.\n      quit(\"E041\", this);\n    }\n\n    if (bang[this.right.id] === true) {\n      warning(\"W018\", this, \"!\");\n    }\n\n    return this;\n  });\n  prefix(\"typeof\", function (context) {\n    this.arity = \"unary\";\n    var p = expression(context, 150);\n    this.first = this.right = p;\n\n    if (!p) {\n      // 'typeof' followed by nothing? Give up.\n      quit(\"E041\", this);\n    } // The `typeof` operator accepts unresolvable references, so the operand\n    // may be undefined.\n\n\n    if (p.identifier) {\n      p.forgiveUndef = true;\n    }\n\n    return this;\n  });\n  prefix(\"new\", function (context) {\n    var mp = metaProperty(context, \"target\", function () {\n      if (!state.inES6(true)) {\n        warning(\"W119\", state.tokens.prev, \"new.target\", \"6\");\n      }\n\n      var inFunction,\n          c = state.funct;\n\n      while (c) {\n        inFunction = !c[\"(global)\"];\n\n        if (!c[\"(arrow)\"]) {\n          break;\n        }\n\n        c = c[\"(context)\"];\n      }\n\n      if (!inFunction) {\n        warning(\"W136\", state.tokens.prev, \"new.target\");\n      }\n    });\n\n    if (mp) {\n      return mp;\n    }\n\n    var opening = state.tokens.next;\n    var c = expression(context, 155),\n        i;\n\n    if (!c) {\n      return this;\n    }\n\n    if (!c.paren && c.rbp > 160) {\n      error(\"E024\", opening, opening.value);\n    }\n\n    if (c.id !== \"function\") {\n      if (c.identifier) {\n        switch (c.value) {\n          case \"Number\":\n          case \"String\":\n          case \"Boolean\":\n          case \"Math\":\n          case \"JSON\":\n            warning(\"W053\", state.tokens.prev, c.value);\n            break;\n\n          case \"Symbol\":\n            if (state.inES6()) {\n              warning(\"W053\", state.tokens.prev, c.value);\n            }\n\n            break;\n\n          case \"Function\":\n            if (!state.option.evil) {\n              warning(\"W054\");\n            }\n\n            break;\n\n          case \"Date\":\n          case \"RegExp\":\n          case \"this\":\n            break;\n\n          default:\n            i = c.value.substr(0, 1);\n\n            if (state.option.newcap && (i < \"A\" || i > \"Z\") && !state.funct[\"(scope)\"].isPredefined(c.value)) {\n              warning(\"W055\", state.tokens.curr);\n            }\n\n        }\n      } else {\n        if (c.id === \"?.\" && !c.paren) {\n          error(\"E024\", c, \"?.\");\n        } else if (c.id !== \".\" && c.id !== \"[\" && c.id !== \"(\") {\n          /* istanbul ignore next */\n          warning(\"W056\", state.tokens.curr);\n        }\n      }\n    } else {\n      if (!state.option.supernew) warning(\"W057\", this);\n    }\n\n    if (state.tokens.next.id !== \"(\" && !state.option.supernew) {\n      warning(\"W058\", state.tokens.curr, state.tokens.curr.value);\n    }\n\n    this.first = this.right = c;\n    return this;\n  });\n  state.syntax[\"new\"].exps = true;\n  var classDeclaration = blockstmt(\"class\", function (context) {\n    var className, classNameToken;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, \"class\", \"6\");\n    }\n\n    state.inClassBody = true; // Class Declaration: 'class <Classname>'\n\n    if (state.tokens.next.identifier && state.tokens.next.value !== \"extends\") {\n      classNameToken = state.tokens.next;\n      className = classNameToken.value;\n      identifier(context); // unintialized, so that the 'extends' clause is parsed while the class is in TDZ\n\n      state.funct[\"(scope)\"].addbinding(className, {\n        type: \"class\",\n        initialized: false,\n        token: classNameToken\n      });\n    } // Class Declaration: 'class <Classname> extends <Superclass>'\n\n\n    if (state.tokens.next.value === \"extends\") {\n      advance(\"extends\");\n      expression(context, 0);\n    }\n\n    if (classNameToken) {\n      this.name = classNameToken;\n      state.funct[\"(scope)\"].initialize(className);\n    } else {\n      this.name = null;\n    }\n\n    state.funct[\"(scope)\"].stack();\n    classBody(this, context);\n    return this;\n  });\n  classDeclaration.exps = true;\n  classDeclaration.declaration = true;\n  /*\n    Class expression\n     The Block- and Expression- handling for \"class\" are almost identical, except for the ordering of steps.\n    In an expression:, the name should not be saved into the calling scope, but is still accessible inside the definition, so we open a new scope first, then save the name. We also mark it as used.\n  */\n\n  prefix(\"class\", function (context) {\n    var className, classNameToken;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, \"class\", \"6\");\n    }\n\n    state.inClassBody = true; // Class Declaration: 'class <Classname>'\n\n    if (state.tokens.next.identifier && state.tokens.next.value !== \"extends\") {\n      classNameToken = state.tokens.next;\n      className = classNameToken.value;\n      identifier(context);\n    } // Class Declaration: 'class <Classname> extends <Superclass>'\n\n\n    if (state.tokens.next.value === \"extends\") {\n      advance(\"extends\");\n      expression(context, 0);\n    }\n\n    state.funct[\"(scope)\"].stack();\n\n    if (classNameToken) {\n      this.name = classNameToken;\n      state.funct[\"(scope)\"].addbinding(className, {\n        type: \"class\",\n        initialized: true,\n        token: classNameToken\n      });\n      state.funct[\"(scope)\"].block.use(className, classNameToken);\n    } else {\n      this.name = null;\n    }\n\n    classBody(this, context);\n    return this;\n  });\n\n  function classBody(classToken, context) {\n    var props = Object.create(null);\n    var name, accessorType, token, isStatic, inGenerator, hasConstructor;\n    /* istanbul ignore else */\n\n    if (state.tokens.next.value === \"{\") {\n      advance(\"{\");\n    } else {\n      warning(\"W116\", state.tokens.curr, \"identifier\", state.tokens.next.type); //?\n\n      advance();\n    }\n\n    while (state.tokens.next.value !== \"}\") {\n      isStatic = false;\n      inGenerator = false;\n      context &= ~prodParams.preAsync;\n\n      if (state.tokens.next.value === \"static\" && !checkPunctuator(peek(), \"(\")) {\n        isStatic = true;\n        advance();\n      }\n\n      if (state.tokens.next.value === \"async\") {\n        if (!checkPunctuator(peek(), \"(\")) {\n          context |= prodParams.preAsync;\n          advance();\n          nolinebreak(state.tokens.curr);\n\n          if (checkPunctuator(state.tokens.next, \"*\")) {\n            inGenerator = true;\n            advance(\"*\");\n\n            if (!state.inES9()) {\n              warning(\"W119\", state.tokens.next, \"async generators\", \"9\");\n            }\n          }\n\n          if (!state.inES8()) {\n            warning(\"W119\", state.tokens.curr, \"async functions\", \"8\");\n          }\n        }\n      }\n\n      if (state.tokens.next.value === \"*\") {\n        inGenerator = true;\n        advance();\n      }\n\n      token = state.tokens.next;\n\n      if ((token.value === \"set\" || token.value === \"get\") && !checkPunctuator(peek(), \"(\")) {\n        if (inGenerator) {\n          /* istanbul ignore next */\n          error(\"E024\", token, token.value);\n        }\n\n        accessorType = token.value;\n        advance();\n        token = state.tokens.next;\n\n        if (!isStatic && token.value === \"constructor\") {\n          error(\"E049\", token, \"class \" + accessorType + \"ter method\", token.value);\n        } else if (isStatic && token.value === \"prototype\") {\n          error(\"E049\", token, \"static class \" + accessorType + \"ter method\", token.value);\n        }\n      } else {\n        accessorType = null;\n      }\n\n      switch (token.value) {\n        case \";\":\n          warning(\"W032\", token);\n          advance();\n          break;\n\n        case \"constructor\":\n          if (isStatic) {\n            // treat like a regular method -- static methods can be called 'constructor'\n            name = propertyName(context);\n            saveProperty(props, name, token, true, isStatic);\n            doMethod(classToken, context, name, inGenerator);\n          } else {\n            if (inGenerator || context & prodParams.preAsync) {\n              error(\"E024\", token, token.value);\n            } else if (hasConstructor) {\n              /* istanbul ignore next */\n              error(\"E024\", token, token.value);\n            } else {\n              hasConstructor = !accessorType && !isStatic;\n            }\n\n            advance();\n            doMethod(classToken, context, state.nameStack.infer());\n          }\n\n          break;\n\n        case \"[\":\n          name = computedPropertyName(context);\n          doMethod(classToken, context, name, inGenerator); // We don't check names (via calling saveProperty()) of computed expressions like [\"Symbol.iterator\"]()\n\n          break;\n\n        default:\n          name = propertyName(context);\n\n          if (name === undefined) {\n            error(\"E024\", token, token.value);\n            advance();\n            break;\n          }\n\n          if (accessorType) {\n            saveAccessor(accessorType, props, name, token, true, isStatic);\n            name = state.nameStack.infer();\n          } else {\n            if (isStatic && name === \"prototype\") {\n              error(\"E049\", token, \"static class method\", name);\n            }\n\n            saveProperty(props, name, token, true, isStatic);\n          }\n\n          doMethod(classToken, context, name, inGenerator);\n          break;\n      }\n    }\n\n    advance(\"}\");\n    checkProperties(props);\n    state.inClassBody = false;\n    state.funct[\"(scope)\"].unstack();\n  }\n\n  function doMethod(classToken, context, name, generator) {\n    if (generator) {\n      if (!state.inES6()) {\n        warning(\"W119\", state.tokens.curr, \"function*\", \"6\");\n      }\n    }\n\n    if (state.tokens.next.value !== \"(\") {\n      error(\"E054\", state.tokens.next, state.tokens.next.value);\n      advance();\n\n      if (state.tokens.next.value === \"{\") {\n        // manually cheating the test \"invalidClasses\", which asserts this particular behavior when a class is misdefined.\n        advance();\n\n        if (state.tokens.next.value === \"}\") {\n          warning(\"W116\", state.tokens.next, \"(\", state.tokens.next.value);\n          advance();\n          identifier(context);\n          advance();\n        }\n        /* istanbul ignore next */\n\n\n        return;\n      } else {\n        while (state.tokens.next.value !== \"(\") {\n          advance();\n        }\n      }\n    }\n\n    doFunction(context, {\n      name: name,\n      type: generator ? \"generator\" : null,\n      isMethod: true,\n      statement: classToken\n    });\n  }\n\n  prefix(\"void\").exps = true;\n  infix(\".\", function (context, left, that) {\n    var m = identifier(context, true);\n\n    if (typeof m === \"string\") {\n      countMember(m);\n    }\n\n    that.left = left;\n    that.right = m;\n\n    if (m && m === \"hasOwnProperty\" && state.tokens.next.value === \"=\") {\n      warning(\"W001\");\n    }\n\n    if (left && left.value === \"arguments\" && (m === \"callee\" || m === \"caller\")) {\n      if (state.option.noarg) warning(\"W059\", left, m);else if (state.isStrict()) error(\"E008\");\n    } else if (!state.option.evil && left && left.value === \"document\" && (m === \"write\" || m === \"writeln\")) {\n      warning(\"W060\", left);\n    }\n\n    if (!state.option.evil && (m === \"eval\" || m === \"execScript\")) {\n      if (isGlobalEval(left, state)) {\n        warning(\"W061\");\n      }\n    }\n\n    return that;\n  }, 160, true);\n  infix(\"?.\", function (context, left, that) {\n    if (!state.inES11()) {\n      warning(\"W119\", state.tokens.curr, \"Optional chaining\", \"11\");\n    }\n\n    if (checkPunctuator(state.tokens.next, \"[\")) {\n      that.left = left;\n      advance();\n      that.right = state.tokens.curr.led(context, left);\n    } else if (checkPunctuator(state.tokens.next, \"(\")) {\n      that.left = left;\n      advance();\n      that.right = state.tokens.curr.led(context, left);\n      that.exps = true;\n    } else {\n      state.syntax[\".\"].led.call(that, context, left);\n    }\n\n    if (state.tokens.next.type === \"(template)\") {\n      error(\"E024\", state.tokens.next, \"`\");\n    }\n\n    return that;\n  }, 160, true);\n  /**\n   * Determine if a CallExpression's \"base\" is a type of expression commonly\n   * used in this position.\n   *\n   * @param {token} token - token describing the \"base\" of the CallExpression\n   * @returns {boolean}\n   */\n\n  function isTypicalCallExpression(token) {\n    return token.identifier || token.id === \".\" || token.id === \"[\" || token.id === \"=>\" || token.id === \"(\" || token.id === \"&&\" || token.id === \"||\" || token.id === \"?\" || token.id === \"async\" || token.id === \"?.\" || state.inES6() && token[\"(name)\"];\n  }\n\n  infix(\"(\", function (context, left, that) {\n    if (state.option.immed && left && !left.immed && left.id === \"function\") {\n      warning(\"W062\");\n    }\n\n    if (state.option.asi && checkPunctuators(state.tokens.prev, [\")\", \"]\"]) && !sameLine(state.tokens.prev, state.tokens.curr)) {\n      warning(\"W014\", state.tokens.curr, state.tokens.curr.id);\n    }\n\n    var n = 0;\n    var p = [];\n\n    if (left) {\n      if (left.type === \"(identifier)\") {\n        var newcapRe = /^[A-Z]([A-Z0-9_$]*[a-z][A-Za-z0-9_$]*)?$/;\n        var newcapIgnore = [\"Array\", \"Boolean\", \"Date\", \"Error\", \"Function\", \"Number\", \"Object\", \"RegExp\", \"String\", \"Symbol\"];\n\n        if (newcapRe.test(left.value) && newcapIgnore.indexOf(left.value) === -1) {\n          if (left.value === \"Math\") {\n            /* istanbul ignore next */\n            warning(\"W063\", left);\n          } else if (state.option.newcap) {\n            warning(\"W064\", left);\n          }\n        }\n      }\n    }\n\n    if (state.tokens.next.id !== \")\") {\n      for (;;) {\n        spreadrest(\"spread\");\n        p[p.length] = expression(context, 10);\n        n += 1;\n\n        if (state.tokens.next.id !== \",\") {\n          break;\n        }\n\n        advance(\",\");\n        checkComma({\n          allowTrailing: true\n        });\n\n        if (state.tokens.next.id === \")\") {\n          if (!state.inES8()) {\n            warning(\"W119\", state.tokens.curr, \"Trailing comma in arguments lists\", \"8\");\n          }\n\n          break;\n        }\n      }\n    }\n\n    advance(\")\");\n\n    if (typeof left === \"object\") {\n      if (!state.inES5() && left.value === \"parseInt\" && n === 1) {\n        warning(\"W065\", state.tokens.curr);\n      }\n\n      if (!state.option.evil) {\n        if (left.value === \"eval\" || left.value === \"Function\" || left.value === \"execScript\") {\n          warning(\"W061\", left); // This conditional expression was initially implemented with a typo\n          // which prevented the branch's execution in all cases. While\n          // enabling the code will produce behavior that is consistent with\n          // the other forms of code evaluation that follow, such a change is\n          // also technically incompatable with prior versions of JSHint (due\n          // to the fact that the behavior was never formally documented). This\n          // branch should be enabled as part of a major release.\n          //if (p[0] && p[0].id === \"(string)\") {\n          //  addEvalCode(left, p[0]);\n          //}\n        } else if (p[0] && p[0].id === \"(string)\" && (left.value === \"setTimeout\" || left.value === \"setInterval\")) {\n          warning(\"W066\", left);\n          addEvalCode(left, p[0]); // window.setTimeout/setInterval\n        } else if (p[0] && p[0].id === \"(string)\" && left.value === \".\" && left.left.value === \"window\" && (left.right === \"setTimeout\" || left.right === \"setInterval\")) {\n          warning(\"W066\", left);\n          addEvalCode(left, p[0]);\n        }\n      }\n\n      if (!isTypicalCallExpression(left)) {\n        warning(\"W067\", that);\n      }\n    }\n\n    that.left = left;\n    return that;\n  }, 155, true).exps = true;\n\n  function peekThroughParens(parens) {\n    var pn = state.tokens.next;\n    var i = -1;\n    var pn1;\n\n    do {\n      if (pn.value === \"(\") {\n        parens += 1;\n      } else if (pn.value === \")\") {\n        parens -= 1;\n      }\n\n      i += 1;\n      pn1 = pn;\n      pn = peek(i);\n    } while (!(parens === 0 && pn1.value === \")\") && pn.type !== \"(end)\");\n\n    return pn;\n  }\n\n  prefix(\"(\", function (context, rbp) {\n    var ret, triggerFnExpr, first, last;\n    var opening = state.tokens.curr;\n    var preceeding = state.tokens.prev;\n    var isNecessary = !state.option.singleGroups;\n    var pn = peekThroughParens(1);\n\n    if (state.tokens.next.id === \"function\") {\n      triggerFnExpr = state.tokens.next.immed = true;\n    } // If the balanced grouping operator is followed by a \"fat arrow\", the\n    // current token marks the beginning of a \"fat arrow\" function and parsing\n    // should proceed accordingly.\n\n\n    if (pn.value === \"=>\") {\n      pn.funct = doFunction(context, {\n        type: \"arrow\",\n        parsedOpening: true\n      });\n      return pn;\n    } // The ECMA262 grammar requires an expression between the \"opening\n    // parenthesis\" and \"close parenthesis\" tokens of the grouping operator.\n    // However, the \"ignore\" directive is commonly used to inject values that\n    // are not included in the token stream. For example:\n    //\n    //     return (\n    //       /*jshint ignore:start */\n    //       <div></div>\n    //       /*jshint ignore:end */\n    //     );\n    //\n    // The \"empty\" grouping operator is permitted in order to tolerate this\n    // pattern.\n\n\n    if (state.tokens.next.id === \")\") {\n      advance(\")\");\n      return;\n    }\n\n    ret = expression(context, 0);\n    advance(\")\", this);\n\n    if (!ret) {\n      return;\n    }\n\n    ret.paren = true;\n\n    if (state.option.immed && ret && ret.id === \"function\") {\n      if (state.tokens.next.id !== \"(\" && state.tokens.next.id !== \".\" && state.tokens.next.id !== \"[\") {\n        warning(\"W068\", this);\n      }\n    }\n\n    if (ret.id === \",\") {\n      first = ret.left;\n\n      while (first.id === \",\") {\n        first = first.left;\n      }\n\n      last = ret.right;\n    } else {\n      first = last = ret;\n\n      if (!isNecessary) {\n        // async functions are identified after parsing due to the complexity\n        // of disambiguating the `async` keyword.\n        if (!triggerFnExpr) {\n          triggerFnExpr = ret.id === \"async\";\n        }\n\n        isNecessary = // Used to distinguish from an ExpressionStatement which may not\n        // begin with the `{` and `function` tokens\n        opening.beginsStmt && (ret.id === \"{\" || triggerFnExpr) || // Used to signal that a function expression is being supplied to\n        // some other operator.\n        triggerFnExpr && ( // For parenthesis wrapping a function expression to be considered\n        // necessary, the grouping operator should be the left-hand-side of\n        // some other operator--either within the parenthesis or directly\n        // following them.\n        !isEndOfExpr() || state.tokens.prev.id !== \"}\") || // Used to demarcate an arrow function as the left-hand side of some\n        // operator.\n        ret.id === \"=>\" && !isEndOfExpr() || // Used as the return value of a single-statement arrow function\n        ret.id === \"{\" && preceeding.id === \"=>\" || // Used to cover a unary expression as the left-hand side of the\n        // exponentiation operator\n        beginsUnaryExpression(ret) && state.tokens.next.id === \"**\" || // Used to cover a logical operator as the right-hand side of the\n        // nullish coalescing operator\n        preceeding.id === \"??\" && (ret.id === \"&&\" || ret.id === \"||\") || // Used to delineate an integer number literal from a dereferencing\n        // punctuator (otherwise interpreted as a decimal point)\n        ret.type === \"(number)\" && checkPunctuator(pn, \".\") && /^\\d+$/.test(ret.value) || // Used to wrap object destructuring assignment\n        opening.beginsStmt && ret.id === \"=\" && ret.left.id === \"{\" || // Used to allow optional chaining with other language features which\n        // are otherwise restricted.\n        ret.id === \"?.\" && (preceeding.id === \"new\" || state.tokens.next.type === \"(template)\");\n      }\n    } // The operator may be necessary to override the default binding power of\n    // neighboring operators (whenever there is an operator in use within the\n    // first expression *or* the current group contains multiple expressions)\n\n\n    if (!isNecessary && (isOperator(first) || first !== last)) {\n      isNecessary = rbp > first.lbp || rbp > 0 && rbp === first.lbp || !isEndOfExpr() && last.rbp < state.tokens.next.lbp;\n    }\n\n    if (!isNecessary) {\n      warning(\"W126\", opening);\n    }\n\n    return ret;\n  });\n  application(\"=>\").rbp = 161;\n  infix(\"[\", function (context, left, that) {\n    var e, s, canUseDot;\n\n    if (state.option.asi && checkPunctuators(state.tokens.prev, [\")\", \"]\"]) && !sameLine(state.tokens.prev, state.tokens.curr)) {\n      warning(\"W014\", state.tokens.curr, state.tokens.curr.id);\n    }\n\n    e = expression(context & ~prodParams.noin, 0);\n\n    if (e && e.type === \"(string)\") {\n      if (!state.option.evil && (e.value === \"eval\" || e.value === \"execScript\")) {\n        if (isGlobalEval(left, state)) {\n          warning(\"W061\");\n        }\n      }\n\n      countMember(e.value);\n\n      if (!state.option.sub && reg.identifier.test(e.value)) {\n        s = state.syntax[e.value];\n\n        if (s) {\n          canUseDot = !isReserved(context, s);\n        } else {\n          // This branch exists to preserve legacy behavior with version 2.9.5\n          // and earlier. In those releases, `eval` and `arguments` were\n          // incorrectly interpreted as reserved keywords, so Member\n          // Expressions such as `object[\"eval\"]` did not trigger warning W069.\n          //\n          // TODO: Remove in JSHint 3\n          canUseDot = e.value !== \"eval\" && e.value !== \"arguments\";\n        }\n\n        if (canUseDot) {\n          warning(\"W069\", state.tokens.prev, e.value);\n        }\n      }\n    }\n\n    advance(\"]\", that);\n\n    if (e && e.value === \"hasOwnProperty\" && state.tokens.next.value === \"=\") {\n      warning(\"W001\");\n    }\n\n    that.left = left;\n    that.right = e;\n    return that;\n  }, 160, true);\n\n  function comprehensiveArrayExpression(context) {\n    var res = {};\n    res.exps = true;\n    state.funct[\"(comparray)\"].stack(); // Handle reversed for expressions, used in spidermonkey\n\n    var reversed = false;\n\n    if (state.tokens.next.value !== \"for\") {\n      reversed = true;\n\n      if (!state.inMoz()) {\n        warning(\"W116\", state.tokens.next, \"for\", state.tokens.next.value);\n      }\n\n      state.funct[\"(comparray)\"].setState(\"use\");\n      res.right = expression(context, 10);\n    }\n\n    advance(\"for\");\n\n    if (state.tokens.next.value === \"each\") {\n      advance(\"each\");\n\n      if (!state.inMoz()) {\n        warning(\"W118\", state.tokens.curr, \"for each\");\n      }\n    }\n\n    advance(\"(\");\n    state.funct[\"(comparray)\"].setState(\"define\");\n    res.left = expression(context, 130);\n\n    if (_.includes([\"in\", \"of\"], state.tokens.next.value)) {\n      advance();\n    } else {\n      /* istanbul ignore next */\n      error(\"E045\", state.tokens.curr);\n    }\n\n    state.funct[\"(comparray)\"].setState(\"generate\");\n    expression(context, 10);\n    advance(\")\");\n\n    if (state.tokens.next.value === \"if\") {\n      advance(\"if\");\n      advance(\"(\");\n      state.funct[\"(comparray)\"].setState(\"filter\");\n      expression(context, 10);\n      advance(\")\");\n    }\n\n    if (!reversed) {\n      state.funct[\"(comparray)\"].setState(\"use\");\n      res.right = expression(context, 10);\n    }\n\n    advance(\"]\");\n    state.funct[\"(comparray)\"].unstack();\n    return res;\n  }\n\n  prefix(\"[\", function (context) {\n    var blocktype = lookupBlockType();\n\n    if (blocktype.isCompArray) {\n      if (!state.option.esnext && !state.inMoz()) {\n        warning(\"W118\", state.tokens.curr, \"array comprehension\");\n      }\n\n      return comprehensiveArrayExpression(context);\n    } else if (blocktype.isDestAssign) {\n      this.destructAssign = destructuringPattern(context, {\n        openingParsed: true,\n        assignment: true\n      });\n      return this;\n    }\n\n    var b = !sameLine(state.tokens.curr, state.tokens.next);\n    this.first = [];\n\n    if (b) {\n      indent += state.option.indent;\n\n      if (state.tokens.next.from === indent + state.option.indent) {\n        /* istanbul ignore next */\n        indent += state.option.indent;\n      }\n    }\n\n    while (state.tokens.next.id !== \"(end)\") {\n      while (state.tokens.next.id === \",\") {\n        if (!state.option.elision) {\n          if (!state.inES5()) {\n            // Maintain compat with old options --- ES5 mode without\n            // elision=true will warn once per comma\n            warning(\"W070\");\n          } else {\n            warning(\"W128\");\n\n            do {\n              advance(\",\");\n            } while (state.tokens.next.id === \",\");\n\n            continue;\n          }\n        }\n\n        advance(\",\");\n      }\n\n      if (state.tokens.next.id === \"]\") {\n        break;\n      }\n\n      spreadrest(\"spread\");\n      this.first.push(expression(context, 10));\n\n      if (state.tokens.next.id === \",\") {\n        advance(\",\");\n        checkComma({\n          allowTrailing: true\n        });\n\n        if (state.tokens.next.id === \"]\" && !state.inES5()) {\n          warning(\"W070\", state.tokens.curr);\n          break;\n        }\n      } else {\n        if (state.option.trailingcomma && state.inES5()) {\n          warningAt(\"W140\", state.tokens.curr.line, state.tokens.curr.character);\n        }\n\n        break;\n      }\n    }\n\n    if (b) {\n      indent -= state.option.indent;\n    }\n\n    advance(\"]\", this);\n    return this;\n  });\n\n  function isMethod() {\n    return !!state.funct[\"(method)\"];\n  }\n  /**\n   * Retrieve the value of the next token if it is a valid LiteralPropertyName\n   * and optionally advance the parser.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   *\n   * @returns {string|undefined} - the value of the identifier, if present\n   */\n\n\n  function propertyName(context) {\n    var id = optionalidentifier(context, true);\n\n    if (!id) {\n      if (state.tokens.next.id === \"(string)\") {\n        id = state.tokens.next.value;\n        advance();\n      } else if (state.tokens.next.id === \"(number)\") {\n        id = state.tokens.next.value.toString();\n        advance();\n      }\n    }\n\n    if (id === \"hasOwnProperty\") {\n      warning(\"W001\");\n    }\n\n    return id;\n  }\n  /**\n   * @param {Number} context The parsing context\n   * @param {Object} [options]\n   * @param {token} [options.loneArg] The argument to the function in cases\n   *                                  where it was defined using the\n   *                                  single-argument shorthand.\n   * @param {bool} [options.parsedOpening] Whether the opening parenthesis has\n   *                                       already been parsed.\n   *\n   * @returns {{ arity: number, params: Array.<string>, isSimple: boolean }}\n   */\n\n\n  function functionparams(context, options) {\n    var next;\n    var paramsIds = [];\n    var ident;\n    var tokens = [];\n    var t;\n    var pastDefault = false;\n    var pastRest = false;\n    var arity = 0;\n    var loneArg = options && options.loneArg;\n    var hasDestructuring = false;\n\n    if (loneArg && loneArg.identifier === true) {\n      state.funct[\"(scope)\"].addParam(loneArg.value, loneArg);\n      return {\n        arity: 1,\n        params: [loneArg.value],\n        isSimple: true\n      };\n    }\n\n    next = state.tokens.next;\n\n    if (!options || !options.parsedOpening) {\n      advance(\"(\");\n    }\n\n    if (state.tokens.next.id === \")\") {\n      advance(\")\");\n      return;\n    }\n\n    function addParam(addParamArgs) {\n      state.funct[\"(scope)\"].addParam.apply(state.funct[\"(scope)\"], addParamArgs);\n    }\n\n    for (;;) {\n      arity++; // are added to the param scope\n\n      var currentParams = [];\n      pastRest = spreadrest(\"rest\");\n\n      if (_.includes([\"{\", \"[\"], state.tokens.next.id)) {\n        hasDestructuring = true;\n        tokens = destructuringPattern(context);\n\n        for (t in tokens) {\n          t = tokens[t];\n\n          if (t.id) {\n            paramsIds.push(t.id);\n            currentParams.push([t.id, t.token]);\n          }\n        }\n      } else {\n        ident = identifier(context);\n\n        if (ident) {\n          paramsIds.push(ident);\n          currentParams.push([ident, state.tokens.curr]);\n        } else {\n          // Skip invalid parameter.\n          while (!checkPunctuators(state.tokens.next, [\",\", \")\"])) {\n            advance();\n          }\n        }\n      } // It is valid to have a regular argument after a default argument\n      // since undefined can be used for missing parameters. Still warn as it is\n      // a possible code smell.\n\n\n      if (pastDefault) {\n        if (state.tokens.next.id !== \"=\") {\n          error(\"W138\", state.tokens.curr);\n        }\n      }\n\n      if (state.tokens.next.id === \"=\") {\n        if (!state.inES6()) {\n          warning(\"W119\", state.tokens.next, \"default parameters\", \"6\");\n        }\n\n        if (pastRest) {\n          error(\"E062\", state.tokens.next);\n        }\n\n        advance(\"=\");\n        pastDefault = true;\n        expression(context, 10);\n      } // now we have evaluated the default expression, add the variable to the param scope\n\n\n      currentParams.forEach(addParam);\n\n      if (state.tokens.next.id === \",\") {\n        if (pastRest) {\n          warning(\"W131\", state.tokens.next);\n        }\n\n        advance(\",\");\n        checkComma({\n          allowTrailing: true\n        });\n      }\n\n      if (state.tokens.next.id === \")\") {\n        if (state.tokens.curr.id === \",\" && !state.inES8()) {\n          warning(\"W119\", state.tokens.curr, \"Trailing comma in function parameters\", \"8\");\n        }\n\n        advance(\")\", next);\n        return {\n          arity: arity,\n          params: paramsIds,\n          isSimple: !hasDestructuring && !pastRest && !pastDefault\n        };\n      }\n    }\n  }\n  /**\n   * Factory function for creating objects used to track statistics of function\n   * literals.\n   *\n   * @param {string} name - the identifier name to associate with the function\n   * @param {object} [token] - token responsible for creating the function\n   *                           object\n   * @param {object} [overwrites] - a collection of properties that should\n   *                                override the corresponding default value of\n   *                                the new \"functor\" object\n   */\n\n\n  function functor(name, token, overwrites) {\n    var funct = {\n      \"(name)\": name,\n      \"(breakage)\": 0,\n      \"(loopage)\": 0,\n      // The strictness of the function body is tracked via a dedicated\n      // property (as opposed to via the global `state` object) so that the\n      // value can be referenced after the body has been fully parsed (i.e.\n      // when validating the identifier used in function declarations and\n      // function expressions).\n      \"(isStrict)\": \"unknown\",\n      \"(global)\": false,\n      \"(line)\": null,\n      \"(character)\": null,\n      \"(metrics)\": null,\n      \"(statement)\": null,\n      \"(context)\": null,\n      \"(scope)\": null,\n      \"(comparray)\": null,\n      \"(yielded)\": null,\n      \"(arrow)\": null,\n      \"(async)\": null,\n      \"(params)\": null\n    };\n\n    if (token) {\n      _.extend(funct, {\n        \"(line)\": token.line,\n        \"(character)\": token.character,\n        \"(metrics)\": createMetrics(token)\n      });\n    }\n\n    _.extend(funct, overwrites);\n\n    if (funct[\"(context)\"]) {\n      funct[\"(scope)\"] = funct[\"(context)\"][\"(scope)\"];\n      funct[\"(comparray)\"] = funct[\"(context)\"][\"(comparray)\"];\n    }\n\n    return funct;\n  }\n  /**\n   * Determine if the parser has begun parsing executable code.\n   *\n   * @param {Token} funct - The current \"functor\" token\n   *\n   * @returns {boolean}\n   */\n\n\n  function hasParsedCode(funct) {\n    return funct[\"(global)\"] && !funct[\"(verb)\"];\n  }\n  /**\n   * This function is used as both a null-denotation method *and* a\n   * left-denotation method, meaning the first parameter is overloaded.\n   */\n\n\n  function doTemplateLiteral(context, leftOrRbp) {\n    // ASSERT: this.type === \"(template)\"\n    // jshint validthis: true\n    var ctx = this.context;\n    var noSubst = this.noSubst;\n    var depth = this.depth;\n    var left = typeof leftOrRbp === \"number\" ? null : leftOrRbp;\n\n    if (!noSubst) {\n      while (!end()) {\n        if (!state.tokens.next.template || state.tokens.next.depth > depth) {\n          expression(context, 0); // should probably have different rbp?\n        } else {\n          // skip template start / middle\n          advance();\n        }\n      }\n    }\n\n    return {\n      id: \"(template)\",\n      type: \"(template)\",\n      tag: left\n    };\n\n    function end() {\n      if (state.tokens.curr.template && state.tokens.curr.tail && state.tokens.curr.context === ctx) {\n        /* istanbul ignore next */\n        return true;\n      }\n\n      var complete = state.tokens.next.template && state.tokens.next.tail && state.tokens.next.context === ctx;\n      if (complete) advance();\n      return complete || state.tokens.next.isUnclosed;\n    }\n  }\n  /**\n   * Parse a function literal.\n   *\n   * @param {Number} context The parsing context\n   * @param {Object} [options]\n   * @param {string} [options.name] The identifier belonging to the function (if\n   *                                any)\n   * @param {token} [options.statement] The statement that triggered creation\n   *                                    of the current function.\n   * @param {string} [options.type] If specified, either \"generator\" or \"arrow\"\n   * @param {token} [options.loneArg] The argument to the function in cases\n   *                                  where it was defined using the\n   *                                  single-argument shorthand\n   * @param {bool} [options.parsedOpening] Whether the opening parenthesis has\n   *                                       already been parsed\n   * @param {string} [options.classExprBinding] Define a function with this\n   *                                            identifier in the new function's\n   *                                            scope, mimicking the bahavior of\n   *                                            class expression names within\n   *                                            the body of member functions.\n   */\n\n\n  function doFunction(context, options) {\n    var f, token, name, statement, classExprBinding, isGenerator, isArrow, isMethod, ignoreLoopFunc;\n    var oldOption = state.option;\n    var oldIgnored = state.ignored;\n    var isAsync = context & prodParams.preAsync;\n\n    if (options) {\n      name = options.name;\n      statement = options.statement;\n      classExprBinding = options.classExprBinding;\n      isGenerator = options.type === \"generator\";\n      isArrow = options.type === \"arrow\";\n      isMethod = options.isMethod;\n      ignoreLoopFunc = options.ignoreLoopFunc;\n    }\n\n    context &= ~prodParams.noin;\n    context &= ~prodParams.tryClause;\n\n    if (isAsync) {\n      context |= prodParams.async;\n    } else {\n      context &= ~prodParams.async;\n    }\n\n    if (isGenerator) {\n      context |= prodParams.yield;\n    } else if (!isArrow) {\n      context &= ~prodParams.yield;\n    }\n\n    context &= ~prodParams.preAsync;\n    state.option = Object.create(state.option);\n    state.ignored = Object.create(state.ignored);\n    state.funct = functor(name || state.nameStack.infer(), state.tokens.next, {\n      \"(statement)\": statement,\n      \"(context)\": state.funct,\n      \"(arrow)\": isArrow,\n      \"(method)\": isMethod,\n      \"(async)\": isAsync\n    });\n    f = state.funct;\n    token = state.tokens.curr;\n    functions.push(state.funct); // So that the function is available to itself and referencing itself is not\n    // seen as a closure, add the function name to a new scope, but do not\n    // test for unused (unused: false)\n    // it is a new block scope so that params can override it, it can be block scoped\n    // but declarations inside the function don't cause already declared error\n\n    state.funct[\"(scope)\"].stack(\"functionouter\");\n    var internallyAccessibleName = !isMethod && (name || classExprBinding);\n\n    if (internallyAccessibleName) {\n      state.funct[\"(scope)\"].block.add(internallyAccessibleName, classExprBinding ? \"class\" : \"function\", state.tokens.curr, false);\n    }\n\n    if (!isArrow) {\n      state.funct[\"(scope)\"].funct.add(\"arguments\", \"var\", token, false);\n    } // create the param scope (params added in functionparams)\n\n\n    state.funct[\"(scope)\"].stack(\"functionparams\");\n    var paramsInfo = functionparams(context, options);\n\n    if (paramsInfo) {\n      state.funct[\"(params)\"] = paramsInfo.params;\n      state.funct[\"(hasSimpleParams)\"] = paramsInfo.isSimple;\n      state.funct[\"(metrics)\"].arity = paramsInfo.arity;\n      state.funct[\"(metrics)\"].verifyMaxParametersPerFunction();\n    } else {\n      state.funct[\"(params)\"] = [];\n      state.funct[\"(metrics)\"].arity = 0;\n      state.funct[\"(hasSimpleParams)\"] = true;\n    }\n\n    if (isArrow) {\n      context &= ~prodParams.yield;\n\n      if (!state.inES6(true)) {\n        warning(\"W119\", state.tokens.curr, \"arrow function syntax (=>)\", \"6\");\n      }\n\n      if (!options.loneArg) {\n        advance(\"=>\");\n      }\n    }\n\n    block(context, false, true, true, isArrow);\n\n    if (!state.option.noyield && isGenerator && !state.funct[\"(yielded)\"]) {\n      warning(\"W124\", state.tokens.curr);\n    }\n\n    state.funct[\"(metrics)\"].verifyMaxStatementsPerFunction();\n    state.funct[\"(metrics)\"].verifyMaxComplexityPerFunction();\n    state.funct[\"(unusedOption)\"] = state.option.unused;\n    state.option = oldOption;\n    state.ignored = oldIgnored;\n    state.funct[\"(last)\"] = state.tokens.curr.line;\n    state.funct[\"(lastcharacter)\"] = state.tokens.curr.character; // unstack the params scope\n\n    state.funct[\"(scope)\"].unstack(); // also does usage and label checks\n    // unstack the function outer stack\n\n    state.funct[\"(scope)\"].unstack();\n    state.funct = state.funct[\"(context)\"];\n\n    if (!ignoreLoopFunc && !state.option.loopfunc && state.funct[\"(loopage)\"]) {\n      // If the function we just parsed accesses any non-local variables\n      // trigger a warning. Otherwise, the function is safe even within\n      // a loop.\n      if (f[\"(outerMutables)\"]) {\n        warning(\"W083\", token, f[\"(outerMutables)\"].join(\", \"));\n      }\n    }\n\n    return f;\n  }\n\n  function createMetrics(functionStartToken) {\n    return {\n      statementCount: 0,\n      nestedBlockDepth: -1,\n      ComplexityCount: 1,\n      arity: 0,\n      verifyMaxStatementsPerFunction: function verifyMaxStatementsPerFunction() {\n        if (state.option.maxstatements && this.statementCount > state.option.maxstatements) {\n          warning(\"W071\", functionStartToken, this.statementCount);\n        }\n      },\n      verifyMaxParametersPerFunction: function verifyMaxParametersPerFunction() {\n        if (_.isNumber(state.option.maxparams) && this.arity > state.option.maxparams) {\n          warning(\"W072\", functionStartToken, this.arity);\n        }\n      },\n      verifyMaxNestedBlockDepthPerFunction: function verifyMaxNestedBlockDepthPerFunction() {\n        if (state.option.maxdepth && this.nestedBlockDepth > 0 && this.nestedBlockDepth === state.option.maxdepth + 1) {\n          warning(\"W073\", null, this.nestedBlockDepth);\n        }\n      },\n      verifyMaxComplexityPerFunction: function verifyMaxComplexityPerFunction() {\n        var max = state.option.maxcomplexity;\n        var cc = this.ComplexityCount;\n\n        if (max && cc > max) {\n          warning(\"W074\", functionStartToken, cc);\n        }\n      }\n    };\n  }\n\n  function increaseComplexityCount() {\n    state.funct[\"(metrics)\"].ComplexityCount += 1;\n  } // Parse assignments that were found instead of conditionals.\n  // For example: if (a = 1) { ... }\n\n\n  function checkCondAssignment(token) {\n    if (!token || token.paren) {\n      return;\n    }\n\n    if (token.id === \",\") {\n      checkCondAssignment(token.right);\n      return;\n    }\n\n    switch (token.id) {\n      case \"=\":\n      case \"+=\":\n      case \"-=\":\n      case \"*=\":\n      case \"%=\":\n      case \"&=\":\n      case \"|=\":\n      case \"^=\":\n      case \"/=\":\n        if (!state.option.boss) {\n          warning(\"W084\", token);\n        }\n\n    }\n  }\n  /**\n   * Validate the properties defined within an object literal or class body.\n   * See the `saveAccessor` and `saveProperty` functions for more detail.\n   *\n   * @param {object} props - Collection of objects describing the properties\n   *                         encountered\n   */\n\n\n  function checkProperties(props) {\n    // Check for lonely setters if in the ES5 mode.\n    if (state.inES5()) {\n      for (var name in props) {\n        if (props[name] && props[name].setterToken && !props[name].getterToken && !props[name].static) {\n          warning(\"W078\", props[name].setterToken);\n        }\n      }\n    }\n  }\n\n  function metaProperty(context, name, c) {\n    if (checkPunctuator(state.tokens.next, \".\")) {\n      var left = state.tokens.curr.id;\n      advance(\".\");\n      var id = identifier(context);\n      state.tokens.curr.isMetaProperty = true;\n\n      if (name !== id) {\n        error(\"E057\", state.tokens.prev, left, id);\n      } else {\n        c();\n      }\n\n      return state.tokens.curr;\n    }\n  } //object literals\n\n\n  (function (x) {\n    x.nud = function (context) {\n      var b,\n          f,\n          i,\n          params,\n          t,\n          isGeneratorMethod = false,\n          nextVal;\n      var props = Object.create(null); // All properties, including accessors\n\n      var isAsyncMethod = false;\n      b = !sameLine(state.tokens.curr, state.tokens.next);\n\n      if (b) {\n        indent += state.option.indent;\n\n        if (state.tokens.next.from === indent + state.option.indent) {\n          /* istanbul ignore next */\n          indent += state.option.indent;\n        }\n      }\n\n      var blocktype = lookupBlockType();\n\n      if (blocktype.isDestAssign) {\n        this.destructAssign = destructuringPattern(context, {\n          openingParsed: true,\n          assignment: true\n        });\n        return this;\n      }\n\n      state.inObjectBody = true;\n\n      for (;;) {\n        if (state.tokens.next.id === \"}\") {\n          break;\n        }\n\n        nextVal = state.tokens.next.value;\n\n        if (state.tokens.next.identifier && (peekIgnoreEOL().id === \",\" || peekIgnoreEOL().id === \"}\")) {\n          if (!state.inES6()) {\n            warning(\"W104\", state.tokens.next, \"object short notation\", \"6\");\n          }\n\n          t = expression(context, 10);\n          i = t.value;\n          saveProperty(props, i, t);\n        } else if (peek().id !== \":\" && (nextVal === \"get\" || nextVal === \"set\")) {\n          advance(nextVal);\n\n          if (!state.inES5()) {\n            error(\"E034\");\n          }\n\n          if (state.tokens.next.id === \"[\") {\n            i = computedPropertyName(context);\n          } else {\n            i = propertyName(context); // ES6 allows for get() {...} and set() {...} method\n            // definition shorthand syntax, so we don't produce an error\n            // if linting ECMAScript 6 code.\n\n            if (!i && !state.inES6()) {\n              error(\"E035\");\n            }\n          } // We don't want to save this getter unless it's an actual getter\n          // and not an ES6 concise method\n\n\n          if (i) {\n            saveAccessor(nextVal, props, i, state.tokens.curr);\n          }\n\n          t = state.tokens.next;\n          f = doFunction(context, {\n            isMethod: true\n          });\n          params = f[\"(params)\"]; // Don't warn about getter/setter pairs if this is an ES6 concise method\n\n          if (nextVal === \"get\" && i && params.length) {\n            warning(\"W076\", t, params[0], i);\n          } else if (nextVal === \"set\" && i && f[\"(metrics)\"].arity !== 1) {\n            warning(\"W077\", t, i);\n          }\n        } else if (spreadrest(\"spread\")) {\n          if (!state.inES9()) {\n            warning(\"W119\", state.tokens.next, \"object spread property\", \"9\");\n          }\n\n          expression(context, 10);\n        } else {\n          if (state.tokens.next.id === \"async\" && !checkPunctuators(peek(), [\"(\", \":\"])) {\n            if (!state.inES8()) {\n              warning(\"W119\", state.tokens.next, \"async functions\", \"8\");\n            }\n\n            isAsyncMethod = true;\n            advance();\n            nolinebreak(state.tokens.curr);\n          } else {\n            isAsyncMethod = false;\n          }\n\n          if (state.tokens.next.value === \"*\" && state.tokens.next.type === \"(punctuator)\") {\n            if (isAsyncMethod && !state.inES9()) {\n              warning(\"W119\", state.tokens.next, \"async generators\", \"9\");\n            } else if (!state.inES6()) {\n              warning(\"W104\", state.tokens.next, \"generator functions\", \"6\");\n            }\n\n            advance(\"*\");\n            isGeneratorMethod = true;\n          } else {\n            isGeneratorMethod = false;\n          }\n\n          if (state.tokens.next.id === \"[\") {\n            i = computedPropertyName(context);\n            state.nameStack.set(i);\n          } else {\n            state.nameStack.set(state.tokens.next);\n            i = propertyName(context);\n            saveProperty(props, i, state.tokens.next);\n\n            if (typeof i !== \"string\") {\n              break;\n            }\n          }\n\n          if (state.tokens.next.value === \"(\") {\n            if (!state.inES6()) {\n              warning(\"W104\", state.tokens.curr, \"concise methods\", \"6\");\n            }\n\n            doFunction(isAsyncMethod ? context | prodParams.preAsync : context, {\n              isMethod: true,\n              type: isGeneratorMethod ? \"generator\" : null\n            });\n          } else {\n            advance(\":\");\n            expression(context, 10);\n          }\n        }\n\n        countMember(i);\n\n        if (state.tokens.next.id === \",\") {\n          advance(\",\");\n          checkComma({\n            allowTrailing: true,\n            property: true\n          });\n\n          if (state.tokens.next.id === \",\") {\n            /* istanbul ignore next */\n            warning(\"W070\", state.tokens.curr);\n          } else if (state.tokens.next.id === \"}\" && !state.inES5()) {\n            warning(\"W070\", state.tokens.curr);\n          }\n        } else {\n          if (state.option.trailingcomma && state.inES5()) {\n            warningAt(\"W140\", state.tokens.curr.line, state.tokens.curr.character);\n          }\n\n          break;\n        }\n      }\n\n      if (b) {\n        indent -= state.option.indent;\n      }\n\n      advance(\"}\", this);\n      checkProperties(props);\n      state.inObjectBody = false;\n      return this;\n    };\n\n    x.fud = function () {\n      /* istanbul ignore next */\n      error(\"E036\", state.tokens.curr);\n    };\n  })(delim(\"{\"));\n\n  function destructuringPattern(context, options) {\n    var isAssignment = options && options.assignment;\n    context &= ~prodParams.noin;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, isAssignment ? \"destructuring assignment\" : \"destructuring binding\", \"6\");\n    }\n\n    return destructuringPatternRecursive(context, options);\n  }\n\n  function destructuringPatternRecursive(context, options) {\n    var ids, idx;\n    var identifiers = [];\n    var openingParsed = options && options.openingParsed;\n    var isAssignment = options && options.assignment;\n    var recursiveOptions = isAssignment ? {\n      assignment: isAssignment\n    } : null;\n    var firstToken = openingParsed ? state.tokens.curr : state.tokens.next;\n\n    var nextInnerDE = function nextInnerDE() {\n      var ident;\n\n      if (checkPunctuators(state.tokens.next, [\"[\", \"{\"])) {\n        ids = destructuringPatternRecursive(context, recursiveOptions);\n\n        for (idx = 0; idx < ids.length; idx++) {\n          identifiers.push({\n            id: ids[idx].id,\n            token: ids[idx].token\n          });\n        }\n      } else if (checkPunctuator(state.tokens.next, \",\")) {\n        identifiers.push({\n          id: null,\n          token: state.tokens.curr\n        });\n      } else if (checkPunctuator(state.tokens.next, \"(\")) {\n        advance(\"(\");\n        nextInnerDE();\n        advance(\")\");\n      } else {\n        if (isAssignment) {\n          var assignTarget = expression(context, 20);\n\n          if (assignTarget) {\n            checkLeftSideAssign(context, assignTarget); // if the target was a simple identifier, add it to the list to return\n\n            if (assignTarget.identifier) {\n              ident = assignTarget.value;\n            }\n          }\n        } else {\n          ident = identifier(context);\n        }\n\n        if (ident) {\n          identifiers.push({\n            id: ident,\n            token: state.tokens.curr\n          });\n        }\n      }\n    };\n\n    var assignmentProperty = function assignmentProperty(context) {\n      var id, expr;\n\n      if (checkPunctuator(state.tokens.next, \"[\")) {\n        advance(\"[\");\n        expression(context, 10);\n        advance(\"]\");\n        advance(\":\");\n        nextInnerDE();\n      } else if (state.tokens.next.id === \"(string)\" || state.tokens.next.id === \"(number)\") {\n        advance();\n        advance(\":\");\n        nextInnerDE();\n      } else {\n        // this id will either be the property name or the property name and the assigning identifier\n        var isRest = spreadrest(\"rest\");\n\n        if (isRest) {\n          if (!state.inES9()) {\n            warning(\"W119\", state.tokens.next, \"object rest property\", \"9\");\n          } // Due to visual symmetry with the array rest property (and the early\n          // design of the language feature), developers may mistakenly assume\n          // any expression is valid in this position. If the next token is not\n          // an identifier, attempt to parse an expression and issue an error.\n          // order to recover more gracefully from this condition.\n\n\n          if (state.tokens.next.type === \"(identifier)\") {\n            id = identifier(context);\n          } else {\n            expr = expression(context, 10);\n            error(\"E030\", expr, expr.value);\n          }\n        } else {\n          id = identifier(context);\n        }\n\n        if (!isRest && checkPunctuator(state.tokens.next, \":\")) {\n          advance(\":\");\n          nextInnerDE();\n        } else if (id) {\n          // in this case we are assigning (not declaring), so check assignment\n          if (isAssignment) {\n            checkLeftSideAssign(context, state.tokens.curr);\n          }\n\n          identifiers.push({\n            id: id,\n            token: state.tokens.curr\n          });\n        }\n\n        if (isRest && checkPunctuator(state.tokens.next, \",\")) {\n          warning(\"W130\", state.tokens.next);\n        }\n      }\n    };\n\n    var id, value;\n\n    if (checkPunctuator(firstToken, \"[\")) {\n      if (!openingParsed) {\n        advance(\"[\");\n      }\n\n      if (checkPunctuator(state.tokens.next, \"]\")) {\n        warning(\"W137\", state.tokens.curr);\n      }\n\n      var element_after_rest = false;\n\n      while (!checkPunctuator(state.tokens.next, \"]\")) {\n        var isRest = spreadrest(\"rest\");\n        nextInnerDE();\n\n        if (isRest && !element_after_rest && checkPunctuator(state.tokens.next, \",\")) {\n          warning(\"W130\", state.tokens.next);\n          element_after_rest = true;\n        }\n\n        if (!isRest && checkPunctuator(state.tokens.next, \"=\")) {\n          if (checkPunctuator(state.tokens.prev, \"...\")) {\n            /* istanbul ignore next */\n            advance(\"]\");\n          } else {\n            advance(\"=\");\n          }\n\n          id = state.tokens.prev;\n          value = expression(context, 10);\n\n          if (value && value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n        }\n\n        if (!checkPunctuator(state.tokens.next, \"]\")) {\n          advance(\",\");\n        }\n      }\n\n      advance(\"]\");\n    } else if (checkPunctuator(firstToken, \"{\")) {\n      if (!openingParsed) {\n        advance(\"{\");\n      }\n\n      if (checkPunctuator(state.tokens.next, \"}\")) {\n        warning(\"W137\", state.tokens.curr);\n      }\n\n      while (!checkPunctuator(state.tokens.next, \"}\")) {\n        assignmentProperty(context);\n\n        if (checkPunctuator(state.tokens.next, \"=\")) {\n          advance(\"=\");\n          id = state.tokens.prev;\n          value = expression(context, 10);\n\n          if (value && value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n        }\n\n        if (!checkPunctuator(state.tokens.next, \"}\")) {\n          advance(\",\");\n\n          if (checkPunctuator(state.tokens.next, \"}\")) {\n            // Trailing comma\n            // ObjectBindingPattern: { BindingPropertyList , }\n            break;\n          }\n        }\n      }\n\n      advance(\"}\");\n    }\n\n    return identifiers;\n  }\n\n  function destructuringPatternMatch(tokens, value) {\n    var first = value.first;\n    if (!first) return;\n\n    _.zip(tokens, Array.isArray(first) ? first : [first]).forEach(function (val) {\n      var token = val[0];\n      var value = val[1];\n      if (token && value) token.first = value;else if (token && token.first && !value)\n        /* istanbul ignore next */\n        warning(\"W080\", token.first, token.first.value);\n    });\n  }\n\n  function blockVariableStatement(type, statement, context) {\n    // used for both let and const statements\n    var noin = context & prodParams.noin;\n    var isLet = type === \"let\";\n    var isConst = type === \"const\";\n    var tokens, lone, value, letblock;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, type, \"6\");\n    }\n\n    if (isLet && isMozillaLet()) {\n      advance(\"(\");\n      state.funct[\"(scope)\"].stack();\n      letblock = true;\n      statement.declaration = false;\n    }\n\n    statement.first = [];\n\n    for (;;) {\n      var names = [];\n\n      if (_.includes([\"{\", \"[\"], state.tokens.next.value)) {\n        tokens = destructuringPattern(context);\n        lone = false;\n      } else {\n        tokens = [{\n          id: identifier(context),\n          token: state.tokens.curr\n        }];\n        lone = true;\n      } // A `const` declaration without an initializer is permissible within the\n      // head of for-in and for-of statements. If this binding list is being\n      // parsed as part of a `for` statement of any kind, allow the initializer\n      // to be omitted. Although this may erroneously allow such forms from\n      // \"C-style\" `for` statements (i.e. `for (const x;;) {}`, the `for`\n      // statement logic includes dedicated logic to issue the error for such\n      // cases.\n\n\n      if (!noin && isConst && state.tokens.next.id !== \"=\") {\n        warning(\"E012\", state.tokens.curr, state.tokens.curr.value);\n      }\n\n      for (var t in tokens) {\n        if (tokens.hasOwnProperty(t)) {\n          t = tokens[t]; // It is a Syntax Error if the BoundNames of BindingList contains\n          // \"let\".\n\n          if (t.id === \"let\") {\n            /* istanbul ignore next */\n            warning(\"W024\", t.token, t.id);\n          }\n\n          if (state.funct[\"(scope)\"].block.isGlobal()) {\n            if (predefined[t.id] === false) {\n              warning(\"W079\", t.token, t.id);\n            }\n          }\n\n          if (t.id) {\n            state.funct[\"(scope)\"].addbinding(t.id, {\n              type: type,\n              token: t.token\n            });\n            names.push(t.token);\n          }\n        }\n      }\n\n      if (state.tokens.next.id === \"=\") {\n        statement.hasInitializer = true;\n        advance(\"=\");\n\n        if (!noin && peek(0).id === \"=\" && state.tokens.next.identifier) {\n          warning(\"W120\", state.tokens.next, state.tokens.next.value);\n        }\n\n        var id = state.tokens.prev;\n        value = expression(context, 10);\n\n        if (value) {\n          if (value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n\n          if (!lone) {\n            destructuringPatternMatch(names, value);\n          }\n        }\n      } // Bindings are not immediately initialized in for-in and for-of\n      // statements. As with `const` initializers (described above), the `for`\n      // statement parsing logic includes\n\n\n      if (state.tokens.next.value !== \"in\" && state.tokens.next.value !== \"of\") {\n        for (t in tokens) {\n          if (tokens.hasOwnProperty(t)) {\n            t = tokens[t];\n            state.funct[\"(scope)\"].initialize(t.id);\n          }\n        }\n      }\n\n      statement.first = statement.first.concat(names);\n\n      if (state.tokens.next.id !== \",\") {\n        break;\n      }\n\n      statement.hasComma = true;\n      advance(\",\");\n      checkComma();\n    }\n\n    if (letblock) {\n      advance(\")\");\n      block(context, true, true);\n      statement.block = true;\n      state.funct[\"(scope)\"].unstack();\n    }\n\n    return statement;\n  }\n\n  var conststatement = stmt(\"const\", function (context) {\n    return blockVariableStatement(\"const\", this, context);\n  });\n  conststatement.exps = true;\n  conststatement.declaration = true;\n  /**\n   * Determine if the current `let` token designates the beginning of a \"let\n   * block\" or \"let expression\" as implemented in the Mozilla SpiderMonkey\n   * engine.\n   *\n   * This function will only return `true` if Mozilla extensions have been\n   * enabled. It would be preferable to detect the language feature regardless\n   * of the parser's state because this would allow JSHint to instruct users to\n   * enable the `moz` option where necessary. This is not possible because the\n   * language extension is not compatible with standard JavaScript. For\n   * example, the following program code may describe a \"let block\" or a\n   * function invocation:\n   *\n   *     let(x)\n   *     {\n   *       typeof x;\n   *     }\n   *\n   * @returns {boolean}\n   */\n\n  function isMozillaLet() {\n    return state.tokens.next.id === \"(\" && state.inMoz();\n  }\n\n  var letstatement = stmt(\"let\", function (context) {\n    return blockVariableStatement(\"let\", this, context);\n  });\n\n  letstatement.nud = function (context, rbp) {\n    if (isMozillaLet()) {\n      // create a new block scope we use only for the current expression\n      state.funct[\"(scope)\"].stack();\n      advance(\"(\");\n      state.tokens.prev.fud(context);\n      advance(\")\");\n      expression(context, rbp);\n      state.funct[\"(scope)\"].unstack();\n    } else {\n      this.exps = false;\n      return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n    }\n  };\n\n  letstatement.meta = {\n    es5: true,\n    isFutureReservedWord: false,\n    strictOnly: true\n  };\n  letstatement.exps = true;\n  letstatement.declaration = true;\n\n  letstatement.useFud = function (context) {\n    var next = state.tokens.next;\n    var nextIsBindingName;\n\n    if (this.line !== next.line && !state.inES6()) {\n      return false;\n    } // JSHint generally interprets `let` as a reserved word even though it is\n    // not considered as such by the ECMAScript specification because doing so\n    // simplifies parsing logic. It is special-cased here so that code such as\n    //\n    //     let\n    //     let\n    //\n    // is correctly interpreted as an invalid LexicalBinding. (Without this\n    // consideration, the code above would be parsed as two\n    // IdentifierReferences.)\n\n\n    nextIsBindingName = next.identifier && (!isReserved(context, next) || next.id === \"let\");\n    return nextIsBindingName || checkPunctuators(next, [\"{\", \"[\"]) || isMozillaLet();\n  };\n\n  var varstatement = stmt(\"var\", function (context) {\n    var noin = context & prodParams.noin;\n    var tokens, lone, value, id;\n    this.first = [];\n\n    for (;;) {\n      var names = [];\n\n      if (_.includes([\"{\", \"[\"], state.tokens.next.value)) {\n        tokens = destructuringPattern(context);\n        lone = false;\n      } else {\n        tokens = [];\n        id = identifier(context);\n\n        if (id) {\n          tokens.push({\n            id: id,\n            token: state.tokens.curr\n          });\n        }\n\n        lone = true;\n      }\n\n      if (state.option.varstmt) {\n        warning(\"W132\", this);\n      }\n\n      for (var t in tokens) {\n        if (tokens.hasOwnProperty(t)) {\n          t = tokens[t];\n\n          if (state.funct[\"(global)\"] && !state.impliedClosure()) {\n            if (predefined[t.id] === false) {\n              warning(\"W079\", t.token, t.id);\n            } else if (state.option.futurehostile === false) {\n              if (!state.inES5() && vars.ecmaIdentifiers[5][t.id] === false || !state.inES6() && vars.ecmaIdentifiers[6][t.id] === false) {\n                warning(\"W129\", t.token, t.id);\n              }\n            }\n          }\n\n          if (t.id) {\n            state.funct[\"(scope)\"].addbinding(t.id, {\n              type: \"var\",\n              token: t.token\n            });\n            names.push(t.token);\n          }\n        }\n      }\n\n      if (state.tokens.next.id === \"=\") {\n        this.hasInitializer = true;\n        state.nameStack.set(state.tokens.curr);\n        advance(\"=\");\n\n        if (peek(0).id === \"=\" && state.tokens.next.identifier) {\n          if (!noin && !state.funct[\"(params)\"] || state.funct[\"(params)\"].indexOf(state.tokens.next.value) === -1) {\n            warning(\"W120\", state.tokens.next, state.tokens.next.value);\n          }\n        }\n\n        id = state.tokens.prev;\n        value = expression(context, 10);\n\n        if (value) {\n          if (!state.funct[\"(loopage)\"] && value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n\n          if (!lone) {\n            destructuringPatternMatch(names, value);\n          }\n        }\n      }\n\n      this.first = this.first.concat(names);\n\n      if (state.tokens.next.id !== \",\") {\n        break;\n      }\n\n      this.hasComma = true;\n      advance(\",\");\n      checkComma();\n    }\n\n    return this;\n  });\n  varstatement.exps = true;\n  blockstmt(\"function\", function (context) {\n    var inexport = context & prodParams.export;\n    var generator = false;\n    var isAsync = context & prodParams.preAsync;\n    var labelType = \"\";\n\n    if (isAsync) {\n      labelType = \"async \";\n    }\n\n    if (state.tokens.next.value === \"*\") {\n      if (isAsync && !state.inES9()) {\n        warning(\"W119\", state.tokens.prev, \"async generators\", \"9\");\n      } else if (!isAsync && !state.inES6(true)) {\n        warning(\"W119\", state.tokens.next, \"function*\", \"6\");\n      }\n\n      advance(\"*\");\n      labelType += \"generator \";\n      generator = true;\n    }\n\n    labelType += \"function\";\n\n    if (inblock) {\n      warning(\"W082\", state.tokens.curr);\n    }\n\n    this.name = optionalidentifier(context) ? state.tokens.curr : null;\n\n    if (!this.name) {\n      if (!inexport) {\n        warning(\"W025\");\n      }\n    } else {\n      state.funct[\"(scope)\"].addbinding(this.name.value, {\n        type: labelType,\n        token: state.tokens.curr,\n        initialized: true\n      });\n    }\n\n    var f = doFunction(context, {\n      name: this.name && this.name.value,\n      statement: this,\n      type: generator ? \"generator\" : null,\n      ignoreLoopFunc: inblock // a declaration may already have warned\n\n    }); // If the function declaration is strict because the surrounding code is\n    // strict, the invalid name will trigger E008 when the scope manager\n    // attempts to create a binding in the strict environment record. An error\n    // should only be signaled here when the function itself enables strict\n    // mode (the scope manager will not report an error because a declaration\n    // does not introduce a binding into the function's environment record).\n\n    var enablesStrictMode = f[\"(isStrict)\"] && !state.isStrict();\n\n    if (this.name && (f[\"(name)\"] === \"arguments\" || f[\"(name)\"] === \"eval\") && enablesStrictMode) {\n      error(\"E008\", this.name);\n    } // Although the parser correctly recognizes the statement boundary in this\n    // condition, it's support for the invalid \"empty grouping\" expression\n    // makes it tolerant of productions such as `function f() {}();`.\n\n\n    if (state.tokens.next.id === \"(\" && peek().id === \")\" && peek(1).id !== \"=>\" && state.tokens.next.line === state.tokens.curr.line) {\n      error(\"E039\");\n    }\n\n    return this;\n  }).declaration = true;\n  prefix(\"function\", function (context) {\n    var generator = false;\n    var isAsync = context & prodParams.preAsync;\n\n    if (state.tokens.next.value === \"*\") {\n      if (isAsync && !state.inES9()) {\n        warning(\"W119\", state.tokens.prev, \"async generators\", \"9\");\n      } else if (!isAsync && !state.inES6(true)) {\n        warning(\"W119\", state.tokens.curr, \"function*\", \"6\");\n      }\n\n      advance(\"*\");\n      generator = true;\n    } // This context modification restricts the use of `await` as the optional\n    // BindingIdentifier in async function expressions.\n\n\n    this.name = optionalidentifier(isAsync ? context | prodParams.async : context) ? state.tokens.curr : null;\n    var f = doFunction(context, {\n      name: this.name && this.name.value,\n      type: generator ? \"generator\" : null\n    });\n\n    if (generator && this.name && this.name.value === \"yield\") {\n      error(\"E024\", this.name, \"yield\");\n    }\n\n    if (this.name && (f[\"(name)\"] === \"arguments\" || f[\"(name)\"] === \"eval\") && f[\"(isStrict)\"]) {\n      error(\"E008\", this.name);\n    }\n\n    return this;\n  });\n  blockstmt(\"if\", function (context) {\n    var t = state.tokens.next;\n    increaseComplexityCount();\n    advance(\"(\");\n    var expr = expression(context, 0);\n\n    if (!expr) {\n      quit(\"E041\", this);\n    }\n\n    checkCondAssignment(expr); // When the if is within a for-in loop, check if the condition\n    // starts with a negation operator\n\n    var forinifcheck = null;\n\n    if (state.option.forin && state.forinifcheckneeded) {\n      state.forinifcheckneeded = false; // We only need to analyze the first if inside the loop\n\n      forinifcheck = state.forinifchecks[state.forinifchecks.length - 1];\n\n      if (expr.type === \"(punctuator)\" && expr.value === \"!\") {\n        forinifcheck.type = \"(negative)\";\n      } else {\n        forinifcheck.type = \"(positive)\";\n      }\n    }\n\n    advance(\")\", t);\n    var s = block(context, true, true); // When the if is within a for-in loop and the condition has a negative form,\n    // check if the body contains nothing but a continue statement\n\n    if (forinifcheck && forinifcheck.type === \"(negative)\") {\n      if (s && s[0] && s[0].type === \"(identifier)\" && s[0].value === \"continue\") {\n        forinifcheck.type = \"(negative-with-continue)\";\n      }\n    }\n\n    if (state.tokens.next.id === \"else\") {\n      advance(\"else\");\n\n      if (state.tokens.next.id === \"if\" || state.tokens.next.id === \"switch\") {\n        statement(context);\n      } else {\n        block(context, true, true);\n      }\n    }\n\n    return this;\n  });\n  blockstmt(\"try\", function (context) {\n    var b;\n    var hasParameter = false;\n\n    function catchParameter() {\n      advance(\"(\");\n\n      if (checkPunctuators(state.tokens.next, [\"[\", \"{\"])) {\n        var tokens = destructuringPattern(context);\n\n        _.each(tokens, function (token) {\n          if (token.id) {\n            state.funct[\"(scope)\"].addParam(token.id, token.token, \"exception\");\n          }\n        });\n      } else if (state.tokens.next.type !== \"(identifier)\") {\n        warning(\"E030\", state.tokens.next, state.tokens.next.value);\n      } else {\n        // only advance if an identifier is present. This allows JSHint to\n        // recover from the case where no value is specified.\n        state.funct[\"(scope)\"].addParam(identifier(context), state.tokens.curr, \"exception\");\n      }\n\n      if (state.tokens.next.value === \"if\") {\n        if (!state.inMoz()) {\n          warning(\"W118\", state.tokens.curr, \"catch filter\");\n        }\n\n        advance(\"if\");\n        expression(context, 0);\n      }\n\n      advance(\")\");\n    }\n\n    block(context | prodParams.tryClause, true);\n\n    while (state.tokens.next.id === \"catch\") {\n      increaseComplexityCount();\n\n      if (b && !state.inMoz()) {\n        warning(\"W118\", state.tokens.next, \"multiple catch blocks\");\n      }\n\n      advance(\"catch\");\n\n      if (state.tokens.next.id !== \"{\") {\n        state.funct[\"(scope)\"].stack(\"catchparams\");\n        hasParameter = true;\n        catchParameter();\n      } else if (!state.inES10()) {\n        warning(\"W119\", state.tokens.curr, \"optional catch binding\", \"10\");\n      }\n\n      block(context, false);\n\n      if (hasParameter) {\n        state.funct[\"(scope)\"].unstack();\n        hasParameter = false;\n      }\n\n      b = true;\n    }\n\n    if (state.tokens.next.id === \"finally\") {\n      advance(\"finally\");\n      block(context, true);\n      return;\n    }\n\n    if (!b) {\n      error(\"E021\", state.tokens.next, \"catch\", state.tokens.next.value);\n    }\n\n    return this;\n  });\n  blockstmt(\"while\", function (context) {\n    var t = state.tokens.next;\n    state.funct[\"(breakage)\"] += 1;\n    state.funct[\"(loopage)\"] += 1;\n    increaseComplexityCount();\n    advance(\"(\");\n    checkCondAssignment(expression(context, 0));\n    advance(\")\", t);\n    block(context, true, true);\n    state.funct[\"(breakage)\"] -= 1;\n    state.funct[\"(loopage)\"] -= 1;\n    return this;\n  }).labelled = true;\n  blockstmt(\"with\", function (context) {\n    var t = state.tokens.next;\n\n    if (state.isStrict()) {\n      error(\"E010\", state.tokens.curr);\n    } else if (!state.option.withstmt) {\n      warning(\"W085\", state.tokens.curr);\n    }\n\n    advance(\"(\");\n    expression(context, 0);\n    advance(\")\", t);\n    block(context, true, true);\n    return this;\n  });\n  blockstmt(\"switch\", function (context) {\n    var t = state.tokens.next;\n    var g = false;\n    var noindent = false;\n    var seenCase = false;\n    state.funct[\"(breakage)\"] += 1;\n    advance(\"(\");\n    checkCondAssignment(expression(context, 0));\n    advance(\")\", t);\n    t = state.tokens.next;\n    advance(\"{\");\n    state.funct[\"(scope)\"].stack();\n    if (state.tokens.next.from === indent) noindent = true;\n    if (!noindent) indent += state.option.indent;\n\n    for (;;) {\n      switch (state.tokens.next.id) {\n        case \"case\":\n          switch (state.funct[\"(verb)\"]) {\n            case \"yield\":\n            case \"break\":\n            case \"case\":\n            case \"continue\":\n            case \"return\":\n            case \"switch\":\n            case \"throw\":\n              break;\n\n            case \"default\":\n              if (state.option.leanswitch) {\n                warning(\"W145\", state.tokens.next);\n              }\n\n              break;\n\n            default:\n              // You can tell JSHint that you don't use break intentionally by\n              // adding a comment /* falls through */ on a line just before\n              // the next `case`.\n              if (!state.tokens.curr.caseFallsThrough) {\n                warning(\"W086\", state.tokens.curr, \"case\");\n              }\n\n          }\n\n          advance(\"case\");\n          expression(context, 0);\n          seenCase = true;\n          increaseComplexityCount();\n          g = true;\n          advance(\":\");\n          state.funct[\"(verb)\"] = \"case\";\n          break;\n\n        case \"default\":\n          switch (state.funct[\"(verb)\"]) {\n            case \"yield\":\n            case \"break\":\n            case \"continue\":\n            case \"return\":\n            case \"throw\":\n              break;\n\n            case \"case\":\n              if (state.option.leanswitch) {\n                warning(\"W145\", state.tokens.curr);\n              }\n\n              break;\n\n            default:\n              // Do not display a warning if 'default' is the first statement or if\n              // there is a special /* falls through */ comment.\n              if (seenCase && !state.tokens.curr.caseFallsThrough) {\n                warning(\"W086\", state.tokens.curr, \"default\");\n              }\n\n          }\n\n          advance(\"default\");\n          g = true;\n          advance(\":\");\n          state.funct[\"(verb)\"] = \"default\";\n          break;\n\n        case \"}\":\n          if (!noindent) indent -= state.option.indent;\n          advance(\"}\", t);\n          state.funct[\"(scope)\"].unstack();\n          state.funct[\"(breakage)\"] -= 1;\n          state.funct[\"(verb)\"] = undefined;\n          return;\n\n        /* istanbul ignore next */\n\n        case \"(end)\":\n          error(\"E023\", state.tokens.next, \"}\");\n          return;\n\n        default:\n          indent += state.option.indent;\n\n          if (g) {\n            switch (state.tokens.curr.id) {\n              /* istanbul ignore next */\n              case \",\":\n                error(\"E040\");\n                return;\n\n              case \":\":\n                g = false;\n                statements(context);\n                break;\n\n              /* istanbul ignore next */\n\n              default:\n                error(\"E025\", state.tokens.curr);\n                return;\n            }\n          } else {\n            /* istanbul ignore else */\n            if (state.tokens.curr.id === \":\") {\n              advance(\":\");\n              error(\"E024\", state.tokens.curr, \":\");\n              statements(context);\n            } else {\n              error(\"E021\", state.tokens.next, \"case\", state.tokens.next.value);\n              return;\n            }\n          }\n\n          indent -= state.option.indent;\n      }\n    }\n  }).labelled = true;\n  stmt(\"debugger\", function () {\n    if (!state.option.debug) {\n      warning(\"W087\", this);\n    }\n\n    return this;\n  }).exps = true;\n\n  (function () {\n    var x = stmt(\"do\", function (context) {\n      state.funct[\"(breakage)\"] += 1;\n      state.funct[\"(loopage)\"] += 1;\n      increaseComplexityCount();\n      this.first = block(context, true, true);\n      advance(\"while\");\n      var t = state.tokens.next;\n      advance(\"(\");\n      checkCondAssignment(expression(context, 0));\n      advance(\")\", t);\n      state.funct[\"(breakage)\"] -= 1;\n      state.funct[\"(loopage)\"] -= 1;\n      return this;\n    });\n    x.labelled = true;\n    x.exps = true;\n  })();\n\n  blockstmt(\"for\", function (context) {\n    var s,\n        t = state.tokens.next;\n    var letscope = false;\n    var isAsync = false;\n    var foreachtok = null;\n\n    if (t.value === \"each\") {\n      foreachtok = t;\n      advance(\"each\");\n\n      if (!state.inMoz()) {\n        warning(\"W118\", state.tokens.curr, \"for each\");\n      }\n    }\n\n    if (state.tokens.next.identifier && state.tokens.next.value === \"await\") {\n      advance(\"await\");\n      isAsync = true;\n\n      if (!(context & prodParams.async)) {\n        error(\"E024\", state.tokens.curr, \"await\");\n      } else if (!state.inES9()) {\n        warning(\"W119\", state.tokens.curr, \"asynchronous iteration\", \"9\");\n      }\n    }\n\n    increaseComplexityCount();\n    advance(\"(\"); // what kind of for(…) statement it is? for(…of…)? for(…in…)? for(…;…;…)?\n\n    var nextop; // contains the token of the \"in\" or \"of\" operator\n\n    var comma; // First comma punctuator at level 0\n\n    var initializer; // First initializer at level 0\n\n    var bindingPower;\n    var targets;\n    var target;\n    var decl;\n    var afterNext = peek();\n    var headContext = context | prodParams.noin;\n\n    if (state.tokens.next.id === \"var\") {\n      advance(\"var\");\n      decl = state.tokens.curr.fud(headContext);\n      comma = decl.hasComma ? decl : null;\n      initializer = decl.hasInitializer ? decl : null;\n    } else if (state.tokens.next.id === \"const\" || // The \"let\" keyword only signals a lexical binding if it is followed by\n    // an identifier, `{`, or `[`. Otherwise, it should be parsed as an\n    // IdentifierReference (i.e. in a subsquent branch).\n    state.tokens.next.id === \"let\" && (afterNext.identifier && afterNext.id !== \"in\" || checkPunctuators(afterNext, [\"{\", \"[\"]))) {\n      advance(state.tokens.next.id); // create a new block scope\n\n      letscope = true;\n      state.funct[\"(scope)\"].stack();\n      decl = state.tokens.curr.fud(headContext);\n      comma = decl.hasComma ? decl : null;\n      initializer = decl.hasInitializer ? decl : null;\n    } else if (!checkPunctuator(state.tokens.next, \";\")) {\n      targets = [];\n\n      while (state.tokens.next.value !== \"in\" && state.tokens.next.value !== \"of\" && !checkPunctuator(state.tokens.next, \";\")) {\n        if (checkPunctuators(state.tokens.next, [\"{\", \"[\"])) {\n          destructuringPattern(headContext, {\n            assignment: true\n          }).forEach(function (elem) {\n            this.push(elem.token);\n          }, targets);\n\n          if (checkPunctuator(state.tokens.next, \"=\")) {\n            advance(\"=\");\n            initializer = state.tokens.curr;\n            expression(headContext, 10);\n          }\n        } else {\n          target = expression(headContext, 10);\n\n          if (target) {\n            if (target.type === \"(identifier)\") {\n              targets.push(target);\n            } else if (checkPunctuator(target, \"=\")) {\n              initializer = target;\n              targets.push(target);\n            }\n          }\n        }\n\n        if (checkPunctuator(state.tokens.next, \",\")) {\n          advance(\",\");\n\n          if (!comma) {\n            comma = state.tokens.curr;\n          }\n        }\n      } //checkLeftSideAssign(target, nextop);\n      // In the event of a syntax error, do not issue warnings regarding the\n      // implicit creation of bindings.\n\n\n      if (!initializer && !comma) {\n        targets.forEach(function (token) {\n          if (!state.funct[\"(scope)\"].has(token.value)) {\n            warning(\"W088\", token, token.value);\n          }\n        });\n      }\n    }\n\n    nextop = state.tokens.next;\n\n    if (isAsync && nextop.value !== \"of\") {\n      error(\"E066\", nextop);\n    } // if we're in a for (… in|of …) statement\n\n\n    if (_.includes([\"in\", \"of\"], nextop.value)) {\n      if (nextop.value === \"of\") {\n        bindingPower = 20;\n\n        if (!state.inES6()) {\n          warning(\"W104\", nextop, \"for of\", \"6\");\n        }\n      } else {\n        bindingPower = 0;\n      }\n\n      if (comma) {\n        error(\"W133\", comma, nextop.value, \"more than one ForBinding\");\n      }\n\n      if (initializer) {\n        error(\"W133\", initializer, nextop.value, \"initializer is forbidden\");\n      }\n\n      if (target && !comma && !initializer) {\n        checkLeftSideAssign(context, target, nextop);\n      }\n\n      advance(nextop.value); // The binding power is variable because for-in statements accept any\n      // Expression in this position, while for-of statements are limited to\n      // AssignmentExpressions. For example:\n      //\n      //     for ( LeftHandSideExpression in Expression ) Statement\n      //     for ( LeftHandSideExpression of AssignmentExpression ) Statement\n\n      expression(context, bindingPower);\n      advance(\")\", t);\n\n      if (nextop.value === \"in\" && state.option.forin) {\n        state.forinifcheckneeded = true;\n\n        if (state.forinifchecks === undefined) {\n          state.forinifchecks = [];\n        } // Push a new for-in-if check onto the stack. The type will be modified\n        // when the loop's body is parsed and a suitable if statement exists.\n\n\n        state.forinifchecks.push({\n          type: \"(none)\"\n        });\n      }\n\n      state.funct[\"(breakage)\"] += 1;\n      state.funct[\"(loopage)\"] += 1;\n      s = block(context, true, true);\n\n      if (nextop.value === \"in\" && state.option.forin) {\n        if (state.forinifchecks && state.forinifchecks.length > 0) {\n          var check = state.forinifchecks.pop();\n\n          if ( // No if statement or not the first statement in loop body\n          s && s.length > 0 && (typeof s[0] !== \"object\" || s[0].value !== \"if\") || // Positive if statement is not the only one in loop body\n          check.type === \"(positive)\" && s.length > 1 || // Negative if statement but no continue\n          check.type === \"(negative)\") {\n            warning(\"W089\", this);\n          }\n        } // Reset the flag in case no if statement was contained in the loop body\n\n\n        state.forinifcheckneeded = false;\n      }\n\n      state.funct[\"(breakage)\"] -= 1;\n      state.funct[\"(loopage)\"] -= 1;\n    } else {\n      if (foreachtok) {\n        error(\"E045\", foreachtok);\n      }\n\n      advance(\";\");\n\n      if (decl && decl.first && decl.first[0]) {\n        if (decl.value === \"const\" && !decl.hasInitializer) {\n          warning(\"E012\", decl, decl.first[0].value);\n        }\n\n        decl.first.forEach(function (token) {\n          state.funct[\"(scope)\"].initialize(token.value);\n        });\n      } // start loopage after the first ; as the next two expressions are executed\n      // on every loop\n\n\n      state.funct[\"(loopage)\"] += 1;\n\n      if (state.tokens.next.id !== \";\") {\n        checkCondAssignment(expression(context, 0));\n      }\n\n      advance(\";\");\n\n      if (state.tokens.next.id === \";\") {\n        error(\"E021\", state.tokens.next, \")\", \";\");\n      }\n\n      if (state.tokens.next.id !== \")\") {\n        for (;;) {\n          expression(context, 0);\n\n          if (state.tokens.next.id !== \",\") {\n            break;\n          }\n\n          advance(\",\");\n          checkComma();\n        }\n      }\n\n      advance(\")\", t);\n      state.funct[\"(breakage)\"] += 1;\n      block(context, true, true);\n      state.funct[\"(breakage)\"] -= 1;\n      state.funct[\"(loopage)\"] -= 1;\n    } // unstack loop blockscope\n\n\n    if (letscope) {\n      state.funct[\"(scope)\"].unstack();\n    }\n\n    return this;\n  }).labelled = true;\n  stmt(\"break\", function () {\n    var v = state.tokens.next.value;\n\n    if (state.tokens.next.identifier && sameLine(state.tokens.curr, state.tokens.next)) {\n      if (!state.funct[\"(scope)\"].funct.hasLabel(v)) {\n        warning(\"W090\", state.tokens.next, v);\n      }\n\n      this.first = state.tokens.next;\n      advance();\n    } else {\n      if (state.funct[\"(breakage)\"] === 0) warning(\"W052\", state.tokens.next, this.value);\n    }\n\n    reachable(this);\n    return this;\n  }).exps = true;\n  stmt(\"continue\", function () {\n    var v = state.tokens.next.value;\n\n    if (state.funct[\"(breakage)\"] === 0 || !state.funct[\"(loopage)\"]) {\n      warning(\"W052\", state.tokens.next, this.value);\n    }\n\n    if (state.tokens.next.identifier) {\n      if (sameLine(state.tokens.curr, state.tokens.next)) {\n        if (!state.funct[\"(scope)\"].funct.hasLabel(v)) {\n          warning(\"W090\", state.tokens.next, v);\n        }\n\n        this.first = state.tokens.next;\n        advance();\n      }\n    }\n\n    reachable(this);\n    return this;\n  }).exps = true;\n  stmt(\"return\", function (context) {\n    if (sameLine(this, state.tokens.next)) {\n      if (state.tokens.next.id !== \";\" && !state.tokens.next.reach) {\n        this.first = expression(context, 0);\n\n        if (this.first && this.first.type === \"(punctuator)\" && this.first.value === \"=\" && !this.first.paren && !state.option.boss) {\n          warning(\"W093\", this.first);\n        }\n\n        if (state.option.noreturnawait && context & prodParams.async && !(context & prodParams.tryClause) && this.first.identifier && this.first.value === \"await\") {\n          warning(\"W146\", this.first);\n        }\n      }\n    } else {\n      if (state.tokens.next.type === \"(punctuator)\" && [\"[\", \"{\", \"+\", \"-\"].indexOf(state.tokens.next.value) > -1) {\n        nolinebreak(this); // always warn (Line breaking error)\n      }\n    }\n\n    reachable(this);\n    return this;\n  }).exps = true;\n  prefix(\"await\", function (context) {\n    if (context & prodParams.async) {\n      // If the parameters of the current function scope have not been defined,\n      // it is because the current expression is contained within the parameter\n      // list.\n      if (!state.funct[\"(params)\"]) {\n        error(\"E024\", this, \"await\");\n      }\n\n      expression(context, 10);\n      return this;\n    } else {\n      this.exps = false;\n      return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n    }\n  }).exps = true;\n\n  (function (asyncSymbol) {\n    asyncSymbol.meta = {\n      es5: true,\n      isFutureReservedWord: true,\n      strictOnly: true\n    };\n\n    asyncSymbol.isFunc = function () {\n      var next = state.tokens.next;\n      var afterParens;\n\n      if (this.line !== next.line) {\n        return false;\n      }\n\n      if (next.id === \"function\") {\n        return true;\n      }\n\n      if (next.id === \"(\") {\n        afterParens = peekThroughParens(0);\n        return afterParens.id === \"=>\";\n      }\n\n      if (next.identifier) {\n        return peek().id === \"=>\";\n      }\n\n      return false;\n    };\n\n    asyncSymbol.useFud = asyncSymbol.isFunc; // async function declaration\n\n    asyncSymbol.fud = function (context) {\n      if (!state.inES8()) {\n        warning(\"W119\", this, \"async functions\", \"8\");\n      }\n\n      context |= prodParams.preAsync;\n      context |= prodParams.initial;\n      this.func = expression(context, 0);\n      this.block = this.func.block;\n      this.exps = this.func.exps;\n      return this;\n    };\n\n    asyncSymbol.exps = true;\n    delete asyncSymbol.reserved;\n  })(prefix(\"async\", function (context, rbp) {\n    if (this.isFunc(context)) {\n      if (!state.inES8()) {\n        warning(\"W119\", this, \"async functions\", \"8\");\n      }\n\n      context |= prodParams.preAsync;\n      this.func = expression(context, rbp);\n      this.identifier = false;\n      return this;\n    }\n\n    this.exps = false;\n    return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n  }));\n\n  (function (yieldSymbol) {\n    yieldSymbol.rbp = yieldSymbol.lbp = 25;\n    yieldSymbol.exps = true;\n  })(prefix(\"yield\", function (context) {\n    if (state.inMoz()) {\n      return mozYield.call(this, context);\n    }\n\n    if (!(context & prodParams.yield)) {\n      this.exps = false;\n      return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n    }\n\n    var prev = state.tokens.prev; // If the parameters of the current function scope have not been defined,\n    // it is because the current expression is contained within the parameter\n    // list.\n\n    if (!state.funct[\"(params)\"]) {\n      error(\"E024\", this, \"yield\");\n    }\n\n    if (!this.beginsStmt && prev.lbp > 30 && !checkPunctuators(prev, [\"(\"])) {\n      error(\"E061\", this);\n    }\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, \"yield\", \"6\");\n    }\n\n    state.funct[\"(yielded)\"] = true;\n\n    if (state.tokens.next.value === \"*\") {\n      advance(\"*\");\n    } // Parse operand\n\n\n    if (state.tokens.curr.value === \"*\" || sameLine(state.tokens.curr, state.tokens.next)) {\n      if (state.tokens.next.nud) {\n        nobreaknonadjacent(state.tokens.curr, state.tokens.next);\n        this.first = expression(context, 10);\n\n        if (this.first.type === \"(punctuator)\" && this.first.value === \"=\" && !this.first.paren && !state.option.boss) {\n          warning(\"W093\", this.first);\n        }\n      } else if (state.tokens.next.led) {\n        if (state.tokens.next.id !== \",\") {\n          error(\"W017\", state.tokens.next);\n        }\n      }\n    }\n\n    return this;\n  }));\n  /**\n   * Parsing logic for non-standard Mozilla implementation of `yield`\n   * expressions.\n   */\n\n\n  var mozYield = function mozYield(context) {\n    var prev = state.tokens.prev;\n\n    if (state.inES6(true) && !(context & prodParams.yield)) {\n      error(\"E046\", state.tokens.curr, \"yield\");\n    }\n\n    state.funct[\"(yielded)\"] = true;\n    var delegatingYield = false;\n\n    if (state.tokens.next.value === \"*\") {\n      delegatingYield = true;\n      advance(\"*\");\n    }\n\n    if (sameLine(this, state.tokens.next)) {\n      if (delegatingYield || state.tokens.next.id !== \";\" && !state.option.asi && !state.tokens.next.reach && state.tokens.next.nud) {\n        nobreaknonadjacent(state.tokens.curr, state.tokens.next);\n        this.first = expression(context, 10);\n\n        if (this.first.type === \"(punctuator)\" && this.first.value === \"=\" && !this.first.paren && !state.option.boss) {\n          warning(\"W093\", this.first);\n        }\n      }\n\n      if (state.tokens.next.id !== \")\" && (prev.lbp > 30 || !prev.assign && !isEndOfExpr())) {\n        error(\"E050\", this);\n      }\n    } else if (!state.option.asi) {\n      nolinebreak(this); // always warn (Line breaking error)\n    }\n\n    return this;\n  };\n\n  stmt(\"throw\", function (context) {\n    nolinebreak(this);\n    this.first = expression(context, 20);\n    reachable(this);\n    return this;\n  }).exps = true;\n  prefix(\"import\", function (context) {\n    var mp = metaProperty(context, \"meta\", function () {\n      if (!state.inES11(true)) {\n        warning(\"W119\", state.tokens.prev, \"import.meta\", \"11\");\n      }\n\n      if (!state.option.module) {\n        error(\"E070\", state.tokens.prev);\n      }\n    });\n\n    if (mp) {\n      return mp;\n    }\n\n    if (!checkPunctuator(state.tokens.next, \"(\")) {\n      return state.syntax[\"(identifier)\"].nud.call(this, context);\n    }\n\n    if (!state.inES11()) {\n      warning(\"W119\", state.tokens.curr, \"dynamic import\", \"11\");\n    }\n\n    advance(\"(\");\n    expression(context, 10);\n    advance(\")\");\n    return this;\n  });\n  var importSymbol = stmt(\"import\", function (context) {\n    if (!state.funct[\"(scope)\"].block.isGlobal()) {\n      error(\"E053\", state.tokens.curr, \"Import\");\n    }\n\n    if (!state.inES6()) {\n      warning(\"W119\", state.tokens.curr, \"import\", \"6\");\n    }\n\n    if (state.tokens.next.type === \"(string)\") {\n      // ModuleSpecifier :: StringLiteral\n      advance(\"(string)\");\n      return this;\n    }\n\n    if (state.tokens.next.identifier) {\n      // ImportClause :: ImportedDefaultBinding\n      this.name = identifier(context); // Import bindings are immutable (see ES6 8.1.1.5.5)\n\n      state.funct[\"(scope)\"].addbinding(this.name, {\n        type: \"import\",\n        initialized: true,\n        token: state.tokens.curr\n      });\n\n      if (state.tokens.next.value === \",\") {\n        // ImportClause :: ImportedDefaultBinding , NameSpaceImport\n        // ImportClause :: ImportedDefaultBinding , NamedImports\n        advance(\",\"); // At this point, we intentionally fall through to continue matching\n        // either NameSpaceImport or NamedImports.\n        // Discussion:\n        // https://github.com/jshint/jshint/pull/2144#discussion_r23978406\n      } else {\n        advance(\"from\");\n        advance(\"(string)\");\n        return this;\n      }\n    }\n\n    if (state.tokens.next.id === \"*\") {\n      // ImportClause :: NameSpaceImport\n      advance(\"*\");\n      advance(\"as\");\n\n      if (state.tokens.next.identifier) {\n        this.name = identifier(context); // Import bindings are immutable (see ES6 8.1.1.5.5)\n\n        state.funct[\"(scope)\"].addbinding(this.name, {\n          type: \"import\",\n          initialized: true,\n          token: state.tokens.curr\n        });\n      }\n    } else {\n      // ImportClause :: NamedImports\n      advance(\"{\");\n\n      for (;;) {\n        if (state.tokens.next.value === \"}\") {\n          advance(\"}\");\n          break;\n        }\n\n        var importName;\n\n        if (peek().value === \"as\") {\n          identifier(context, true);\n          advance(\"as\");\n          importName = identifier(context);\n        } else {\n          importName = identifier(context);\n        } // Import bindings are immutable (see ES6 8.1.1.5.5)\n\n\n        state.funct[\"(scope)\"].addbinding(importName, {\n          type: \"import\",\n          initialized: true,\n          token: state.tokens.curr\n        });\n\n        if (state.tokens.next.value === \",\") {\n          advance(\",\");\n        } else if (state.tokens.next.value === \"}\") {\n          advance(\"}\");\n          break;\n        } else {\n          error(\"E024\", state.tokens.next, state.tokens.next.value);\n          break;\n        }\n      }\n    } // FromClause\n\n\n    advance(\"from\");\n    advance(\"(string)\"); // Support for ES2015 modules was released without warning for `import`\n    // declarations that lack bindings. Issuing a warning would therefor\n    // constitute a breaking change.\n    // TODO: enable this warning in JSHint 3\n    // if (hasBindings) {\n    //   warning(\"W142\", this, \"import\", moduleSpecifier);\n    // }\n\n    return this;\n  });\n  importSymbol.exps = true;\n  importSymbol.reserved = true;\n  importSymbol.meta = {\n    isFutureReservedWord: true,\n    es5: true\n  };\n\n  importSymbol.useFud = function () {\n    return !checkPunctuators(state.tokens.next, [\".\", \"(\"]);\n  };\n\n  importSymbol.rbp = 161;\n  stmt(\"export\", function (context) {\n    var ok = true;\n    var token;\n    var moduleSpecifier;\n    context = context | prodParams.export;\n\n    if (!state.inES6()) {\n      warning(\"W119\", state.tokens.curr, \"export\", \"6\");\n      ok = false;\n    }\n\n    if (!state.funct[\"(scope)\"].block.isGlobal()) {\n      error(\"E053\", state.tokens.curr, \"Export\");\n      ok = false;\n    }\n\n    if (state.tokens.next.value === \"*\") {\n      // ExportDeclaration :: export * FromClause\n      // ExportDeclaration :: export * as IdentifierName FromClause\n      advance(\"*\");\n\n      if (state.tokens.next.value === \"as\") {\n        if (!state.inES11()) {\n          warning(\"W119\", state.tokens.curr, \"export * as ns from\", \"11\");\n        }\n\n        advance(\"as\");\n        identifier(context, true);\n        state.funct[\"(scope)\"].setExported(null, state.tokens.curr);\n      }\n\n      advance(\"from\");\n      advance(\"(string)\");\n      return this;\n    }\n\n    if (state.tokens.next.type === \"default\") {\n      // ExportDeclaration ::\n      //      export default [lookahead ∉ { function, class }] AssignmentExpression[In] ;\n      //      export default HoistableDeclaration\n      //      export default ClassDeclaration\n      // because the 'name' of a default-exported function is, confusingly, 'default'\n      // see https://bocoup.com/blog/whats-in-a-function-name\n      state.nameStack.set(state.tokens.next);\n      advance(\"default\");\n      var def = state.tokens.curr;\n      var exportType = state.tokens.next.id;\n\n      if (exportType === \"function\") {\n        this.block = true;\n        advance(\"function\");\n        token = state.syntax[\"function\"].fud(context);\n        state.funct[\"(scope)\"].setExported(token.name, def);\n      } else if (exportType === \"async\" && peek().id === \"function\") {\n        this.block = true;\n        advance(\"async\");\n        advance(\"function\");\n        token = state.syntax[\"function\"].fud(context | prodParams.preAsync);\n        state.funct[\"(scope)\"].setExported(token.name, def);\n      } else if (exportType === \"class\") {\n        this.block = true;\n        advance(\"class\");\n        token = state.syntax[\"class\"].fud(context);\n        state.funct[\"(scope)\"].setExported(token.name, def);\n      } else {\n        expression(context, 10);\n        state.funct[\"(scope)\"].setExported(null, def);\n      }\n\n      return this;\n    }\n\n    if (state.tokens.next.value === \"{\") {\n      // ExportDeclaration :: export ExportClause\n      advance(\"{\");\n      var exportedTokens = [];\n\n      while (!checkPunctuator(state.tokens.next, \"}\")) {\n        if (!state.tokens.next.identifier) {\n          /* istanbul ignore next */\n          error(\"E030\", state.tokens.next, state.tokens.next.value);\n        }\n\n        advance();\n\n        if (state.tokens.next.value === \"as\") {\n          advance(\"as\");\n\n          if (!state.tokens.next.identifier) {\n            /* istanbul ignore next */\n            error(\"E030\", state.tokens.next, state.tokens.next.value);\n          }\n\n          exportedTokens.push({\n            local: state.tokens.prev,\n            export: state.tokens.next\n          });\n          advance();\n        } else {\n          exportedTokens.push({\n            local: state.tokens.curr,\n            export: state.tokens.curr\n          });\n        }\n\n        if (!checkPunctuator(state.tokens.next, \"}\")) {\n          advance(\",\");\n        }\n      }\n\n      advance(\"}\");\n\n      if (state.tokens.next.value === \"from\") {\n        // ExportDeclaration :: export ExportClause FromClause\n        advance(\"from\");\n        moduleSpecifier = state.tokens.next;\n        advance(\"(string)\");\n      } else if (ok) {\n        exportedTokens.forEach(function (x) {\n          state.funct[\"(scope)\"].setExported(x.local, x.export);\n        });\n      }\n\n      if (exportedTokens.length === 0) {\n        if (moduleSpecifier) {\n          warning(\"W142\", this, \"export\", moduleSpecifier.value);\n        } else {\n          warning(\"W141\", this, \"export\");\n        }\n      }\n\n      return this;\n    } else if (state.tokens.next.id === \"var\") {\n      // ExportDeclaration :: export VariableStatement\n      advance(\"var\");\n      token = state.tokens.curr.fud(context);\n      token.first.forEach(function (binding) {\n        state.funct[\"(scope)\"].setExported(binding, binding);\n      });\n    } else if (state.tokens.next.id === \"let\") {\n      // ExportDeclaration :: export VariableStatement\n      advance(\"let\");\n      token = state.tokens.curr.fud(context);\n      token.first.forEach(function (binding) {\n        state.funct[\"(scope)\"].setExported(binding, binding);\n      });\n    } else if (state.tokens.next.id === \"const\") {\n      // ExportDeclaration :: export VariableStatement\n      advance(\"const\");\n      token = state.tokens.curr.fud(context);\n      token.first.forEach(function (binding) {\n        state.funct[\"(scope)\"].setExported(binding, binding);\n      });\n    } else if (state.tokens.next.id === \"function\") {\n      // ExportDeclaration :: export Declaration\n      this.block = true;\n      advance(\"function\");\n      token = state.syntax[\"function\"].fud(context);\n      state.funct[\"(scope)\"].setExported(token.name, token.name);\n    } else if (state.tokens.next.id === \"async\" && peek().id === \"function\") {\n      // ExportDeclaration :: export Declaration\n      this.block = true;\n      advance(\"async\");\n      advance(\"function\");\n      token = state.syntax[\"function\"].fud(context | prodParams.preAsync);\n      state.funct[\"(scope)\"].setExported(token.name, token.name);\n    } else if (state.tokens.next.id === \"class\") {\n      // ExportDeclaration :: export Declaration\n      this.block = true;\n      advance(\"class\");\n      token = state.syntax[\"class\"].fud(context);\n      state.funct[\"(scope)\"].setExported(token.name, token.name);\n    } else {\n      /* istanbul ignore next */\n      error(\"E024\", state.tokens.next, state.tokens.next.value);\n    }\n\n    return this;\n  }).exps = true;\n  /**\n   * Determine if SuperCall or SuperProperty may be used in the current context\n   * (as described by the provided \"functor\" object).\n   *\n   * @param {string} type - one of \"property\" or \"call\"\n   * @param {object} funct - a \"functor\" object describing the current function\n   *                         context\n   *\n   * @returns {boolean}\n   */\n\n  function supportsSuper(type, funct) {\n    if (type === \"call\" && funct[\"(async)\"]) {\n      return false;\n    }\n\n    if (type === \"property\" && funct[\"(method)\"]) {\n      return true;\n    }\n\n    if (type === \"call\" && funct[\"(statement)\"] && funct[\"(statement)\"].id === \"class\") {\n      return true;\n    }\n\n    if (funct[\"(arrow)\"]) {\n      return supportsSuper(type, funct[\"(context)\"]);\n    }\n\n    return false;\n  }\n\n  var superNud = function superNud() {\n    var next = state.tokens.next;\n\n    if (checkPunctuators(next, [\"[\", \".\"])) {\n      if (!supportsSuper(\"property\", state.funct)) {\n        error(\"E063\", this);\n      }\n    } else if (checkPunctuator(next, \"(\")) {\n      if (!supportsSuper(\"call\", state.funct)) {\n        error(\"E064\", this);\n      }\n    } else {\n      error(\"E024\", next, next.value || next.id);\n    }\n\n    return this;\n  }; // Future Reserved Words\n\n\n  FutureReservedWord(\"abstract\");\n  FutureReservedWord(\"boolean\");\n  FutureReservedWord(\"byte\");\n  FutureReservedWord(\"char\");\n  FutureReservedWord(\"double\");\n  FutureReservedWord(\"enum\", {\n    es5: true\n  });\n  FutureReservedWord(\"export\", {\n    es5: true\n  });\n  FutureReservedWord(\"extends\", {\n    es5: true\n  });\n  FutureReservedWord(\"final\");\n  FutureReservedWord(\"float\");\n  FutureReservedWord(\"goto\");\n  FutureReservedWord(\"implements\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"int\");\n  FutureReservedWord(\"interface\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"long\");\n  FutureReservedWord(\"native\");\n  FutureReservedWord(\"package\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"private\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"protected\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"public\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"short\");\n  FutureReservedWord(\"static\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"synchronized\");\n  FutureReservedWord(\"transient\");\n  FutureReservedWord(\"volatile\"); // this function is used to determine whether a squarebracket or a curlybracket\n  // expression is a comprehension array, destructuring assignment or a json value.\n\n  var lookupBlockType = function lookupBlockType() {\n    var pn, pn1, prev;\n    var i = -1;\n    var bracketStack = 0;\n    var ret = {};\n\n    if (checkPunctuators(state.tokens.curr, [\"[\", \"{\"])) {\n      bracketStack += 1;\n    }\n\n    do {\n      prev = i === -1 ? state.tokens.curr : pn;\n      pn = i === -1 ? state.tokens.next : peek(i);\n      pn1 = peek(i + 1);\n      i = i + 1;\n\n      if (checkPunctuators(pn, [\"[\", \"{\"])) {\n        bracketStack += 1;\n      } else if (checkPunctuators(pn, [\"]\", \"}\"])) {\n        bracketStack -= 1;\n      }\n\n      if (bracketStack === 1 && pn.identifier && pn.value === \"for\" && !checkPunctuator(prev, \".\")) {\n        ret.isCompArray = true;\n        ret.notJson = true;\n        break;\n      }\n\n      if (bracketStack === 0 && checkPunctuators(pn, [\"}\", \"]\"])) {\n        if (pn1.value === \"=\") {\n          ret.isDestAssign = true;\n          ret.notJson = true;\n          break;\n        } else if (pn1.value === \".\") {\n          ret.notJson = true;\n          break;\n        }\n      }\n\n      if (checkPunctuator(pn, \";\")) {\n        ret.notJson = true;\n      }\n    } while (bracketStack > 0 && pn.id !== \"(end)\");\n\n    return ret;\n  };\n  /**\n   * Update an object used to track property names within object initializers\n   * and class bodies. Produce warnings in response to duplicated names.\n   *\n   * @param {object} props - a collection of all properties of the object or\n   *                         class to which the current property is being\n   *                         assigned\n   * @param {string} name - the property name\n   * @param {object} tkn - the token defining the property\n   * @param {boolean} [isClass] - whether the accessor is part of an ES6 Class\n   *                              definition\n   * @param {boolean} [isStatic] - whether the accessor is a static method\n   * @param {boolean} [isComputed] - whether the property is a computed expression like [Symbol.iterator]\n   */\n\n\n  function saveProperty(props, name, tkn, isClass, isStatic, isComputed) {\n    if (tkn.identifier) {\n      name = tkn.value;\n    }\n\n    var key = name;\n\n    if (isClass && isStatic) {\n      key = \"static \" + name;\n    }\n\n    if (props[key] && name !== \"__proto__\" && !isComputed) {\n      var msg = [\"key\", \"class method\", \"static class method\"];\n      msg = msg[(isClass || false) + (isStatic || false)];\n      warning(\"W075\", state.tokens.next, msg, name);\n    } else {\n      props[key] = Object.create(null);\n    }\n\n    props[key].basic = true;\n    props[key].basictkn = tkn;\n  }\n  /**\n   * Update an object used to track property names within object initializers\n   * and class bodies. Produce warnings in response to duplicated names.\n   *\n   * @param {string} accessorType - Either \"get\" or \"set\"\n   * @param {object} props - a collection of all properties of the object or\n   *                         class to which the current accessor is being\n   *                         assigned\n   * @param {object} tkn - the identifier token representing the accessor name\n   * @param {boolean} [isClass] - whether the accessor is part of an ES6 Class\n   *                              definition\n   * @param {boolean} [isStatic] - whether the accessor is a static method\n   */\n\n\n  function saveAccessor(accessorType, props, name, tkn, isClass, isStatic) {\n    var flagName = accessorType === \"get\" ? \"getterToken\" : \"setterToken\";\n    var key = name;\n    state.tokens.curr.accessorType = accessorType;\n    state.nameStack.set(tkn);\n\n    if (isClass && isStatic) {\n      key = \"static \" + name;\n    }\n\n    if (props[key]) {\n      if ((props[key].basic || props[key][flagName]) && name !== \"__proto__\") {\n        var msg = \"\";\n\n        if (isClass) {\n          if (isStatic) {\n            msg += \"static \";\n          }\n\n          msg += accessorType + \"ter method\";\n        } else {\n          msg = \"key\";\n        }\n\n        warning(\"W075\", state.tokens.next, msg, name);\n      }\n    } else {\n      props[key] = Object.create(null);\n    }\n\n    props[key][flagName] = tkn;\n\n    if (isStatic) {\n      props[key].static = true;\n    }\n  }\n  /**\n   * Parse a computed property name within object initializers and class bodies\n   * as introduced by ES2015. For example:\n   *\n   *     void {\n   *       [object.method()]: null\n   *     };\n   *\n   * @param {number} context - the parsing context\n   *\n   * @returns {object} - the token value that describes the expression which\n   *                     defines the property name\n   */\n\n\n  function computedPropertyName(context) {\n    advance(\"[\"); // Explicitly reclassify token as a delimeter to prevent its later\n    // interpretation as an \"infix\" operator.\n\n    state.tokens.curr.delim = true;\n    state.tokens.curr.lbp = 0;\n\n    if (!state.inES6()) {\n      warning(\"W119\", state.tokens.curr, \"computed property names\", \"6\");\n    }\n\n    var value = expression(context & ~prodParams.noin, 10);\n    advance(\"]\");\n    return value;\n  }\n  /**\n   * Test whether a given token is a punctuator whose `value` property matches\n   * one of the specified values. This function explicitly verifies the token's\n   * `type` property so that like-valued string literals (e.g. `\";\"`) do not\n   * produce false positives.\n   *\n   * @param {Token} token\n   * @param {Array.<string>} values\n   *\n   * @returns {boolean}\n   */\n\n\n  function checkPunctuators(token, values) {\n    if (token.type === \"(punctuator)\") {\n      return _.includes(values, token.value);\n    }\n\n    return false;\n  }\n  /**\n   * Test whether a given token is a punctuator whose `value` property matches\n   * the specified value. This function explicitly verifies the token's `type`\n   * property so that like-valued string literals (e.g. `\";\"`) do not produce\n   * false positives.\n   *\n   * @param {Token} token\n   * @param {string} value\n   *\n   * @returns {boolean}\n   */\n\n\n  function checkPunctuator(token, value) {\n    return token.type === \"(punctuator)\" && token.value === value;\n  } // Check whether this function has been reached for a destructuring assign with undeclared values\n\n\n  function destructuringAssignOrJsonValue(context) {\n    // lookup for the assignment (ECMAScript 6 only)\n    // if it has semicolons, it is a block, so go parse it as a block\n    // or it's not a block, but there are assignments, check for undeclared variables\n    var block = lookupBlockType();\n\n    if (block.notJson) {\n      if (!state.inES6() && block.isDestAssign) {\n        /* istanbul ignore next */\n        warning(\"W104\", state.tokens.curr, \"destructuring assignment\", \"6\");\n      }\n\n      statements(context); // otherwise parse json value\n    } else {\n      state.option.laxbreak = true;\n      state.jsonMode = true;\n      jsonValue();\n    }\n  }\n  /**\n   * Parse and define the three states of a list comprehension in order to\n   * avoid defining global variables, but keeping them to the list\n   * comprehension scope only. The order of the states are as follows:\n   *\n   * - \"use\" - which will be the returned iterative part of the list\n   *   comprehension\n   * - \"define\" - which will define the variables local to the list\n   *   comprehension\n   * - \"filter\" - which will help filter out values\n   */\n\n\n  var arrayComprehension = function arrayComprehension() {\n    var CompArray = function CompArray() {\n      this.mode = \"use\";\n      this.variables = [];\n    };\n\n    var _carrays = [];\n\n    var _current;\n\n    function declare(v) {\n      var l = _current.variables.filter(function (elt) {\n        // if it has, change its undef state\n        if (elt.value === v) {\n          elt.undef = false;\n          return v;\n        }\n      }).length;\n\n      return l !== 0;\n    }\n\n    function use(v) {\n      var l = _current.variables.filter(function (elt) {\n        // and if it has been defined\n        if (elt.value === v && !elt.undef) {\n          if (elt.unused === true) {\n            elt.unused = false;\n          }\n\n          return v;\n        }\n      }).length; // otherwise we warn about it\n\n\n      return l === 0;\n    }\n\n    return {\n      stack: function stack() {\n        _current = new CompArray();\n\n        _carrays.push(_current);\n      },\n      unstack: function unstack() {\n        _current.variables.filter(function (v) {\n          if (v.unused) warning(\"W098\", v.token, v.token.raw_text || v.value);\n          if (v.undef) state.funct[\"(scope)\"].block.use(v.value, v.token);\n        });\n\n        _carrays.splice(-1, 1);\n\n        _current = _carrays[_carrays.length - 1];\n      },\n      setState: function setState(s) {\n        if (_.includes([\"use\", \"define\", \"generate\", \"filter\"], s)) _current.mode = s;\n      },\n      check: function check(v) {\n        if (!_current) {\n          return;\n        } // When we are in \"use\" state of the list comp, we enqueue that var\n\n\n        if (_current && _current.mode === \"use\") {\n          if (use(v)) {\n            _current.variables.push({\n              token: state.tokens.curr,\n              value: v,\n              undef: true,\n              unused: false\n            });\n          }\n\n          return true; // When we are in \"define\" state of the list comp,\n        } else if (_current && _current.mode === \"define\") {\n          // check if the variable has been used previously\n          if (!declare(v)) {\n            _current.variables.push({\n              token: state.tokens.curr,\n              value: v,\n              undef: false,\n              unused: true\n            });\n          }\n\n          return true; // When we are in the \"generate\" state of the list comp,\n        } else if (_current && _current.mode === \"generate\") {\n          state.funct[\"(scope)\"].block.use(v, state.tokens.curr);\n          return true; // When we are in \"filter\" state,\n        } else if (_current && _current.mode === \"filter\") {\n          // we check whether current variable has been declared\n          if (use(v)) {\n            // if not we warn about it\n\n            /* istanbul ignore next */\n            state.funct[\"(scope)\"].block.use(v, state.tokens.curr);\n          }\n\n          return true;\n        }\n        /* istanbul ignore next */\n\n\n        return false;\n      }\n    };\n  };\n  /**\n   * Parse input according to the JSON format.\n   *\n   * http://json.org/\n   */\n\n\n  function jsonValue() {\n    function jsonObject() {\n      var o = {},\n          t = state.tokens.next;\n      advance(\"{\");\n\n      if (state.tokens.next.id !== \"}\") {\n        for (;;) {\n          if (state.tokens.next.id === \"(end)\") {\n            error(\"E026\", state.tokens.next, t.line);\n          } else if (state.tokens.next.id === \"}\") {\n            warning(\"W094\", state.tokens.curr);\n            break;\n          } else if (state.tokens.next.id === \",\") {\n            error(\"E028\", state.tokens.next);\n          } else if (state.tokens.next.id !== \"(string)\") {\n            warning(\"W095\", state.tokens.next, state.tokens.next.value);\n          }\n\n          if (o[state.tokens.next.value] === true) {\n            warning(\"W075\", state.tokens.next, \"key\", state.tokens.next.value);\n          } else if (state.tokens.next.value === \"__proto__\" && !state.option.proto || state.tokens.next.value === \"__iterator__\" && !state.option.iterator) {\n            warning(\"W096\", state.tokens.next, state.tokens.next.value);\n          } else {\n            o[state.tokens.next.value] = true;\n          }\n\n          advance();\n          advance(\":\");\n          jsonValue();\n\n          if (state.tokens.next.id !== \",\") {\n            break;\n          }\n\n          advance(\",\");\n        }\n      }\n\n      advance(\"}\");\n    }\n\n    function jsonArray() {\n      var t = state.tokens.next;\n      advance(\"[\");\n\n      if (state.tokens.next.id !== \"]\") {\n        for (;;) {\n          if (state.tokens.next.id === \"(end)\") {\n            error(\"E027\", state.tokens.next, t.line);\n          } else if (state.tokens.next.id === \"]\") {\n            warning(\"W094\", state.tokens.curr);\n            break;\n          } else if (state.tokens.next.id === \",\") {\n            error(\"E028\", state.tokens.next);\n          }\n\n          jsonValue();\n\n          if (state.tokens.next.id !== \",\") {\n            break;\n          }\n\n          advance(\",\");\n        }\n      }\n\n      advance(\"]\");\n    }\n\n    switch (state.tokens.next.id) {\n      case \"{\":\n        jsonObject();\n        break;\n\n      case \"[\":\n        jsonArray();\n        break;\n\n      case \"true\":\n      case \"false\":\n      case \"null\":\n      case \"(number)\":\n      case \"(string)\":\n        advance();\n        break;\n\n      case \"-\":\n        advance(\"-\");\n        advance(\"(number)\");\n        break;\n\n      default:\n        error(\"E003\", state.tokens.next);\n    }\n  }\n  /**\n   * Lint dynamically-evaluated code, appending any resulting errors/warnings\n   * into the global `errors` array.\n   *\n   * @param {array} internals - collection of \"internals\" objects describing\n   *                            string tokens that contain evaluated code\n   * @param {object} options - linting options to apply\n   * @param {object} globals - globally-defined bindings for the evaluated code\n   */\n\n\n  function lintEvalCode(internals, options, globals) {\n    var priorErrorCount, idx, jdx, internal;\n\n    for (idx = 0; idx < internals.length; idx += 1) {\n      internal = internals[idx];\n      options.scope = internal.elem;\n      priorErrorCount = JSHINT.errors.length;\n      itself(internal.code, options, globals);\n\n      for (jdx = priorErrorCount; jdx < JSHINT.errors.length; jdx += 1) {\n        JSHINT.errors[jdx].line += internal.token.line - 1;\n      }\n    }\n  }\n\n  var escapeRegex = function escapeRegex(str) {\n    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n  }; // The actual JSHINT function itself.\n\n\n  var itself = function itself(s, o, g) {\n    var x, reIgnoreStr, reIgnore;\n    var optionKeys, newOptionObj, newIgnoredObj;\n    o = _.clone(o);\n    state.reset();\n    newOptionObj = state.option;\n    newIgnoredObj = state.ignored;\n\n    if (o && o.scope) {\n      JSHINT.scope = o.scope;\n    } else {\n      JSHINT.errors = [];\n      JSHINT.internals = [];\n      JSHINT.blacklist = {};\n      JSHINT.scope = \"(main)\";\n    }\n\n    predefined = Object.create(null);\n    combine(predefined, vars.ecmaIdentifiers[3]);\n    combine(predefined, vars.reservedVars);\n    declared = Object.create(null);\n    var exported = Object.create(null); // Variables that live outside the current file\n\n    function each(obj, cb) {\n      if (!obj) return;\n      if (!Array.isArray(obj) && typeof obj === \"object\") obj = Object.keys(obj);\n      obj.forEach(cb);\n    }\n\n    if (o) {\n      each([o.predef, o.globals], function (dict) {\n        each(dict, function (item) {\n          var slice, prop;\n\n          if (item[0] === \"-\") {\n            slice = item.slice(1);\n            JSHINT.blacklist[slice] = slice; // remove from predefined if there\n\n            delete predefined[slice];\n          } else {\n            prop = Object.getOwnPropertyDescriptor(dict, item);\n            predefined[item] = prop ? prop.value : false;\n          }\n        });\n      });\n      each(o.exported || null, function (item) {\n        exported[item] = true;\n      });\n      delete o.predef;\n      delete o.exported;\n      optionKeys = Object.keys(o);\n\n      for (x = 0; x < optionKeys.length; x++) {\n        if (/^-W\\d{3}$/g.test(optionKeys[x])) {\n          newIgnoredObj[optionKeys[x].slice(1)] = true;\n        } else {\n          var optionKey = optionKeys[x];\n          newOptionObj[optionKey] = o[optionKey];\n        }\n      }\n    }\n\n    state.option = newOptionObj;\n    state.ignored = newIgnoredObj;\n    state.option.indent = state.option.indent || 4;\n    state.option.maxerr = state.option.maxerr || 50;\n    indent = 1;\n    var scopeManagerInst = scopeManager(state, predefined, exported, declared);\n    scopeManagerInst.on(\"warning\", function (ev) {\n      warning.apply(null, [ev.code, ev.token].concat(ev.data));\n    });\n    scopeManagerInst.on(\"error\", function (ev) {\n      /* istanbul ignore next */\n      error.apply(null, [ev.code, ev.token].concat(ev.data));\n    });\n    state.funct = functor(\"(global)\", null, {\n      \"(global)\": true,\n      \"(scope)\": scopeManagerInst,\n      \"(comparray)\": arrayComprehension(),\n      \"(metrics)\": createMetrics(state.tokens.next)\n    });\n    functions = [state.funct];\n    member = {};\n    membersOnly = null;\n    inblock = false;\n    lookahead = [];\n\n    if (!isString(s) && !Array.isArray(s)) {\n      errorAt(\"E004\", 0);\n      return false;\n    }\n\n    api = {\n      get isJSON() {\n        /* istanbul ignore next */\n        return state.jsonMode;\n      },\n\n      getOption: function getOption(name) {\n        return state.option[name] || null;\n      },\n      getCache: function getCache(name) {\n        return state.cache[name];\n      },\n      setCache: function setCache(name, value) {\n        state.cache[name] = value;\n      },\n      warn: function warn(code, data) {\n        warningAt.apply(null, [code, data.line, data.char].concat(data.data));\n      },\n      on: function on(names, listener) {\n        names.split(\" \").forEach(function (name) {\n          emitter.on(name, listener);\n        }.bind(this));\n      }\n    };\n    emitter.removeAllListeners();\n    (extraModules || []).forEach(function (func) {\n      func(api);\n    });\n    state.tokens.prev = state.tokens.curr = state.tokens.next = state.syntax[\"(begin)\"];\n\n    if (o && o.ignoreDelimiters) {\n      if (!Array.isArray(o.ignoreDelimiters)) {\n        /* istanbul ignore next */\n        o.ignoreDelimiters = [o.ignoreDelimiters];\n      }\n\n      o.ignoreDelimiters.forEach(function (delimiterPair) {\n        if (!delimiterPair.start || !delimiterPair.end) return;\n        reIgnoreStr = escapeRegex(delimiterPair.start) + \"[\\\\s\\\\S]*?\" + escapeRegex(delimiterPair.end);\n        reIgnore = new RegExp(reIgnoreStr, \"ig\");\n        s = s.replace(reIgnore, function (match) {\n          return match.replace(/./g, \" \");\n        });\n      });\n    }\n\n    lex = new Lexer(s);\n    lex.on(\"warning\", function (ev) {\n      warningAt.apply(null, [ev.code, ev.line, ev.character].concat(ev.data));\n    });\n    lex.on(\"error\", function (ev) {\n      errorAt.apply(null, [ev.code, ev.line, ev.character].concat(ev.data));\n    });\n    lex.on(\"fatal\", function (ev) {\n      quit(\"E041\", ev);\n    });\n    lex.on(\"Identifier\", function (ev) {\n      emitter.emit(\"Identifier\", ev);\n    });\n    lex.on(\"String\", function (ev) {\n      emitter.emit(\"String\", ev);\n    });\n    lex.on(\"Number\", function (ev) {\n      emitter.emit(\"Number\", ev);\n    }); // Check options\n\n    var name;\n\n    for (name in o) {\n      if (_.has(o, name)) {\n        checkOption(name, true, state.tokens.curr);\n      }\n    }\n\n    if (o) {\n      for (name in o.unstable) {\n        if (_.has(o.unstable, name)) {\n          checkOption(name, false, state.tokens.curr);\n        }\n      }\n    }\n\n    try {\n      applyOptions(); // combine the passed globals after we've assumed all our options\n\n      combine(predefined, g || {}); //reset values\n\n      checkComma.first = true;\n      advance();\n\n      switch (state.tokens.next.id) {\n        case \"{\":\n        case \"[\":\n          destructuringAssignOrJsonValue(0);\n          break;\n\n        default:\n          directives();\n\n          if (state.directive[\"use strict\"]) {\n            if (!state.allowsGlobalUsd()) {\n              warning(\"W097\", state.directive[\"use strict\"]);\n            }\n          }\n\n          statements(0);\n      }\n\n      if (state.tokens.next.id !== \"(end)\") {\n        quit(\"E041\", state.tokens.curr);\n      }\n\n      state.funct[\"(scope)\"].unstack();\n    } catch (err) {\n      if (err && err.name === \"JSHintError\") {\n        var nt = state.tokens.next || {};\n        JSHINT.errors.push({\n          scope: \"(main)\",\n          raw: err.raw,\n          code: err.code,\n          reason: err.reason,\n          line: err.line || nt.line,\n          character: err.character || nt.from\n        });\n      } else {\n        /* istanbul ignore next */\n        throw err;\n      }\n    } // Loop over the listed \"internals\", and check them as well.\n\n\n    if (JSHINT.scope === \"(main)\") {\n      lintEvalCode(JSHINT.internals, o || {}, g);\n    }\n\n    return JSHINT.errors.length === 0;\n  }; // Modules.\n\n\n  itself.addModule = function (func) {\n    extraModules.push(func);\n  };\n\n  itself.addModule(style.register); // Data summary.\n\n  itself.data = function () {\n    var data = {\n      functions: [],\n      options: state.option\n    };\n    var fu, f, i, n, globals;\n\n    if (itself.errors.length) {\n      data.errors = itself.errors;\n    }\n\n    if (state.jsonMode) {\n      /* istanbul ignore next */\n      data.json = true;\n    }\n\n    var impliedGlobals = state.funct[\"(scope)\"].getImpliedGlobals();\n\n    if (impliedGlobals.length > 0) {\n      data.implieds = impliedGlobals;\n    }\n\n    globals = state.funct[\"(scope)\"].getUsedOrDefinedGlobals();\n\n    if (globals.length > 0) {\n      data.globals = globals;\n    }\n\n    for (i = 1; i < functions.length; i += 1) {\n      f = functions[i];\n      fu = {};\n      fu.name = f[\"(name)\"];\n      fu.param = f[\"(params)\"];\n      fu.line = f[\"(line)\"];\n      fu.character = f[\"(character)\"];\n      fu.last = f[\"(last)\"];\n      fu.lastcharacter = f[\"(lastcharacter)\"];\n      fu.metrics = {\n        complexity: f[\"(metrics)\"].ComplexityCount,\n        parameters: f[\"(metrics)\"].arity,\n        statements: f[\"(metrics)\"].statementCount\n      };\n      data.functions.push(fu);\n    }\n\n    var unuseds = state.funct[\"(scope)\"].getUnuseds();\n\n    if (unuseds.length > 0) {\n      data.unused = unuseds;\n    }\n\n    for (n in member) {\n      if (typeof member[n] === \"number\") {\n        data.member = member;\n        break;\n      }\n    }\n\n    return data;\n  };\n\n  itself.jshint = itself;\n  return itself;\n}(); // Make JSHINT a Node module, if possible.\n\n\nif (typeof exports === \"object\" && exports) {\n  exports.JSHINT = JSHINT;\n}"],"names":["_","events","vars","messages","Lexer","reg","state","style","options","scopeManager","prodParams","JSHINT","api","declared","functions","inblock","indent","lookahead","lex","member","membersOnly","predefined","bang","extraModules","emitter","EventEmitter","checkOption","name","isStable","t","type","validNames","unstableNames","trim","test","indexOf","has","removed","error","isIdentifier","tkn","value","identifier","isReserved","context","token","reserved","meta","isFutureReservedWord","inES5","es5","isProperty","strictOnly","option","strict","isStrict","id","async","module","yield","supplant","str","data","replace","a","b","r","combine","dest","src","Object","keys","forEach","blacklist","applyOptions","badESOpt","enforceall","enforceopt","bool","enforcing","undefined","noenforceall","relaxopt","relaxing","processenforceall","inferEsVersion","quit","tokens","next","ecmaIdentifiers","inES6","inES8","warning","regexpu","couch","qunit","rhino","shelljs","node","typed","phantom","prototypejs","devel","dojo","browser","browserify","nonstandard","jasmine","jquery","mootools","worker","wsh","yui","mocha","code","percentage","Math","floor","line","lines","length","message","errors","desc","exception","character","from","raw","reason","removeIgnoredMessages","ignored","ignoredLines","isEmpty","reject","err","c","d","ch","l","w","msg","warnings","info","curr","evidence","scope","push","maxerr","warningAt","m","errorAt","addEvalCode","elem","internals","lintingDirective","directiveToken","previous","body","split","map","s","predef","key","item","idx","parts","charAt","slice","e","funct","addExported","ch1","substr","numvals","numberVal","val","isFinite","validthis","hasParsedCode","tn","match","exec","renamed","inverted","unstable","moz","esversion","latedef","unused","shadow","quotmark","caseFallsThrough","peek","p","i","j","peekIgnoreEOL","advance","expected","relatedToken","nextToken","prev","shift","check","isSpecial","isEndOfExpr","arguments","noin","infix","rbp","sameLine","expression","left","isArray","isObject","initial","nameStack","beginsStmt","fud","useFud","nud","lbp","first","led","pop","second","startLine","nobreaknonadjacent","right","laxbreak","nolinebreak","checkComma","opts","laxcomma","property","allowTrailing","symbol","x","syntax","delim","stmt","f","blockstmt","block","reserveName","prefix","this","arity","plusplus","checkLeftSideAssign","reserve","func","FutureReservedWord","relation","apply","beginsUnaryExpression","typeofValues","isTypoTypeof","values","notypeof","es6","es3","inES11","includes","isGlobalEval","isGlobal","assignToken","allowDestructuring","freeze","nativeObject","natives","prototype","walkPrototype","obj","isPredefined","walkNative","findNativePrototype","isMetaProperty","reassign","set","destructAssign","bindingtype","assignop","that","exps","assign","bitwise","bitwiseassignop","suffix","optionalidentifier","isName","preserve","spreadrest","operation","checkPunctuator","reachable","controlToken","inBracelessBlock","reach","parseFinalSemicolon","isUnclosed","isSameLine","blockEnd","asi","lastsemic","statement","hasOwnScope","res","stack","addLabel","labelled","unstack","stmtMissingStrict","expr","nonew","statements","directives","current","directive","inES7","undef","ordinary","isfunc","isfatarrow","iscase","old_indent","metrics","nestedBlockDepth","verifyMaxNestedBlockDepthPerFunction","statementCount","validateParams","curly","supportsFnDecl","declaration","toUpperCase","inMoz","noreturnawait","noempty","countMember","legacy","concat","v","isLoneArrowParam","use","baseTemplateSyntax","template","extend","doTemplateLiteral","noSubst","tail","superNud","call","nocomma","increaseComplexityCount","paren","eqnull","eqeqeq","tag","scripturl","javascriptURL","forgiveUndef","mp","metaProperty","inFunction","opening","evil","newcap","supernew","classDeclaration","className","classNameToken","inClassBody","addbinding","initialized","initialize","classBody","classToken","accessorType","isStatic","inGenerator","hasConstructor","props","create","preAsync","inES9","saveProperty","propertyName","doMethod","infer","computedPropertyName","saveAccessor","checkProperties","generator","doFunction","isMethod","peekThroughParens","parens","pn1","pn","toString","functor","overwrites","createMetrics","leftOrRbp","ctx","depth","end","complete","classExprBinding","isGenerator","isArrow","ignoreLoopFunc","oldOption","oldIgnored","isAsync","tryClause","internallyAccessibleName","add","paramsInfo","ident","paramsIds","pastDefault","pastRest","loneArg","hasDestructuring","addParam","params","isSimple","parsedOpening","currentParams","destructuringPattern","checkPunctuators","addParamArgs","functionparams","verifyMaxParametersPerFunction","noyield","verifyMaxStatementsPerFunction","verifyMaxComplexityPerFunction","loopfunc","join","functionStartToken","ComplexityCount","maxstatements","isNumber","maxparams","maxdepth","max","maxcomplexity","cc","checkCondAssignment","boss","setterToken","getterToken","static","isAssignment","assignment","destructuringPatternRecursive","ids","identifiers","openingParsed","recursiveOptions","firstToken","nextInnerDE","assignTarget","assignmentProperty","isRest","element_after_rest","destructuringPatternMatch","zip","Array","blockVariableStatement","lone","letblock","isLet","isConst","isMozillaLet","names","hasOwnProperty","hasInitializer","hasComma","noarg","immed","n","ret","triggerFnExpr","last","preceeding","isNecessary","singleGroups","application","sub","blocktype","lookupBlockType","isCompArray","esnext","reversed","setState","comprehensiveArrayExpression","isDestAssign","elision","trailingcomma","nextVal","isGeneratorMethod","isAsyncMethod","inObjectBody","conststatement","asyncSymbol","yieldSymbol","letstatement","varstmt","impliedClosure","futurehostile","inexport","export","labelType","enablesStrictMode","forinifcheck","forin","forinifcheckneeded","forinifchecks","hasParameter","catchParameter","each","inES10","withstmt","g","noindent","seenCase","leanswitch","debug","nextop","comma","initializer","bindingPower","targets","target","decl","letscope","foreachtok","afterNext","headContext","hasLabel","isFunc","mozYield","delegatingYield","importSymbol","importName","supportsSuper","moduleSpecifier","ok","setExported","def","exportType","exportedTokens","local","binding","bracketStack","notJson","isClass","isComputed","basic","basictkn","flagName","destructuringAssignOrJsonValue","jsonMode","jsonValue","arrayComprehension","_current","CompArray","mode","variables","_carrays","filter","elt","raw_text","splice","declare","o","proto","iterator","jsonObject","jsonArray","lintEvalCode","globals","priorErrorCount","jdx","internal","itself","escapeRegex","reIgnoreStr","reIgnore","optionKeys","newOptionObj","newIgnoredObj","clone","reset","reservedVars","exported","cb","dict","prop","getOwnPropertyDescriptor","optionKey","scopeManagerInst","on","ev","isJSON","getOption","getCache","cache","setCache","warn","char","listener","bind","removeAllListeners","ignoreDelimiters","delimiterPair","start","RegExp","emit","allowsGlobalUsd","nt","addModule","register","fu","json","impliedGlobals","getImpliedGlobals","implieds","getUsedOrDefinedGlobals","param","lastcharacter","complexity","parameters","unuseds","getUnuseds","jshint","exports"],"sourceRoot":""}